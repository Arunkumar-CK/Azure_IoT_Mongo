[
    {
        "id": "7b229efa69ac7866",
        "type": "tab",
        "label": "Azure IoT Mongo",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8145849ac655a040",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ef35a94e74a28aa9",
        "type": "tab",
        "label": "Flow 3",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "e4d7a9a5f6fa6302",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "168ce6884d330b26",
        "type": "subflow",
        "name": "Azure status and other functions",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 320,
                "y": 260,
                "wires": [
                    {
                        "id": "464205922a79ea08"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 780,
                "y": 220,
                "wires": [
                    {
                        "id": "5ed43246e522db81",
                        "port": 0
                    },
                    {
                        "id": "86f6fa421f27cd15",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "a27b931a44c8fb3e",
        "type": "subflow",
        "name": "Read DB and send data to PLC",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 160,
                "wires": [
                    {
                        "id": "7934c2ca4ef2aa37"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "abf459b12a58a7d6",
        "type": "subflow",
        "name": "Write Database",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 120,
                "wires": [
                    {
                        "id": "9aa8473e67afb64f"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "status",
                "type": "str",
                "value": "1"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b21bd85f55499775",
        "type": "subflow",
        "name": "Acknowlegement from PLC",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1260,
                "y": 340,
                "wires": [
                    {
                        "id": "775d09a2837ea5a3",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "197be159bc54b2ae",
        "type": "subflow",
        "name": "Checks DB and update Dashboard ",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 440,
                "wires": [
                    {
                        "id": "269da99ad6854d15"
                    },
                    {
                        "id": "4dc20537992b729f"
                    },
                    {
                        "id": "2849f627769c0511"
                    },
                    {
                        "id": "f67869a3d5750e15"
                    },
                    {
                        "id": "cfaf7ae9ca9d69fd"
                    },
                    {
                        "id": "c71740018924808f"
                    },
                    {
                        "id": "4d144d3eb1c52ca5"
                    },
                    {
                        "id": "1b87f4bc09144e6d"
                    },
                    {
                        "id": "942798d2e1eb5fb7"
                    },
                    {
                        "id": "263c1c1597d94a51"
                    },
                    {
                        "id": "b9e001f9a56c780c"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "f4ebc30243c09416",
        "type": "ui_group",
        "name": "Task completed",
        "tab": "a91f179c6c2c2418",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8bdab089b2660f17",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "database",
        "name": ""
    },
    {
        "id": "dcc6c8e608e71d82",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "3d78b677.5d2c8a",
        "type": "sqlitedb",
        "db": "C:\\Users\\DELL\\Desktop\\PTL-Python\\SQLite.db",
        "mode": "RWC"
    },
    {
        "id": "2e14670c.5d4c98",
        "type": "mongodb",
        "hostname": "localhost",
        "port": "27017",
        "db": "test",
        "name": ""
    },
    {
        "id": "507905e135e26e8d",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "database",
        "name": ""
    },
    {
        "id": "1dc8f3e6fa36769b",
        "type": "eth-ip endpoint",
        "address": "192.168.2.252",
        "slot": "0",
        "cycletime": "100",
        "timeout": "3000000",
        "name": "AB PLC",
        "connectedMess": true,
        "vartable": {
            "": {
                "WMS_To_Plc_Msg.CommandType": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.rRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.ToX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.sRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.BinId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.pRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.SkuId": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.PickQty": {
                    "type": "DINT"
                },
                "Plc_To_WMS_Msg.rRequestId": {
                    "type": "STRING"
                },
                "Plc_To_WMS_Msg.sRequestId": {
                    "type": "STRING"
                },
                "Plc_To_WMS_Msg.pRequestId": {
                    "type": "STRING"
                },
                "Plc_To_Gateway_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_rRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Gateway_To_Plc_sRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Gateway_To_Plc_pRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Bot1_Storage_Error": {
                    "type": "BOOL"
                },
                "Bot2_Storage_Error": {
                    "type": "BOOL"
                },
                "Machine_Reset_ON": {
                    "type": "BOOL"
                },
                "Enable_Task_Handling": {
                    "type": "BOOL"
                },
                "FlushFIFO_Data": {
                    "type": "BOOL"
                },
                "Cmnd_Startup": {
                    "type": "BOOL"
                },
                "StartUp_Sequence_Number": {
                    "type": "INT"
                },
                "Mover_ID[1].Mover_Running_Seq": {
                    "type": "DINT"
                },
                "Mover_ID[2].Mover_Running_Seq": {
                    "type": "DINT"
                },
                "Mover_ID[1].ForkBot.Input.Single_Left_Storage_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[1].ForkBot.Input.Double_Left_Retrieval_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[2].ForkBot.Input.Single_Left_Storage_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[2].ForkBot.Input.Double_Left_Retrieval_Done": {
                    "type": "BOOL"
                },
                "GatewayMessageSequence_Number": {
                    "type": "INT"
                },
                "Enable_Queue": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "63b7f9e1d917f433",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "database",
        "name": ""
    },
    {
        "id": "78f5dbc37f11cb46",
        "type": "eth-ip endpoint",
        "d": true,
        "address": "192.168.2.252",
        "slot": "0",
        "cycletime": "100",
        "timeout": "3000000",
        "name": "AB PLC",
        "connectedMess": true,
        "vartable": {
            "": {
                "WMS_To_Plc_Msg.CommandType": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.rRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.ToX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.sRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.BinId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.pRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.SkuId": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.PickQty": {
                    "type": "DINT"
                },
                "Plc_To_WMS_Msg.rRequestId": {
                    "type": "STRING"
                },
                "Plc_To_WMS_Msg.sRequestId": {
                    "type": "STRING"
                },
                "Plc_To_WMS_Msg.pRequestId": {
                    "type": "STRING"
                },
                "Plc_To_Gateway_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_rRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Gateway_To_Plc_sRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Gateway_To_Plc_pRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Bot1_Storage_Error": {
                    "type": "BOOL"
                },
                "Bot2_Storage_Error": {
                    "type": "BOOL"
                },
                "Machine_Reset_ON": {
                    "type": "BOOL"
                },
                "Enable_Task_Handling": {
                    "type": "BOOL"
                },
                "FlushFIFO_Data": {
                    "type": "BOOL"
                },
                "Cmnd_Startup": {
                    "type": "BOOL"
                },
                "StartUp_Sequence_Number": {
                    "type": "INT"
                },
                "Mover_ID[1].Mover_Running_Seq": {
                    "type": "DINT"
                },
                "Mover_ID[2].Mover_Running_Seq": {
                    "type": "DINT"
                },
                "Mover_ID[1].ForkBot.Input.Single_Left_Storage_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[1].ForkBot.Input.Double_Left_Retrieval_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[2].ForkBot.Input.Single_Left_Storage_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[2].ForkBot.Input.Double_Left_Retrieval_Done": {
                    "type": "BOOL"
                },
                "GatewayMessageSequence_Number": {
                    "type": "INT"
                },
                "Enable_Queue": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "f4cf08050e338d7b",
        "type": "eth-ip endpoint",
        "d": true,
        "address": "192.168.1.10",
        "slot": "0",
        "cycletime": "100",
        "timeout": "3000000",
        "name": "AB PLC",
        "connectedMess": true,
        "vartable": {
            "": {
                "WMS_To_Plc_Msg.CommandType": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.rRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.ToX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.sRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.BinId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.pRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.SkuId": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.PickQty": {
                    "type": "DINT"
                },
                "Plc_To_WMS_Msg.rRequestId": {
                    "type": "STRING"
                },
                "Plc_To_WMS_Msg.sRequestId": {
                    "type": "STRING"
                },
                "Plc_To_WMS_Msg.pRequestId": {
                    "type": "STRING"
                },
                "Plc_To_Gateway_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_rRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Gateway_To_Plc_sRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Gateway_To_Plc_pRequest_Id_Ack": {
                    "type": "STRING"
                }
            }
        }
    },
    {
        "id": "c73c6e8830fe35d9",
        "type": "ui_group",
        "name": "Audio Switch",
        "tab": "a91f179c6c2c2418",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b99d0e74b9dec824",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d588eb81b40b80e4",
        "type": "ui_group",
        "name": "Errors Task",
        "tab": "a91f179c6c2c2418",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "de98f73122196c31",
        "type": "ui_group",
        "name": "Cloud message",
        "tab": "a91f179c6c2c2418",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2b285486d89a8590",
        "type": "ui_group",
        "name": "Task running ",
        "tab": "a91f179c6c2c2418",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7ad2fde08d3c125b",
        "type": "ui_group",
        "name": "Queue",
        "tab": "a91f179c6c2c2418",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b4335eaebfb5e52e",
        "type": "ui_group",
        "name": "Mongo Database ",
        "tab": "a91f179c6c2c2418",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a33c66870cf55623",
        "type": "ui_group",
        "z": "197be159bc54b2ae",
        "name": "Connectivity Status",
        "tab": "a91f179c6c2c2418",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "665fc710f07e9176",
        "type": "ui_tab",
        "z": "197be159bc54b2ae",
        "name": "Carte+ Edge status",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a91f179c6c2c2418",
        "type": "ui_tab",
        "name": "Carte+ Edge status ",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b6d442773ab02f11",
        "type": "ui_group",
        "name": "Default",
        "tab": "b99d0e74b9dec824",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "156920f453365021",
        "type": "mongodb",
        "hostname": "cluster0.2cqeiyz.mongodb.net",
        "topology": "dnscluster",
        "connectOptions": "",
        "port": "27017",
        "db": "DB",
        "name": ""
    },
    {
        "id": "27c5ea1ebf19dc8a",
        "type": "ui_group",
        "name": "Task finder",
        "tab": "a91f179c6c2c2418",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4d34c76433d21e82",
        "type": "ui_group",
        "name": "Error logs",
        "tab": "a91f179c6c2c2418",
        "order": 10,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e168fe07.e05568",
        "type": "ui_group",
        "name": "Default",
        "tab": "b0f5ca10.18f598",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b0f5ca10.18f598",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "828d7d3a.6c4e7",
        "type": "ui_group",
        "name": "Default",
        "tab": "4b4da34e.e4e1f8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4b4da34e.e4e1f8",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2a0e0cc7.4d9c72",
        "type": "ui_group",
        "name": "Default",
        "tab": "c59b5766.9b87e8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c59b5766.9b87e8",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "03d636e3e0237e20",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 22",
        "func": "global.set(\"countercopied\", 0);\nglobal.set(\"queuecounter\", 0);\nglobal.set(\"reqcountercopied\", 0);\nglobal.set(\"reqqueuecounter\", 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "c26b67d15dfeca1c",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 410,
        "y": 720,
        "wires": [
            [
                "03d636e3e0237e20"
            ]
        ]
    },
    {
        "id": "86f6fa421f27cd15",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "connect first scan",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 610,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "5ed43246e522db81",
        "type": "trigger",
        "z": "168ce6884d330b26",
        "name": "",
        "op1": "\"\"",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 620,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "464205922a79ea08",
        "type": "switch",
        "z": "168ce6884d330b26",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Disconnected",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Error",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 430,
        "y": 260,
        "wires": [
            [
                "5ed43246e522db81"
            ],
            [
                "5ed43246e522db81"
            ],
            [
                "0d13f8d48dc2412e"
            ]
        ]
    },
    {
        "id": "0d13f8d48dc2412e",
        "type": "change",
        "z": "168ce6884d330b26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 300,
        "wires": [
            [
                "5ed43246e522db81"
            ]
        ]
    },
    {
        "id": "cd0a13b3141e0712",
        "type": "ui_audio",
        "z": "168ce6884d330b26",
        "name": "",
        "group": "f4ebc30243c09416",
        "voice": "Google UK English Female",
        "always": false,
        "x": 780,
        "y": 700,
        "wires": []
    },
    {
        "id": "e5c4e1f93d77aedf",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 19",
        "func": "var sw=msg.payload;\nif (sw == true) \n{\nmsg.payload=\"alarm Enabled \";\n}\nelse \n{\nmsg.payload=\"alarm disabled \";\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 600,
        "wires": [
            [
                "cd0a13b3141e0712"
            ]
        ]
    },
    {
        "id": "0d63375035b604f0",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 24",
        "func": "if (msg.payload == true) {\n    msg.payload = \"Bot 1 Emulate3d Error\";\n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 640,
        "wires": [
            [
                "cd0a13b3141e0712"
            ]
        ]
    },
    {
        "id": "e860f97e60f7f5b4",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 25",
        "func": "msg.payload = \"Acknowledgement Request Queue Unload Stopped\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 760,
        "wires": [
            [
                "cd0a13b3141e0712"
            ]
        ]
    },
    {
        "id": "2d667b62586bab62",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 26",
        "func": "if(msg.payload == true){\nmsg.payload = \"Bot 2 Emulate3d Error\";\nreturn msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 680,
        "wires": [
            [
                "cd0a13b3141e0712"
            ]
        ]
    },
    {
        "id": "d123c5dd50c6f2e9",
        "type": "ui_switch",
        "z": "168ce6884d330b26",
        "d": true,
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "f4ebc30243c09416",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 410,
        "y": 600,
        "wires": [
            [
                "e5c4e1f93d77aedf"
            ]
        ]
    },
    {
        "id": "b9396654d36322d6",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "Task Request QUeue Stopped",
        "func": "var counter=global.get(\"reqqueuecounter\");\nvar ccopied = global.get(\"reqcountercopied\");\nif (counter==ccopied && counter!=0){\n    msg.payload =\"Queue Failure\";\n    return msg;\n}\nelse{\n   // msg.payload =\"Queue Okay\"\nglobal.set(\"reqcountercopied\", counter);\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 760,
        "wires": [
            [
                "e860f97e60f7f5b4"
            ]
        ]
    },
    {
        "id": "19d6d3c011b64e35",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 760,
        "wires": [
            [
                "b9396654d36322d6"
            ]
        ]
    },
    {
        "id": "5c4b2afac6e86f44",
        "type": "eth-ip in",
        "z": "168ce6884d330b26",
        "endpoint": "1dc8f3e6fa36769b",
        "mode": "single",
        "variable": "Bot1_Storage_Error",
        "program": "",
        "name": "",
        "x": 370,
        "y": 640,
        "wires": [
            [
                "0d63375035b604f0"
            ]
        ]
    },
    {
        "id": "2fc8432112c78d28",
        "type": "eth-ip in",
        "z": "168ce6884d330b26",
        "endpoint": "1dc8f3e6fa36769b",
        "mode": "single",
        "variable": "Bot2_Storage_Error",
        "program": "",
        "name": "",
        "x": 370,
        "y": 680,
        "wires": [
            [
                "2d667b62586bab62"
            ]
        ]
    },
    {
        "id": "c35329e490967af3",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "",
        "func": "var Randomnumber = global.get(\"sequenceId\");\nmsg.payload = Randomnumber;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 380,
        "wires": [
            [
                "c13f89b5a9f77de8"
            ]
        ]
    },
    {
        "id": "1ae4a5de4fe181c8",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "Task2",
        "props": [],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 420,
        "y": 380,
        "wires": [
            [
                "c35329e490967af3"
            ]
        ]
    },
    {
        "id": "5b0c921e515d49d7",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "send id to plc continously",
        "props": [],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 360,
        "y": 500,
        "wires": [
            [
                "3ce75bca1545495d",
                "f26e4b53bf9f2a36",
                "e6ca2d2a1b1a3da7"
            ]
        ]
    },
    {
        "id": "3ce75bca1545495d",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "",
        "func": "msg.payload  = global.get (\"Gateway_To_Plc_rRequest_Id_Ack\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 460,
        "wires": [
            [
                "291330fa96143469"
            ]
        ]
    },
    {
        "id": "f26e4b53bf9f2a36",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "",
        "func": "msg.payload  = global.get (\"Gateway_To_Plc_sRequest_Id_Ack\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 500,
        "wires": [
            [
                "ac33b1cfb1d8f8ab"
            ]
        ]
    },
    {
        "id": "e6ca2d2a1b1a3da7",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "",
        "func": "msg.payload  = global.get (\"Gateway_To_Plc_pRequest_Id_Ack\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 540,
        "wires": [
            [
                "e38f5f7a2d039940"
            ]
        ]
    },
    {
        "id": "c13f89b5a9f77de8",
        "type": "eth-ip out",
        "z": "168ce6884d330b26",
        "d": true,
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "Gateway_To_Plc_Msg_Id",
        "program": "",
        "name": "",
        "x": 790,
        "y": 380,
        "wires": []
    },
    {
        "id": "291330fa96143469",
        "type": "eth-ip out",
        "z": "168ce6884d330b26",
        "d": true,
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "Gateway_To_Plc_rRequest_Id_Ack",
        "program": "",
        "name": "",
        "x": 820,
        "y": 460,
        "wires": []
    },
    {
        "id": "ac33b1cfb1d8f8ab",
        "type": "eth-ip out",
        "z": "168ce6884d330b26",
        "d": true,
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "Gateway_To_Plc_sRequest_Id_Ack",
        "program": "",
        "name": "",
        "x": 820,
        "y": 500,
        "wires": []
    },
    {
        "id": "e38f5f7a2d039940",
        "type": "eth-ip out",
        "z": "168ce6884d330b26",
        "d": true,
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "Gateway_To_Plc_pRequest_Id_Ack",
        "program": "",
        "name": "",
        "x": 820,
        "y": 540,
        "wires": []
    },
    {
        "id": "04db87075c2dc32a",
        "type": "mongodb out",
        "z": "a27b931a44c8fb3e",
        "mongodb": "8bdab089b2660f17",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 1160,
        "y": 160,
        "wires": []
    },
    {
        "id": "a4f36c4de9f991e5",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "function 31",
        "func": "msg.query = { \"_id\": msg.payload[0]._id};\nmsg.payload = msg.payload[0];\nmsg.payload.ran_num = global.get(\"plctrigger\");\nmsg.payload.status = \"Sent to PLC\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 160,
        "wires": [
            [
                "04db87075c2dc32a",
                "4eceaefe693f31c7"
            ]
        ]
    },
    {
        "id": "4b230ef305221d80",
        "type": "mongodb in",
        "z": "a27b931a44c8fb3e",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 670,
        "y": 160,
        "wires": [
            [
                "e426270bc9c054d7",
                "0e36b6fcbd1a75fe"
            ]
        ]
    },
    {
        "id": "7d0cb4005397cfab",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "function 32",
        "func": "msg.payload = { \"status\": \"Recieved from cloud\" }\nmsg.limit = 1\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 160,
        "wires": [
            [
                "4b230ef305221d80"
            ]
        ]
    },
    {
        "id": "4eceaefe693f31c7",
        "type": "link out",
        "z": "a27b931a44c8fb3e",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "2ddfbeabf9c20d7c"
        ],
        "x": 1085,
        "y": 200,
        "wires": []
    },
    {
        "id": "d0f30ea23840756b",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "WMS_To_Plc_Msg.FromY",
        "program": "",
        "name": "",
        "x": 840,
        "y": 360,
        "wires": []
    },
    {
        "id": "05615c6ffb8c76ca",
        "type": "switch",
        "z": "a27b931a44c8fb3e",
        "name": "",
        "property": "msg.payload.commandType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 580,
        "wires": [
            [
                "18d9ed25750eaacc"
            ],
            [
                "348c34c1be905d11"
            ]
        ]
    },
    {
        "id": "2ddfbeabf9c20d7c",
        "type": "link in",
        "z": "a27b931a44c8fb3e",
        "name": "link in 1",
        "links": [
            "4eceaefe693f31c7"
        ],
        "x": 245,
        "y": 580,
        "wires": [
            [
                "05615c6ffb8c76ca"
            ]
        ]
    },
    {
        "id": "5d49c8b9a40cb62e",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "WMS_To_Plc_Msg.CommandType",
        "program": "",
        "name": "",
        "x": 860,
        "y": 240,
        "wires": []
    },
    {
        "id": "700950aa7917fe62",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "WMS_To_Plc_Msg.BinId",
        "program": "",
        "name": "",
        "x": 830,
        "y": 280,
        "wires": []
    },
    {
        "id": "60f9d0af5119bf7f",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "WMS_To_Plc_Msg.FromX",
        "program": "",
        "name": "",
        "x": 840,
        "y": 320,
        "wires": []
    },
    {
        "id": "1702b6742423ba80",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "WMS_To_Plc_Msg.FromZ",
        "program": "",
        "name": "",
        "x": 830,
        "y": 400,
        "wires": []
    },
    {
        "id": "d511083cb31c8256",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "WMS_To_Plc_Msg.rRequestId",
        "program": "",
        "name": "",
        "x": 850,
        "y": 440,
        "wires": []
    },
    {
        "id": "a740b5b7c6eed77e",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "WMS_To_Plc_Msg.ToX",
        "program": "",
        "name": "",
        "x": 830,
        "y": 480,
        "wires": []
    },
    {
        "id": "ae6b4705327fd6ac",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "WMS_To_Plc_Msg.ToY",
        "program": "",
        "name": "",
        "x": 830,
        "y": 520,
        "wires": []
    },
    {
        "id": "4332c8c3f18a3ba9",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "WMS_To_Plc_Msg.ToZ",
        "program": "",
        "name": "",
        "x": 830,
        "y": 560,
        "wires": []
    },
    {
        "id": "f0c9608b9435acc7",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "WMS_To_Plc_Msg.sRequestId",
        "program": "",
        "name": "",
        "x": 850,
        "y": 600,
        "wires": []
    },
    {
        "id": "a29c58d18ee8e1f6",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "WMS_To_Plc_Msg.SkuId",
        "program": "",
        "name": "",
        "x": 830,
        "y": 740,
        "wires": []
    },
    {
        "id": "c33aad591171d6db",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "WMS_To_Plc_Msg.PickQty",
        "program": "",
        "name": "",
        "x": 840,
        "y": 780,
        "wires": []
    },
    {
        "id": "cd00977dfc86db92",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "WMS_To_Plc_Msg.pRequestId",
        "program": "",
        "name": "",
        "x": 850,
        "y": 820,
        "wires": []
    },
    {
        "id": "4cdacc2041215b66",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "WMS_To_Plc_Msg.CommandType",
        "program": "",
        "name": "",
        "x": 860,
        "y": 660,
        "wires": []
    },
    {
        "id": "c37844af36f37abd",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "WMS_To_Plc_Msg.BinId",
        "program": "",
        "name": "",
        "x": 830,
        "y": 700,
        "wires": []
    },
    {
        "id": "e426270bc9c054d7",
        "type": "switch",
        "z": "a27b931a44c8fb3e",
        "name": "",
        "property": "msg.payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 160,
        "wires": [
            [
                "a4f36c4de9f991e5"
            ]
        ]
    },
    {
        "id": "9e8c32e4c953f752",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "generate random number for msg id to plc",
        "func": "var ggSeqName = \"sequenceId\";\nvar seq = global.get(ggSeqName) ||\n    Math.floor(Math.random() * 1000 * 1000 * 1000);\nseq = seq + 1;\nglobal.set(ggSeqName, seq);\nmsg.payload =  seq;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 860,
        "wires": [
            [
                "ffd96c15bedbb489"
            ]
        ]
    },
    {
        "id": "7934c2ca4ef2aa37",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Trigger",
        "func": "global.set(\"trigger\", 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 160,
        "wires": [
            [
                "7d0cb4005397cfab"
            ]
        ]
    },
    {
        "id": "0e36b6fcbd1a75fe",
        "type": "switch",
        "z": "a27b931a44c8fb3e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 40,
        "wires": [
            [
                "1c0765eb6def404b"
            ],
            [
                "5d11bf13794e10fb"
            ]
        ]
    },
    {
        "id": "587418d4871553e2",
        "type": "switch",
        "z": "a27b931a44c8fb3e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 20,
        "wires": [
            [
                "7d0cb4005397cfab"
            ]
        ]
    },
    {
        "id": "5d11bf13794e10fb",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Updated Trigger",
        "func": "global.set(\"trigger\", 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "1c0765eb6def404b",
        "type": "delay",
        "z": "a27b931a44c8fb3e",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 570,
        "y": 20,
        "wires": [
            [
                "20f3e85c1e542ce6"
            ]
        ]
    },
    {
        "id": "20f3e85c1e542ce6",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Checks trigger state",
        "func": "msg.payload = global.get(\"trigger\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 20,
        "wires": [
            [
                "587418d4871553e2"
            ]
        ]
    },
    {
        "id": "18d9ed25750eaacc",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Message splitter",
        "func": "var msg1 = { payload: msg.payload.commandType };\nvar msg2 = { payload: msg.payload.binId };\nvar msg3 = { payload: msg.payload.fromX};\nvar msg4 = { payload: msg.payload.fromY };\nvar msg5 = { payload: msg.payload.fromZ };\nvar msg6 = { payload: msg.payload.rRequestId };\nvar msg7 = { payload: msg.payload.toX };\nvar msg8 = { payload: msg.payload.toY };\nvar msg9 = { payload: msg.payload.toZ };\nvar msg10 = { payload: msg.payload.sRequestId };\nvar msg11 = { payload: \"Generate random number\" };\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10, msg11];\n\n",
        "outputs": 11,
        "noerr": 0,
        "initialize": "",
        "finalize": "\n",
        "libs": [],
        "x": 540,
        "y": 420,
        "wires": [
            [
                "5d49c8b9a40cb62e"
            ],
            [
                "700950aa7917fe62"
            ],
            [
                "60f9d0af5119bf7f"
            ],
            [
                "d0f30ea23840756b"
            ],
            [
                "1702b6742423ba80"
            ],
            [
                "d511083cb31c8256"
            ],
            [
                "a740b5b7c6eed77e"
            ],
            [
                "ae6b4705327fd6ac"
            ],
            [
                "4332c8c3f18a3ba9"
            ],
            [
                "f0c9608b9435acc7"
            ],
            [
                "f403b45544711bd7"
            ]
        ]
    },
    {
        "id": "348c34c1be905d11",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Message splitter",
        "func": "var msg1 = { payload: msg.payload.commandType };\nvar msg2 = { payload: msg.payload.binId };\nvar msg3 = { payload: msg.payload.skuId};\nvar msg4 = { payload: msg.payload.pickQty };\nvar msg5 = { payload: msg.payload.pRequestId };\nvar msg6 = { payload: \"Generate random number\" };\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6];\n\n",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 760,
        "wires": [
            [
                "4cdacc2041215b66"
            ],
            [
                "c37844af36f37abd"
            ],
            [
                "a29c58d18ee8e1f6"
            ],
            [
                "c33aad591171d6db"
            ],
            [
                "cd00977dfc86db92"
            ],
            [
                "f403b45544711bd7"
            ]
        ]
    },
    {
        "id": "f403b45544711bd7",
        "type": "delay",
        "z": "a27b931a44c8fb3e",
        "name": "Safety Delay",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 790,
        "y": 860,
        "wires": [
            [
                "9e8c32e4c953f752"
            ]
        ]
    },
    {
        "id": "ffd96c15bedbb489",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "1dc8f3e6fa36769b",
        "variable": "Gateway_To_Plc_Msg_Id",
        "program": "",
        "name": "",
        "x": 1330,
        "y": 860,
        "wires": []
    },
    {
        "id": "9aa8473e67afb64f",
        "type": "function",
        "z": "abf459b12a58a7d6",
        "name": "Convert BSON to JSON",
        "func": "const bufferData = msg.payload;\nconst jsonString = bufferData.toString('utf-8');\nconst dataObject = JSON.parse(jsonString);\nmsg.payload = dataObject;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 120,
        "wires": [
            [
                "a5c0beb60a335eb4",
                "4650798c501a1606"
            ]
        ]
    },
    {
        "id": "89f9675ed297ef66",
        "type": "mongodb out",
        "z": "abf459b12a58a7d6",
        "mongodb": "8bdab089b2660f17",
        "name": "Insert",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 770,
        "y": 120,
        "wires": []
    },
    {
        "id": "a5c0beb60a335eb4",
        "type": "function",
        "z": "abf459b12a58a7d6",
        "name": "function 30",
        "func": "const now = new Date();\nconst hours = now.getHours().toString().padStart(2, '0');\nconst minutes = now.getMinutes().toString().padStart(2, '0');\nconst seconds = now.getSeconds().toString().padStart(2, '0');\nconst day = now.getDate().toString().padStart(2, '0');\nconst month = (now.getMonth() + 1).toString().padStart(2, '0'); // Note: months are 0-indexed\nconst year = now.getFullYear().toString().slice(-4); // Get last 2 digits of the year\nconst time = `${hours}.${minutes}.${seconds}, ${day}-${month}-${year}`;\nmsg.payload.time_recieved_from_cloud = time;\nmsg.payload.status = \"Recieved from cloud\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 120,
        "wires": [
            [
                "89f9675ed297ef66"
            ]
        ]
    },
    {
        "id": "818ea5d21bec3bb3",
        "type": "function",
        "z": "abf459b12a58a7d6",
        "name": "Prepare random data",
        "func": "if (!flow.get('counter')) {\n    flow.set('counter', 0);\n}\n\nvar counter = flow.get('counter') + 1;\nflow.set('counter', counter);\n\nvar characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789012345678901234567890123456789012345678901234567890123456789';\nvar str5 = '', str1 = '', str2 = '', str3 = '', str4 = '', rrequest = '', srequest = '';\nvar binid ='BPTC02-37-0-1-3'\nfor (var i = 0; i < 8; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str1 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str2 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str3 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str4 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 12; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str5 += characters.charAt(randomIndex);\n}\nrrequest = str1 + '-' + str2 + '-' + str3 + '-' + str4 + '-' + str5;\n\nstr1 = str2 = str3 = str4 = str5=''\n\nfor (var i = 0; i < 8; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str1 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str2 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str3 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str4 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 12; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str5 += characters.charAt(randomIndex);\n}\nsrequest = str1 + '-' + str2 + '-' + str3 + '-' + str4 + '-' + str5;\nmsg.payload={ \n    \"binId\": \"TOTE0101010\" + counter, \n    \"commandType\": 1, \n    \"rRequestId\": rrequest, \n    \"sRequestId\": srequest, \n    \"toX\": 1, \"toY\": 1, \"toZ\": 1, \n    \"fromX\": 12, \"fromY\": 4, \"fromZ\": 1 \n    }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "d09ccbad2c64cbaf",
        "type": "inject",
        "z": "abf459b12a58a7d6",
        "name": "Manual Inject Data",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 180,
        "y": 40,
        "wires": [
            [
                "818ea5d21bec3bb3"
            ]
        ]
    },
    {
        "id": "4650798c501a1606",
        "type": "switch",
        "z": "abf459b12a58a7d6",
        "name": "",
        "property": "msg.payload.commandType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 220,
        "wires": [
            [
                "adf115c0cf6bb49f"
            ]
        ]
    },
    {
        "id": "adf115c0cf6bb49f",
        "type": "function",
        "z": "abf459b12a58a7d6",
        "name": "",
        "func": "var time = new Date();\nmsg.payload = {\n    \"message\":msg.payload,\n    \"timestamp\":time\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 220,
        "wires": [
            [
                "ddc7edb10406e859"
            ]
        ]
    },
    {
        "id": "ddc7edb10406e859",
        "type": "file",
        "z": "abf459b12a58a7d6",
        "name": "",
        "filename": "C:\\Datalog\\cloudmessage.csv",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 840,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "bc7e839c7307e51c",
        "type": "eth-ip in",
        "z": "b21bd85f55499775",
        "endpoint": "1dc8f3e6fa36769b",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.sRequestId",
        "program": "",
        "name": "",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "eed806a91dd01b8c",
                "d00dc15cf41ed2af",
                "926072810e121b35"
            ]
        ]
    },
    {
        "id": "eed806a91dd01b8c",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "sRequestId",
        "func": "global.set(\"Gateway_To_Plc_sRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 180,
        "wires": [
            [
                "e94bc83a49cb729c"
            ]
        ]
    },
    {
        "id": "d00dc15cf41ed2af",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n    \"requestId\": msg.payload\n}\n\nmsg.payload = JSON.stringify(msg.payload)\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 240,
        "wires": [
            [
                "587d4878410cd170"
            ]
        ]
    },
    {
        "id": "926072810e121b35",
        "type": "link out",
        "z": "b21bd85f55499775",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "95a946ace8a5fdca",
            "cd46044f67effb76",
            "b166343f67af5b0c"
        ],
        "x": 385,
        "y": 220,
        "wires": []
    },
    {
        "id": "e94bc83a49cb729c",
        "type": "file",
        "z": "b21bd85f55499775",
        "name": "",
        "filename": "C:\\Datalog\\sRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 680,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "587d4878410cd170",
        "type": "simple-queue",
        "z": "b21bd85f55499775",
        "name": "",
        "firstMessageBypass": true,
        "bypassInterval": "0",
        "x": 950,
        "y": 300,
        "wires": [
            [
                "6563915a9e175031",
                "775d09a2837ea5a3"
            ]
        ]
    },
    {
        "id": "9b58794d1f21e9cf",
        "type": "change",
        "z": "b21bd85f55499775",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "queueCount",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 480,
        "wires": [
            [
                "587d4878410cd170"
            ]
        ]
    },
    {
        "id": "db43e39ce6b1ef3c",
        "type": "change",
        "z": "b21bd85f55499775",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 420,
        "wires": [
            [
                "587d4878410cd170"
            ]
        ]
    },
    {
        "id": "fd0aab21a3f963f0",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n  \"requestId\": msg.payload\n}\n\nmsg.payload = JSON.stringify(msg.payload)\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 340,
        "wires": [
            [
                "587d4878410cd170"
            ]
        ]
    },
    {
        "id": "7dfe1b0d862f6960",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n  \"requestId\": msg.payload\n}\n\nmsg.payload = JSON.stringify(msg.payload)\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 140,
        "wires": [
            [
                "587d4878410cd170"
            ]
        ]
    },
    {
        "id": "6563915a9e175031",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "Queue Count Capture",
        "func": "var count =msg._queueCount;\nglobal.set(\"reqqueuecounter\", count);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "775d09a2837ea5a3",
        "type": "switch",
        "z": "b21bd85f55499775",
        "name": "",
        "property": "msg.payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1130,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "206b330784552903",
        "type": "inject",
        "z": "b21bd85f55499775",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 370,
        "y": 500,
        "wires": [
            [
                "9b58794d1f21e9cf"
            ]
        ]
    },
    {
        "id": "57362a726bfb32a0",
        "type": "switch",
        "z": "b21bd85f55499775",
        "name": "",
        "property": "Azure1Status",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disconnected",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 470,
        "y": 420,
        "wires": [
            [],
            [],
            [
                "db43e39ce6b1ef3c"
            ]
        ]
    },
    {
        "id": "c457d1ed87fa5308",
        "type": "eth-ip in",
        "z": "b21bd85f55499775",
        "endpoint": "1dc8f3e6fa36769b",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.pRequestId",
        "program": "",
        "name": "",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "e5da2a3c75866743",
                "fd0aab21a3f963f0",
                "24ea2502f7362e25"
            ]
        ]
    },
    {
        "id": "d196634cf360d7ad",
        "type": "eth-ip in",
        "z": "b21bd85f55499775",
        "endpoint": "1dc8f3e6fa36769b",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.rRequestId",
        "program": "",
        "name": "",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "c593c96a94a695b5",
                "7dfe1b0d862f6960",
                "1db70c93e855a135"
            ]
        ]
    },
    {
        "id": "60d5d5d3e28f39f3",
        "type": "inject",
        "z": "b21bd85f55499775",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1.5",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 420,
        "wires": [
            [
                "57362a726bfb32a0"
            ]
        ]
    },
    {
        "id": "e5da2a3c75866743",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "pRequestId",
        "func": "global.set(\"Gateway_To_Plc_pRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 280,
        "wires": [
            [
                "6b683397dd449fc5"
            ]
        ]
    },
    {
        "id": "24ea2502f7362e25",
        "type": "link out",
        "z": "b21bd85f55499775",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "f6415885ca6b290a"
        ],
        "x": 385,
        "y": 320,
        "wires": []
    },
    {
        "id": "c593c96a94a695b5",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "rRequestId",
        "func": "global.set(\"Gateway_To_Plc_rRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 80,
        "wires": [
            [
                "9cd409e327f8a1b4"
            ]
        ]
    },
    {
        "id": "1db70c93e855a135",
        "type": "link out",
        "z": "b21bd85f55499775",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "1b6e432bd20c4993"
        ],
        "x": 375,
        "y": 120,
        "wires": []
    },
    {
        "id": "6b683397dd449fc5",
        "type": "file",
        "z": "b21bd85f55499775",
        "name": "",
        "filename": "C:\\Datalog\\pRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 680,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "9cd409e327f8a1b4",
        "type": "file",
        "z": "b21bd85f55499775",
        "name": "",
        "filename": "C:\\Datalog\\rRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 700,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "12a58724ddade1e8",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 33",
        "func": "msg.payload = { \"sRequestId\": msg.payload}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 620,
        "wires": [
            [
                "52ebbb88cf12c53c"
            ]
        ]
    },
    {
        "id": "d60c399fc8adb2c7",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 34",
        "func": "msg.payload = { \"PRequestId\": msg.payload}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 700,
        "wires": [
            [
                "4726f78b4cd6ea9a"
            ]
        ]
    },
    {
        "id": "95a946ace8a5fdca",
        "type": "link in",
        "z": "b21bd85f55499775",
        "name": "link in 3",
        "links": [
            "926072810e121b35"
        ],
        "x": 305,
        "y": 620,
        "wires": [
            [
                "12a58724ddade1e8"
            ]
        ]
    },
    {
        "id": "f6415885ca6b290a",
        "type": "link in",
        "z": "b21bd85f55499775",
        "name": "link in 4",
        "links": [
            "24ea2502f7362e25"
        ],
        "x": 305,
        "y": 700,
        "wires": [
            [
                "d60c399fc8adb2c7"
            ]
        ]
    },
    {
        "id": "1b6e432bd20c4993",
        "type": "link in",
        "z": "b21bd85f55499775",
        "name": "link in 5",
        "links": [
            "1db70c93e855a135"
        ],
        "x": 305,
        "y": 760,
        "wires": [
            [
                "ca16a37db5227346"
            ]
        ]
    },
    {
        "id": "ca16a37db5227346",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 35",
        "func": "msg.payload = { \"rRequestId\": msg.payload }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 760,
        "wires": [
            [
                "9c71686891dc73db"
            ]
        ]
    },
    {
        "id": "9c71686891dc73db",
        "type": "mongodb in",
        "z": "b21bd85f55499775",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 610,
        "y": 760,
        "wires": [
            [
                "7c95d675bc9d596e"
            ]
        ]
    },
    {
        "id": "7c95d675bc9d596e",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 36",
        "func": "msg.query = { \"_id\": msg.payload[0]._id }\nmsg.payload = msg.payload[0]\n\nmsg.payload.status = \"rRequest recieved from PLC\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 760,
        "wires": [
            [
                "a755d98a29858474"
            ]
        ]
    },
    {
        "id": "a755d98a29858474",
        "type": "mongodb out",
        "z": "b21bd85f55499775",
        "mongodb": "8bdab089b2660f17",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 940,
        "y": 760,
        "wires": []
    },
    {
        "id": "52ebbb88cf12c53c",
        "type": "mongodb in",
        "z": "b21bd85f55499775",
        "mongodb": "63b7f9e1d917f433",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 610,
        "y": 620,
        "wires": [
            [
                "94be1ed149e32997"
            ]
        ]
    },
    {
        "id": "afe90f0d4829a716",
        "type": "mongodb out",
        "z": "b21bd85f55499775",
        "mongodb": "63b7f9e1d917f433",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 940,
        "y": 620,
        "wires": []
    },
    {
        "id": "6742fbf1e7160334",
        "type": "mongodb out",
        "z": "b21bd85f55499775",
        "mongodb": "63b7f9e1d917f433",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 940,
        "y": 700,
        "wires": []
    },
    {
        "id": "496d7474ddb8b782",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 41",
        "func": "msg.query = { \"_id\": msg.payload[0]._id}\nmsg.payload = msg.payload[0]\n\nmsg.payload.status = \"pRequest recieved from PLC\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 700,
        "wires": [
            [
                "6742fbf1e7160334"
            ]
        ]
    },
    {
        "id": "4726f78b4cd6ea9a",
        "type": "mongodb in",
        "z": "b21bd85f55499775",
        "mongodb": "63b7f9e1d917f433",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 610,
        "y": 700,
        "wires": [
            [
                "496d7474ddb8b782"
            ]
        ]
    },
    {
        "id": "94be1ed149e32997",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 40",
        "func": "msg.query = { \"_id\": msg.payload[0]._id}\nmsg.payload = msg.payload[0]\nif (msg.payload.status == \"rRequest recieved from PLC\" || msg.payload.status == \"rRequest and sRequest recieved from PLC\") \n{\n    msg.payload.status = \"rRequest and sRequest recieved from PLC\"\n}\nelse\n{ \n    msg.payload.status = \"Error: sRequest recieved and rRequest missing from PLC\" \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 620,
        "wires": [
            [
                "afe90f0d4829a716"
            ]
        ]
    },
    {
        "id": "1b87f4bc09144e6d",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 58",
        "func": "msg.payload = { \"sRequestId\": { $ne: null },  \"status\": \"Sent to PLC\" }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 180,
        "wires": [
            [
                "aa81741e1f8356bc"
            ]
        ]
    },
    {
        "id": "aa81741e1f8356bc",
        "type": "mongodb in",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 430,
        "y": 180,
        "wires": [
            [
                "91a82664cc1a69a8"
            ]
        ]
    },
    {
        "id": "91a82664cc1a69a8",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 59",
        "func": "const payload = msg.payload;\n\nif (Array.isArray(payload)) \n{\n    const numberOfObjects = payload.length;\n    msg.payload = numberOfObjects;\n    return msg;\n} else \n{  \n    msg.payload = 0; \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 180,
        "wires": [
            [
                "afc42e95e5173537"
            ]
        ]
    },
    {
        "id": "afc42e95e5173537",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "2b285486d89a8590",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Both rRequest and sRequest not recieved ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": 16,
        "color": "#ff7300",
        "x": 820,
        "y": 180,
        "wires": []
    },
    {
        "id": "942798d2e1eb5fb7",
        "type": "mongodb in",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 430,
        "y": 300,
        "wires": [
            [
                "5696c98c05aaa09f"
            ]
        ]
    },
    {
        "id": "5696c98c05aaa09f",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 60",
        "func": "const payload = msg.payload;\n\nif (Array.isArray(payload)) \n{\n    const numberOfObjects = payload.length;\n    msg.payload = numberOfObjects;\n    return msg;\n} else \n{  \n    msg.payload = 0; \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 300,
        "wires": [
            [
                "955b74843ad2b109"
            ]
        ]
    },
    {
        "id": "955b74843ad2b109",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "de98f73122196c31",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Total messages received from cloud",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 800,
        "y": 300,
        "wires": []
    },
    {
        "id": "4d144d3eb1c52ca5",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 61",
        "func": "msg.payload = { \"status\": \"Recieved from cloud\" }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 360,
        "wires": [
            [
                "447bb018602b924a"
            ]
        ]
    },
    {
        "id": "447bb018602b924a",
        "type": "mongodb in",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 430,
        "y": 360,
        "wires": [
            [
                "6a8c10f8c99c039e"
            ]
        ]
    },
    {
        "id": "6a8c10f8c99c039e",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 62",
        "func": "const payload = msg.payload;\n\nif (Array.isArray(payload)) \n{\n    const numberOfObjects = payload.length;\n    msg.payload = numberOfObjects;\n    return msg;\n} else \n{  \n    msg.payload = 0; \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 360,
        "wires": [
            [
                "32506cf446f5bf10"
            ]
        ]
    },
    {
        "id": "32506cf446f5bf10",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "7ad2fde08d3c125b",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Queue count in MongoDB",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 770,
        "y": 360,
        "wires": []
    },
    {
        "id": "c71740018924808f",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 63",
        "func": "msg.payload = { \"status\": \"rRequest recieved from PLC\" }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 420,
        "wires": [
            [
                "dbf041e9613a2204"
            ]
        ]
    },
    {
        "id": "dbf041e9613a2204",
        "type": "mongodb in",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 430,
        "y": 420,
        "wires": [
            [
                "66c10fd9a8dc2443"
            ]
        ]
    },
    {
        "id": "66c10fd9a8dc2443",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 64",
        "func": "const payload = msg.payload;\n\nif (Array.isArray(payload)) \n{\n    const numberOfObjects = payload.length;\n    msg.payload = numberOfObjects;\n    return msg;\n} else \n{  \n    msg.payload = 0; \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 420,
        "wires": [
            [
                "b607653674ceb54c"
            ]
        ]
    },
    {
        "id": "b607653674ceb54c",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "2b285486d89a8590",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "rRequest received from PLC",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": 16,
        "color": "#ff7300",
        "x": 780,
        "y": 420,
        "wires": []
    },
    {
        "id": "cfaf7ae9ca9d69fd",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 65",
        "func": "msg.payload = { \"status\": \"rRequest and sRequest recieved from PLC\" }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 480,
        "wires": [
            [
                "fff788730565c094"
            ]
        ]
    },
    {
        "id": "fff788730565c094",
        "type": "mongodb in",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 430,
        "y": 480,
        "wires": [
            [
                "df26f28e3461e92a"
            ]
        ]
    },
    {
        "id": "df26f28e3461e92a",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 66",
        "func": "const payload = msg.payload;\n\nif (Array.isArray(payload)) \n{\n    const numberOfObjects = payload.length;\n    msg.payload = numberOfObjects;\n    return msg;\n} else \n{  \n    msg.payload = 0; \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 480,
        "wires": [
            [
                "7ba0968f5c6f6303"
            ]
        ]
    },
    {
        "id": "7ba0968f5c6f6303",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "f4ebc30243c09416",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "rRequest and sRequest received from PLC",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": 16,
        "color": "#16ca2b",
        "x": 830,
        "y": 480,
        "wires": []
    },
    {
        "id": "f67869a3d5750e15",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 67",
        "func": "msg.payload = {\"status\": \"pRequest recieved from PLC\" }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 540,
        "wires": [
            [
                "2a8234a0ca223f56"
            ]
        ]
    },
    {
        "id": "2a8234a0ca223f56",
        "type": "mongodb in",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 430,
        "y": 540,
        "wires": [
            [
                "06d8a2980a32b16c"
            ]
        ]
    },
    {
        "id": "06d8a2980a32b16c",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 68",
        "func": "const payload = msg.payload;\n\nif (Array.isArray(payload)) \n{\n    const numberOfObjects = payload.length;\n    msg.payload = numberOfObjects;\n    return msg;\n} else \n{  \n    msg.payload = 0; \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 540,
        "wires": [
            [
                "17247a672d3d9ef5"
            ]
        ]
    },
    {
        "id": "17247a672d3d9ef5",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "f4ebc30243c09416",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "pRequest received from PLC",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": 16,
        "color": "#16ca2b",
        "x": 780,
        "y": 540,
        "wires": []
    },
    {
        "id": "490ba1ec2490e935",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 70",
        "func": "const payload = msg.payload;\nvar numberOfObjects;\nvar text=\" \";\nif (Array.isArray(payload)) \n{\n numberOfObjects = payload.length;\n} \nelse \n{\n    numberOfObjects = 0;\n    text = \"Nil\";\n}\n\nfor (var i = 0; i < numberOfObjects;i++)\n{\n    text = text + \"-------{Sreq:\" + msg.payload[i].sRequestId + \"To X,y,Z: \" + msg.payload[i].toX + \",\" + msg.payload[i].toY + \",\" + msg.payload[i].toZ + \",  From X,y,Z: \" + msg.payload[i].fromX + \",\" + msg.payload[i].fromY + \",\" + msg.payload[i].fromZ + \"}\"\n}\n\nif (text == \" \")\n{\n    text= \"Nil\"\n}\nmsg.payload = text;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 100,
        "wires": [
            [
                "87f93a720193a81c"
            ]
        ]
    },
    {
        "id": "4dc20537992b729f",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 71",
        "func": "msg.payload = global.get(\"plctrigger\");\nif (msg.payload ==\"offline\")\n{ \n    msg.payload = \"Disconnected\"\n    return msg; }\nelse \n{\n    msg.payload = \"Connected\"\n    return msg;\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 680,
        "wires": [
            [
                "570dfbc4567f9169",
                "bc28e820f4f23a16"
            ]
        ]
    },
    {
        "id": "2849f627769c0511",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 72",
        "func": "msg.payload = global.get(\"Azure1Status\");\nif (msg.payload == \"Disconnected\" || msg.payload == \"Error\")\n{\n    return msg;\n}\nelse\n{\n    msg.payload = \"Connected\";\n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 600,
        "wires": [
            [
                "09c073e697cf2372",
                "6e0c37709b0ec187",
                "af341f5c3c9b731e"
            ]
        ]
    },
    {
        "id": "09c073e697cf2372",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "a33c66870cf55623",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Azure IoT Hub",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": 16,
        "color": "#000000",
        "x": 460,
        "y": 600,
        "wires": []
    },
    {
        "id": "570dfbc4567f9169",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "a33c66870cf55623",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "PLC",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": 16,
        "color": "#000000",
        "x": 450,
        "y": 680,
        "wires": []
    },
    {
        "id": "be0ef98b671bdd06",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "a33c66870cf55623",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Mongo DB",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": 16,
        "color": "#000000",
        "x": 470,
        "y": 740,
        "wires": []
    },
    {
        "id": "269da99ad6854d15",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 73",
        "func": "msg.payload = global.get(\"mongo\");\nif (msg.payload == \"connected\") {\n    msg.payload = \"Connected\"\n    return msg;\n}\nelse {\n    \n    return msg;\n} \n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 740,
        "wires": [
            [
                "be0ef98b671bdd06",
                "2411d13cf0e72bba"
            ]
        ]
    },
    {
        "id": "87f93a720193a81c",
        "type": "switch",
        "z": "197be159bc54b2ae",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Nil",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 710,
        "y": 100,
        "wires": [
            [],
            [
                "b8fff1938b235e88"
            ]
        ]
    },
    {
        "id": "1cdefe032b09a885",
        "type": "ui_audio",
        "z": "197be159bc54b2ae",
        "name": "",
        "group": "f4ebc30243c09416",
        "voice": "Google UK English Female",
        "always": false,
        "x": 1020,
        "y": 100,
        "wires": []
    },
    {
        "id": "b8fff1938b235e88",
        "type": "trigger",
        "z": "197be159bc54b2ae",
        "name": "",
        "op1": "PLC failed acknowledgement ",
        "op2": "",
        "op1type": "str",
        "op2type": "str",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "1",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 860,
        "y": 100,
        "wires": [
            [
                "1cdefe032b09a885"
            ],
            []
        ]
    },
    {
        "id": "89e605814ed503dd",
        "type": "ui_audio",
        "z": "197be159bc54b2ae",
        "name": "",
        "group": "f4ebc30243c09416",
        "voice": "Google UK English Female",
        "always": false,
        "x": 980,
        "y": 660,
        "wires": []
    },
    {
        "id": "ad919a28436d4f7e",
        "type": "trigger",
        "z": "197be159bc54b2ae",
        "name": "",
        "op1": "Azure Disconnected",
        "op2": "",
        "op1type": "str",
        "op2type": "str",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "1",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 780,
        "y": 600,
        "wires": [
            [
                "89e605814ed503dd"
            ],
            []
        ]
    },
    {
        "id": "6e0c37709b0ec187",
        "type": "switch",
        "z": "197be159bc54b2ae",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Disconnected",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 600,
        "wires": [
            [
                "ad919a28436d4f7e"
            ]
        ]
    },
    {
        "id": "af341f5c3c9b731e",
        "type": "switch",
        "z": "197be159bc54b2ae",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Error",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 640,
        "wires": [
            [
                "2666c062aede93a8"
            ]
        ]
    },
    {
        "id": "2666c062aede93a8",
        "type": "trigger",
        "z": "197be159bc54b2ae",
        "name": "",
        "op1": "Azure Error",
        "op2": "",
        "op1type": "str",
        "op2type": "str",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "1",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 780,
        "y": 640,
        "wires": [
            [
                "89e605814ed503dd"
            ],
            []
        ]
    },
    {
        "id": "bc28e820f4f23a16",
        "type": "switch",
        "z": "197be159bc54b2ae",
        "d": true,
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Disconnected",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 680,
        "wires": [
            [
                "040abd4cacb111b6"
            ]
        ]
    },
    {
        "id": "040abd4cacb111b6",
        "type": "trigger",
        "z": "197be159bc54b2ae",
        "name": "",
        "op1": "PLC Disconnected",
        "op2": "",
        "op1type": "str",
        "op2type": "str",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "1",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 780,
        "y": 680,
        "wires": [
            [
                "89e605814ed503dd"
            ],
            []
        ]
    },
    {
        "id": "2411d13cf0e72bba",
        "type": "switch",
        "z": "197be159bc54b2ae",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Connected",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 740,
        "wires": [
            [
                "63650c2fb05f7cbe"
            ]
        ]
    },
    {
        "id": "63650c2fb05f7cbe",
        "type": "trigger",
        "z": "197be159bc54b2ae",
        "name": "",
        "op1": "Mongo Disconnected",
        "op2": "",
        "op1type": "str",
        "op2type": "str",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "1",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 780,
        "y": 740,
        "wires": [
            [
                "89e605814ed503dd"
            ],
            []
        ]
    },
    {
        "id": "263c1c1597d94a51",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 75",
        "func": "msg.payload = { \"pRequestId\": { $ne: null },  \"status\": \"Sent to PLC\" }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 240,
        "wires": [
            [
                "d9bf5bc16808c192"
            ]
        ]
    },
    {
        "id": "d9bf5bc16808c192",
        "type": "mongodb in",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 430,
        "y": 240,
        "wires": [
            [
                "33d550042f643a3d"
            ]
        ]
    },
    {
        "id": "33d550042f643a3d",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 76",
        "func": "const payload = msg.payload;\n\nif (Array.isArray(payload)) \n{\n    const numberOfObjects = payload.length;\n    msg.payload = numberOfObjects;\n    return msg;\n} else \n{  \n    msg.payload = 0; \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 240,
        "wires": [
            [
                "fbfcc90a592b23a0"
            ]
        ]
    },
    {
        "id": "fbfcc90a592b23a0",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "2b285486d89a8590",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "pRequest not recieved ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": 16,
        "color": "#ff7300",
        "x": 760,
        "y": 240,
        "wires": []
    },
    {
        "id": "c37e016cd2a7fd2a",
        "type": "inject",
        "z": "197be159bc54b2ae",
        "name": "",
        "props": [
            {
                "p": "reset",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 790,
        "y": 780,
        "wires": [
            [
                "89e605814ed503dd"
            ]
        ]
    },
    {
        "id": "a5eff9b386b1b84d",
        "type": "mongodb out",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "Clear database",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 700,
        "y": 820,
        "wires": []
    },
    {
        "id": "c41950d45c48a5b6",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "Query",
        "func": "if (msg.payload==\"Yes\")\n{\nmsg.payload={};\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 820,
        "wires": [
            [
                "a5eff9b386b1b84d"
            ]
        ],
        "icon": "font-awesome/fa-align-justify"
    },
    {
        "id": "be297695c185b120",
        "type": "ui_toast",
        "z": "197be159bc54b2ae",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "Green",
        "sendall": true,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "No",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 370,
        "y": 820,
        "wires": [
            [
                "c41950d45c48a5b6"
            ]
        ]
    },
    {
        "id": "ada6205cb8a47d45",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "Query",
        "func": "msg.payload=\"Are you sure to clear the database?\"\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 265,
        "y": 820,
        "wires": [
            [
                "be297695c185b120"
            ]
        ],
        "icon": "node-red-dashboard/ui_button.png",
        "l": false
    },
    {
        "id": "f9057a6bdc3a3bf5",
        "type": "ui_button",
        "z": "197be159bc54b2ae",
        "name": "",
        "group": "b4335eaebfb5e52e",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Click here to clear database",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 215,
        "y": 820,
        "wires": [
            [
                "ada6205cb8a47d45"
            ]
        ],
        "l": false
    },
    {
        "id": "b9e001f9a56c780c",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 93",
        "func": "msg.payload = { \"status\": \"Error: sRequest recieved and rRequest missing from PLC\" }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 140,
        "wires": [
            [
                "97b0d2c321aa70fa"
            ]
        ]
    },
    {
        "id": "97b0d2c321aa70fa",
        "type": "mongodb in",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 430,
        "y": 140,
        "wires": [
            [
                "caa6691e2396228a",
                "490ba1ec2490e935"
            ]
        ]
    },
    {
        "id": "caa6691e2396228a",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 94",
        "func": "const payload = msg.payload;\nvar numberOfObjects;\nvar text=\" \";\nif (Array.isArray(payload)) \n{\n numberOfObjects = payload.length;\n} \nelse \n{\n    numberOfObjects = 0;\n    text = \"Nil\";\n}\n\nif (numberOfObjects == 0)\n{\n    msg.payload=\"No errors found\"  \n}\nelse if (numberOfObjects == 1)\n{\n    msg.payload = \"Found \" + numberOfObjects+\" error\"\n}\nelse \n{\n    msg.payload = \"Found \" + numberOfObjects + \" errors\"\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 140,
        "wires": [
            [
                "63191206501c305c"
            ]
        ]
    },
    {
        "id": "63191206501c305c",
        "type": "ui_template",
        "z": "197be159bc54b2ae",
        "group": "d588eb81b40b80e4",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<md-button \nng-style=\"{'background-color': msg.payload == 'No errors found' ? 'green':'red'}\" class=\"custom-button\"\nng-click=\"send({topic: 'Button clicked'})\">\n{{msg.payload}}\n</md-button>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 720,
        "y": 140,
        "wires": [
            [
                "6181d72dad3b3bdf"
            ]
        ]
    },
    {
        "id": "6181d72dad3b3bdf",
        "type": "switch",
        "z": "197be159bc54b2ae",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 140,
        "wires": [
            [
                "74bcb628b15247be"
            ]
        ]
    },
    {
        "id": "74bcb628b15247be",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 95",
        "func": "msg.payload = { \"status\": \"Error: sRequest recieved and rRequest missing from PLC\" }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 140,
        "wires": [
            [
                "9bfa6a103a3aa752"
            ]
        ]
    },
    {
        "id": "9bfa6a103a3aa752",
        "type": "mongodb in",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 1170,
        "y": 140,
        "wires": [
            [
                "d2dec32b671579f2"
            ]
        ]
    },
    {
        "id": "d2dec32b671579f2",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 96",
        "func": "const payload = msg.payload;\nvar numberOfObjects;\nvar text=\" \";\n\nif (Array.isArray(payload)) \n{\n numberOfObjects = payload.length;\n} \nelse \n{\n    numberOfObjects = 0;\n    text = \"Nil\"\n}\ntext = \"Error Logs: \";\nfor (var i = 0; i < numberOfObjects; i++) \n{\n     \n    text = text + JSON.stringify(msg.payload[i]) + \"---->Error:\" + (i + 1) + \" \" ;\n\n}\n\nif (text == \" \") {\n    text = \"Nil\"\n}\nmsg.topic=text;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 140,
        "wires": [
            [
                "c7e1e8e7fff42f65"
            ]
        ]
    },
    {
        "id": "c7e1e8e7fff42f65",
        "type": "ui_toast",
        "z": "197be159bc54b2ae",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "Green",
        "sendall": true,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1510,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "5ad4195533fa1608",
        "type": "subflow:abf459b12a58a7d6",
        "z": "7b229efa69ac7866",
        "name": "Write Database",
        "x": 960,
        "y": 100,
        "wires": [],
        "icon": "node-red/db.svg"
    },
    {
        "id": "174abfca7c1eff91",
        "type": "subflow:168ce6884d330b26",
        "z": "7b229efa69ac7866",
        "name": "Azure status and other functions ",
        "x": 510,
        "y": 120,
        "wires": [
            [
                "dcf4aba0b4f3e532"
            ]
        ],
        "icon": "font-awesome/fa-sliders"
    },
    {
        "id": "af70719ce96f10fb",
        "type": "subflow:b21bd85f55499775",
        "z": "7b229efa69ac7866",
        "name": "Acknowlegement from PLC",
        "x": 530,
        "y": 80,
        "wires": [
            [
                "dcf4aba0b4f3e532",
                "5df80c723a9fca27"
            ]
        ],
        "icon": "node-red/arrow-in.svg"
    },
    {
        "id": "c18c342f7541c4bb",
        "type": "subflow:a27b931a44c8fb3e",
        "z": "7b229efa69ac7866",
        "name": "Read DB and send data to PLC",
        "x": 810,
        "y": 200,
        "wires": []
    },
    {
        "id": "dcf4aba0b4f3e532",
        "type": "azureiothub",
        "z": "7b229efa69ac7866",
        "name": "Azure IoT Hub",
        "protocol": "amqp",
        "x": 760,
        "y": 100,
        "wires": [
            [
                "5ad4195533fa1608"
            ]
        ]
    },
    {
        "id": "5df80c723a9fca27",
        "type": "file",
        "z": "7b229efa69ac7866",
        "name": "Write allreq CSV",
        "filename": "C:\\Datalog\\allreq.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 760,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "9abdaafbf381a3e1",
        "type": "function",
        "z": "7b229efa69ac7866",
        "name": "Set status as global",
        "func": "global.set(\"Azure1Status\",msg.status.text);\nmsg.payload={\n    \"status\":msg.status.text\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 120,
        "wires": [
            [
                "174abfca7c1eff91"
            ]
        ],
        "icon": "node-red/white-globe.svg"
    },
    {
        "id": "84f458adc8b8dfab",
        "type": "status",
        "z": "7b229efa69ac7866",
        "name": "Azure status",
        "scope": [
            "dcf4aba0b4f3e532"
        ],
        "x": 90,
        "y": 120,
        "wires": [
            [
                "9abdaafbf381a3e1"
            ]
        ],
        "icon": "node-red/white-globe.svg"
    },
    {
        "id": "3547d063221849c1",
        "type": "status",
        "z": "7b229efa69ac7866",
        "name": "PLC status",
        "scope": [
            "36535c7ffc1c8b24"
        ],
        "x": 580,
        "y": 160,
        "wires": [
            [
                "7bd9b25eb8c0b5bd"
            ]
        ],
        "icon": "node-red/subflow.svg"
    },
    {
        "id": "7bd9b25eb8c0b5bd",
        "type": "function",
        "z": "7b229efa69ac7866",
        "name": "Set status as global",
        "func": "global.set(\"plctrigger\",msg.status.text);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 160,
        "wires": [],
        "icon": "node-red/subflow.svg"
    },
    {
        "id": "36535c7ffc1c8b24",
        "type": "eth-ip in",
        "z": "7b229efa69ac7866",
        "endpoint": "1dc8f3e6fa36769b",
        "mode": "single",
        "variable": "Plc_To_Gateway_Msg_Id",
        "program": "",
        "name": "PLC trigger",
        "x": 570,
        "y": 200,
        "wires": [
            [
                "c18c342f7541c4bb"
            ]
        ],
        "icon": "node-red-contrib-simple-message-queue/simple-message-queue.svg"
    },
    {
        "id": "8e05c4e40e2abb8f",
        "type": "status",
        "z": "7b229efa69ac7866",
        "name": "Mongo status",
        "scope": [
            "dfce9e702acedb8c"
        ],
        "x": 570,
        "y": 300,
        "wires": [
            [
                "8965ece961f6bc8e"
            ]
        ],
        "icon": "node-red/db.svg"
    },
    {
        "id": "8965ece961f6bc8e",
        "type": "function",
        "z": "7b229efa69ac7866",
        "name": "Set status as global",
        "func": "global.set(\"mongo\",msg.status.text);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 300,
        "wires": [
            [
                "dfce9e702acedb8c"
            ]
        ],
        "icon": "node-red/db.svg"
    },
    {
        "id": "dfce9e702acedb8c",
        "type": "mongodb out",
        "z": "7b229efa69ac7866",
        "mongodb": "8bdab089b2660f17",
        "name": "Clear database",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 895,
        "y": 300,
        "wires": [],
        "l": false
    },
    {
        "id": "72765ba38fc4a002",
        "type": "subflow:197be159bc54b2ae",
        "z": "7b229efa69ac7866",
        "name": "",
        "x": 820,
        "y": 260,
        "wires": [],
        "icon": "font-awesome/fa-line-chart"
    },
    {
        "id": "42104bad2c9a08b3",
        "type": "inject",
        "z": "7b229efa69ac7866",
        "name": "Update UI every 0.5 sec",
        "props": [],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 530,
        "y": 260,
        "wires": [
            [
                "72765ba38fc4a002"
            ]
        ]
    },
    {
        "id": "deee33940331118c",
        "type": "simple-queue",
        "z": "8145849ac655a040",
        "name": "",
        "firstMessageBypass": true,
        "bypassInterval": "0",
        "x": 470,
        "y": 340,
        "wires": [
            [
                "0eb13951407232a4"
            ]
        ]
    },
    {
        "id": "51bd9bae51f3a09c",
        "type": "inject",
        "z": "8145849ac655a040",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 320,
        "wires": [
            [
                "deee33940331118c"
            ]
        ]
    },
    {
        "id": "a4e1cf82c98518a1",
        "type": "inject",
        "z": "8145849ac655a040",
        "name": "Trigger",
        "props": [
            {
                "p": "trigger",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 290,
        "y": 360,
        "wires": [
            [
                "deee33940331118c"
            ]
        ]
    },
    {
        "id": "0eb13951407232a4",
        "type": "debug",
        "z": "8145849ac655a040",
        "name": "debug 92",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 340,
        "wires": []
    },
    {
        "id": "1dd7741844f65a38",
        "type": "mongodb out",
        "z": "8145849ac655a040",
        "mongodb": "156920f453365021",
        "name": "Delete",
        "collection": "Table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 770,
        "y": 260,
        "wires": []
    },
    {
        "id": "8bc1f46b50cb91fe",
        "type": "inject",
        "z": "8145849ac655a040",
        "name": "",
        "props": [
            {
                "p": "trigger",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 490,
        "y": 260,
        "wires": [
            [
                "a0a5135c18d084bd"
            ]
        ]
    },
    {
        "id": "a0a5135c18d084bd",
        "type": "function",
        "z": "8145849ac655a040",
        "name": "function 85",
        "func": "msg.payload = {};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 260,
        "wires": [
            [
                "1dd7741844f65a38"
            ]
        ]
    },
    {
        "id": "456cf5486e62ad2b",
        "type": "inject",
        "z": "8145849ac655a040",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 290,
        "y": 600,
        "wires": [
            [
                "9c8321bab7fa3470"
            ]
        ]
    },
    {
        "id": "9c8321bab7fa3470",
        "type": "function",
        "z": "8145849ac655a040",
        "name": "function 97",
        "func": "msg.payload = { \"status\": \"Recieved from cloud\" }\nmsg.limit = 1\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 600,
        "wires": [
            [
                "a52145dd9a504bcc"
            ]
        ]
    },
    {
        "id": "a52145dd9a504bcc",
        "type": "mongodb in",
        "z": "8145849ac655a040",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 610,
        "y": 600,
        "wires": [
            [
                "dfe0dde2df02f41c"
            ]
        ]
    },
    {
        "id": "dfe0dde2df02f41c",
        "type": "debug",
        "z": "8145849ac655a040",
        "name": "debug 97",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 600,
        "wires": []
    },
    {
        "id": "eefc855b106b0bec",
        "type": "mongodb out",
        "z": "8145849ac655a040",
        "mongodb": "63b7f9e1d917f433",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 1040,
        "y": 520,
        "wires": []
    },
    {
        "id": "5fc71f481110181c",
        "type": "function",
        "z": "8145849ac655a040",
        "name": "function 99",
        "func": "msg.query = { \"_id\": msg.payload[0]._id}\nmsg.payload = msg.payload[0]\nif (msg.payload.status == \"rRequest recieved from PLC\" || msg.payload.status == \"rRequest and sRequest recieved from PLC\") \n{\n    msg.payload.status = \"rRequest and sRequest recieved from PLC\"\n}\nelse\n{ \n    msg.payload.status = \"Error: sRequest recieved and rRequest missing from PLC\" \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 520,
        "wires": [
            [
                "eefc855b106b0bec"
            ]
        ]
    },
    {
        "id": "db51febbe2bacc84",
        "type": "mongodb in",
        "z": "8145849ac655a040",
        "mongodb": "63b7f9e1d917f433",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 570,
        "y": 520,
        "wires": [
            [
                "53a5af0c8de5c722"
            ]
        ]
    },
    {
        "id": "7b2179d20ab7084b",
        "type": "function",
        "z": "8145849ac655a040",
        "name": "function 100",
        "func": "msg.payload = { \"sRequestId\": msg.payload}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 520,
        "wires": [
            [
                "db51febbe2bacc84"
            ]
        ]
    },
    {
        "id": "11d1b8df01fb0e5c",
        "type": "inject",
        "z": "8145849ac655a040",
        "name": "Sreq",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "T7571S7r-41t2-481T-11i3-dP48DlE7y869",
        "payloadType": "str",
        "x": 250,
        "y": 520,
        "wires": [
            [
                "7b2179d20ab7084b"
            ]
        ]
    },
    {
        "id": "79a09190127210e5",
        "type": "function",
        "z": "8145849ac655a040",
        "name": "Trigger",
        "func": "global.set(\"trigger\", 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 880,
        "wires": [
            [
                "b165e9fcda75cf2b"
            ]
        ]
    },
    {
        "id": "b165e9fcda75cf2b",
        "type": "function",
        "z": "8145849ac655a040",
        "name": "function 101",
        "func": "msg.payload = { \"status\": \"Recieved from cloud\" }\nmsg.limit = 1\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 880,
        "wires": [
            [
                "efc2c3139b7b8d23"
            ]
        ]
    },
    {
        "id": "efc2c3139b7b8d23",
        "type": "mongodb in",
        "z": "8145849ac655a040",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 590,
        "y": 880,
        "wires": [
            [
                "e5b0f75045330ae5",
                "4ab60915ac25d1f6"
            ]
        ]
    },
    {
        "id": "7203950ea7b30642",
        "type": "function",
        "z": "8145849ac655a040",
        "name": "Updated Trigger",
        "func": "global.set(\"trigger\", 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "e5b0f75045330ae5",
        "type": "switch",
        "z": "8145849ac655a040",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 760,
        "wires": [
            [
                "0e5ba87796ffa7d5"
            ],
            [
                "7203950ea7b30642"
            ]
        ]
    },
    {
        "id": "0e5ba87796ffa7d5",
        "type": "delay",
        "z": "8145849ac655a040",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 490,
        "y": 740,
        "wires": [
            [
                "732111123341309d"
            ]
        ]
    },
    {
        "id": "732111123341309d",
        "type": "function",
        "z": "8145849ac655a040",
        "name": "Checks trigger state",
        "func": "msg.payload = global.get(\"trigger\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 740,
        "wires": [
            [
                "d9ea9986a9901ecc"
            ]
        ]
    },
    {
        "id": "d9ea9986a9901ecc",
        "type": "switch",
        "z": "8145849ac655a040",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 740,
        "wires": [
            [
                "b165e9fcda75cf2b",
                "5d96918c70549833"
            ]
        ]
    },
    {
        "id": "322f5bc3c1f6fee1",
        "type": "inject",
        "z": "8145849ac655a040",
        "name": "PLC trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "9z078LCB-e5g4-379Y-8150-22731FFVO7lA",
        "payloadType": "str",
        "x": 210,
        "y": 940,
        "wires": [
            [
                "79a09190127210e5"
            ]
        ]
    },
    {
        "id": "36e5850c229bb6f8",
        "type": "debug",
        "z": "8145849ac655a040",
        "name": "debug 98",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 840,
        "wires": []
    },
    {
        "id": "4ab60915ac25d1f6",
        "type": "switch",
        "z": "8145849ac655a040",
        "name": "",
        "property": "msg.payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 880,
        "wires": [
            [
                "36e5850c229bb6f8",
                "f42602b6dbc2d290"
            ]
        ]
    },
    {
        "id": "f42602b6dbc2d290",
        "type": "function",
        "z": "8145849ac655a040",
        "name": "function 102",
        "func": "msg.query = { \"_id\": msg.payload[0]._id};\nmsg.payload = msg.payload[0];\nmsg.payload.ran_num = global.get(\"plctrigger\");\nmsg.payload.status = \"Sent to PLC\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 880,
        "wires": [
            [
                "7709d1e4826c2790"
            ]
        ]
    },
    {
        "id": "7709d1e4826c2790",
        "type": "mongodb out",
        "z": "8145849ac655a040",
        "mongodb": "8bdab089b2660f17",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 1060,
        "y": 880,
        "wires": []
    },
    {
        "id": "fea13758fbfefc4b",
        "type": "debug",
        "z": "8145849ac655a040",
        "name": "debug 99",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1040,
        "wires": []
    },
    {
        "id": "66c9713200662fdf",
        "type": "inject",
        "z": "8145849ac655a040",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 350,
        "y": 1040,
        "wires": [
            [
                "610cef2def11eec7"
            ]
        ]
    },
    {
        "id": "610cef2def11eec7",
        "type": "function",
        "z": "8145849ac655a040",
        "name": "Checks trigger state",
        "func": "msg.payload = global.get(\"trigger\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1040,
        "wires": [
            [
                "fea13758fbfefc4b"
            ]
        ]
    },
    {
        "id": "5d96918c70549833",
        "type": "debug",
        "z": "8145849ac655a040",
        "name": "debug 100",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 680,
        "wires": []
    },
    {
        "id": "19fd4bb6fa4c1134",
        "type": "mongodb out",
        "z": "8145849ac655a040",
        "mongodb": "8bdab089b2660f17",
        "name": "Insert",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 810,
        "y": 1120,
        "wires": []
    },
    {
        "id": "e56ebf5002548c16",
        "type": "function",
        "z": "8145849ac655a040",
        "name": "function 98",
        "func": "const now = new Date();\nconst hours = now.getHours().toString().padStart(2, '0');\nconst minutes = now.getMinutes().toString().padStart(2, '0');\nconst seconds = now.getSeconds().toString().padStart(2, '0');\nconst day = now.getDate().toString().padStart(2, '0');\nconst month = (now.getMonth() + 1).toString().padStart(2, '0'); // Note: months are 0-indexed\nconst year = now.getFullYear().toString().slice(-4); // Get last 2 digits of the year\nconst time = `${hours}.${minutes}.${seconds}, ${day}-${month}-${year}`;\nmsg.payload.time_recieved_from_cloud = time;\nmsg.payload.status = \"Recieved from cloud\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1120,
        "wires": [
            [
                "19fd4bb6fa4c1134"
            ]
        ]
    },
    {
        "id": "f12e4b61992b27b0",
        "type": "function",
        "z": "8145849ac655a040",
        "name": "Prepare random data",
        "func": "if (!flow.get('counter')) {\n    flow.set('counter', 0);\n}\n\nvar counter = flow.get('counter') + 1;\nflow.set('counter', counter);\n\nvar characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789012345678901234567890123456789012345678901234567890123456789';\nvar str5 = '', str1 = '', str2 = '', str3 = '', str4 = '', rrequest = '', srequest = '';\nvar binid ='BPTC02-37-0-1-3'\nfor (var i = 0; i < 8; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str1 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str2 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str3 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str4 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 12; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str5 += characters.charAt(randomIndex);\n}\nrrequest = str1 + '-' + str2 + '-' + str3 + '-' + str4 + '-' + str5;\n\nstr1 = str2 = str3 = str4 = str5=''\n\nfor (var i = 0; i < 8; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str1 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str2 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str3 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str4 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 12; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str5 += characters.charAt(randomIndex);\n}\nsrequest = str1 + '-' + str2 + '-' + str3 + '-' + str4 + '-' + str5;\nmsg.payload={ \n    \"binId\": \"TOTE0101010\" + counter, \n    \"commandType\": 1, \n    \"rRequestId\": rrequest, \n    \"sRequestId\": srequest, \n    \"toX\": 1, \"toY\": 1, \"toZ\": 1, \n    \"fromX\": 12, \"fromY\": 4, \"fromZ\": 1 \n    }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1120,
        "wires": [
            [
                "e56ebf5002548c16"
            ]
        ]
    },
    {
        "id": "aaefef24f5ef0f80",
        "type": "inject",
        "z": "8145849ac655a040",
        "name": "Generate and Inject Data",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 1120,
        "wires": [
            [
                "f12e4b61992b27b0"
            ]
        ]
    },
    {
        "id": "53a5af0c8de5c722",
        "type": "switch",
        "z": "8145849ac655a040",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 710,
        "y": 520,
        "wires": [
            [
                "5fc71f481110181c"
            ]
        ]
    },
    {
        "id": "cef730830d07d420",
        "type": "debug",
        "z": "ef35a94e74a28aa9",
        "name": "debug 102",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 140,
        "wires": []
    },
    {
        "id": "944ff05944299e04",
        "type": "function",
        "z": "ef35a94e74a28aa9",
        "name": "Checks trigger state",
        "func": "if (msg.payload == \"\" && global.get(\"trigger\"))\n{\n       return msg;\n}\nelse\n{\n    global.set(\"trigger\", 0);\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 200,
        "wires": [
            [
                "cef730830d07d420",
                "05f1bcccb8762f89"
            ]
        ]
    },
    {
        "id": "fb7953ada4c77106",
        "type": "function",
        "z": "ef35a94e74a28aa9",
        "name": "function 104",
        "func": "msg.payload = { \"status\": \"Recieved from cloud\" }\nmsg.limit = 1\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 280,
        "wires": [
            [
                "1425543458ac7f9f"
            ]
        ]
    },
    {
        "id": "1425543458ac7f9f",
        "type": "mongodb in",
        "z": "ef35a94e74a28aa9",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 450,
        "y": 280,
        "wires": [
            [
                "0267132f433e036b",
                "944ff05944299e04"
            ]
        ]
    },
    {
        "id": "0267132f433e036b",
        "type": "switch",
        "z": "ef35a94e74a28aa9",
        "name": "",
        "property": "msg.payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 280,
        "wires": [
            [
                "88bfdc6a578bf2ed",
                "e42a922981d5fa0d"
            ]
        ]
    },
    {
        "id": "2864c0f72cf34427",
        "type": "inject",
        "z": "ef35a94e74a28aa9",
        "name": "PLC trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "9z078LCB-e5g4-379Y-8150-22731FFVO7lA",
        "payloadType": "str",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "034d42cd372276f8"
            ]
        ]
    },
    {
        "id": "88bfdc6a578bf2ed",
        "type": "debug",
        "z": "ef35a94e74a28aa9",
        "name": "debug 101",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 240,
        "wires": []
    },
    {
        "id": "e42a922981d5fa0d",
        "type": "function",
        "z": "ef35a94e74a28aa9",
        "name": "function 103",
        "func": "msg.query = { \"_id\": msg.payload[0]._id};\nmsg.payload = msg.payload[0];\nmsg.payload.ran_num = global.get(\"plctrigger\");\nmsg.payload.status = \"Sent to PLC\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 280,
        "wires": [
            [
                "c5abb36c9344d93f"
            ]
        ]
    },
    {
        "id": "c5abb36c9344d93f",
        "type": "mongodb out",
        "z": "ef35a94e74a28aa9",
        "mongodb": "8bdab089b2660f17",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 920,
        "y": 280,
        "wires": []
    },
    {
        "id": "034d42cd372276f8",
        "type": "function",
        "z": "ef35a94e74a28aa9",
        "name": "Trigger",
        "func": "global.set(\"trigger\", 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 280,
        "wires": [
            [
                "fb7953ada4c77106"
            ]
        ]
    },
    {
        "id": "05f1bcccb8762f89",
        "type": "delay",
        "z": "ef35a94e74a28aa9",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "fb7953ada4c77106"
            ]
        ]
    },
    {
        "id": "395b7aada0a69c22",
        "type": "debug",
        "z": "ef35a94e74a28aa9",
        "name": "debug 103",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 540,
        "wires": []
    },
    {
        "id": "f12a11ac351166d4",
        "type": "function",
        "z": "ef35a94e74a28aa9",
        "name": "Checks trigger state",
        "func": "msg.payload = global.get(\"trigger\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 540,
        "wires": [
            [
                "395b7aada0a69c22"
            ]
        ]
    },
    {
        "id": "fa801be0525317b3",
        "type": "inject",
        "z": "ef35a94e74a28aa9",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 180,
        "y": 540,
        "wires": [
            [
                "f12a11ac351166d4"
            ]
        ]
    },
    {
        "id": "f962b355f8ab62cf",
        "type": "mongodb out",
        "z": "ef35a94e74a28aa9",
        "mongodb": "8bdab089b2660f17",
        "name": "Insert",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 750,
        "y": 600,
        "wires": []
    },
    {
        "id": "f2096772c9e0fb0e",
        "type": "function",
        "z": "ef35a94e74a28aa9",
        "name": "function 105",
        "func": "const now = new Date();\nconst hours = now.getHours().toString().padStart(2, '0');\nconst minutes = now.getMinutes().toString().padStart(2, '0');\nconst seconds = now.getSeconds().toString().padStart(2, '0');\nconst day = now.getDate().toString().padStart(2, '0');\nconst month = (now.getMonth() + 1).toString().padStart(2, '0'); // Note: months are 0-indexed\nconst year = now.getFullYear().toString().slice(-4); // Get last 2 digits of the year\nconst time = `${hours}.${minutes}.${seconds}, ${day}-${month}-${year}`;\nmsg.payload.time_recieved_from_cloud = time;\nmsg.payload.status = \"Recieved from cloud\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 600,
        "wires": [
            [
                "f962b355f8ab62cf"
            ]
        ]
    },
    {
        "id": "5027759c947735e0",
        "type": "function",
        "z": "ef35a94e74a28aa9",
        "name": "Prepare random data",
        "func": "if (!flow.get('counter')) {\n    flow.set('counter', 0);\n}\n\nvar counter = flow.get('counter') + 1;\nflow.set('counter', counter);\n\nvar characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789012345678901234567890123456789012345678901234567890123456789';\nvar str5 = '', str1 = '', str2 = '', str3 = '', str4 = '', rrequest = '', srequest = '';\nvar binid ='BPTC02-37-0-1-3'\nfor (var i = 0; i < 8; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str1 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str2 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str3 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str4 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 12; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str5 += characters.charAt(randomIndex);\n}\nrrequest = str1 + '-' + str2 + '-' + str3 + '-' + str4 + '-' + str5;\n\nstr1 = str2 = str3 = str4 = str5=''\n\nfor (var i = 0; i < 8; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str1 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str2 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str3 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str4 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 12; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str5 += characters.charAt(randomIndex);\n}\nsrequest = str1 + '-' + str2 + '-' + str3 + '-' + str4 + '-' + str5;\nmsg.payload={ \n    \"binId\": \"TOTE0101010\" + counter, \n    \"commandType\": 1, \n    \"rRequestId\": rrequest, \n    \"sRequestId\": srequest, \n    \"toX\": 1, \"toY\": 1, \"toZ\": 1, \n    \"fromX\": 12, \"fromY\": 4, \"fromZ\": 1 \n    }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 600,
        "wires": [
            [
                "f2096772c9e0fb0e"
            ]
        ]
    },
    {
        "id": "92ad9a23d10071af",
        "type": "inject",
        "z": "ef35a94e74a28aa9",
        "name": "Generate and Inject Data",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 600,
        "wires": [
            [
                "5027759c947735e0"
            ]
        ]
    },
    {
        "id": "6af42cd319b6fcfd",
        "type": "function",
        "z": "e4d7a9a5f6fa6302",
        "name": "function 77",
        "func": "return [\n    { payload: msg.payload.commandType },\n    { payload: msg.payload.binId },\n    { payload: msg.payload.fromX },\n    { payload: msg.payload.fromY },\n    { payload: msg.payload.fromZ },\n    { payload: msg.payload.rRequestId },\n    { payload: msg.payload.toX },\n    { payload: msg.payload.toY },\n    { payload: msg.payload.toZ },\n    { payload: msg.payload.sRequestId },\n    { payload: \"Generate Random number\" },\n];\n\n",
        "outputs": 11,
        "noerr": 0,
        "initialize": "",
        "finalize": "var ggSeqName = \"sequenceId\";\nvar seq = global.get(ggSeqName) ||\n    Math.floor(Math.random() * 1000 * 1000 * 1000);\nseq = seq + 1;\nglobal.set(ggSeqName, seq);\n\n",
        "libs": [],
        "x": 430,
        "y": 300,
        "wires": [
            [
                "2f604dd13289631c"
            ],
            [
                "1b814d582e4e151d"
            ],
            [
                "e775908cdffda6e3"
            ],
            [
                "1372636f3f216dd4"
            ],
            [
                "4ba904bdd46bf2eb"
            ],
            [
                "b1855e7f42a31a84"
            ],
            [
                "b3e7aedb40ebf79a"
            ],
            [
                "8bc451f8e3a8cee8"
            ],
            [
                "e34219be7992d9cb"
            ],
            [
                "324097b75a19d743"
            ],
            [
                "6ef0aa51410d283e"
            ]
        ]
    },
    {
        "id": "2f604dd13289631c",
        "type": "debug",
        "z": "e4d7a9a5f6fa6302",
        "name": "debug 81",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 100,
        "wires": []
    },
    {
        "id": "1b814d582e4e151d",
        "type": "debug",
        "z": "e4d7a9a5f6fa6302",
        "name": "debug 82",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 140,
        "wires": []
    },
    {
        "id": "d5d8f9fbcce33231",
        "type": "function",
        "z": "e4d7a9a5f6fa6302",
        "name": "function 78",
        "func": "msg.payload = { \"status\": \"Recieved from cloud\" }\nmsg.limit = 1\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 140,
        "wires": [
            [
                "97d9d279789222af"
            ]
        ]
    },
    {
        "id": "97d9d279789222af",
        "type": "mongodb in",
        "z": "e4d7a9a5f6fa6302",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 370,
        "y": 140,
        "wires": [
            [
                "dfa142abdf5f23ed"
            ]
        ]
    },
    {
        "id": "b13cd3166354098c",
        "type": "inject",
        "z": "e4d7a9a5f6fa6302",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "d5d8f9fbcce33231"
            ]
        ]
    },
    {
        "id": "dfa142abdf5f23ed",
        "type": "function",
        "z": "e4d7a9a5f6fa6302",
        "name": "function 79",
        "func": "msg.payload = msg.payload[0]; \n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 240,
        "wires": [
            [
                "6af42cd319b6fcfd"
            ]
        ]
    },
    {
        "id": "e775908cdffda6e3",
        "type": "debug",
        "z": "e4d7a9a5f6fa6302",
        "name": "debug 83",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 180,
        "wires": []
    },
    {
        "id": "1372636f3f216dd4",
        "type": "debug",
        "z": "e4d7a9a5f6fa6302",
        "name": "debug 84",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 220,
        "wires": []
    },
    {
        "id": "4ba904bdd46bf2eb",
        "type": "debug",
        "z": "e4d7a9a5f6fa6302",
        "name": "debug 85",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 260,
        "wires": []
    },
    {
        "id": "b1855e7f42a31a84",
        "type": "debug",
        "z": "e4d7a9a5f6fa6302",
        "name": "debug 86",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 300,
        "wires": []
    },
    {
        "id": "b3e7aedb40ebf79a",
        "type": "debug",
        "z": "e4d7a9a5f6fa6302",
        "name": "debug 87",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 340,
        "wires": []
    },
    {
        "id": "8bc451f8e3a8cee8",
        "type": "debug",
        "z": "e4d7a9a5f6fa6302",
        "name": "debug 88",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 380,
        "wires": []
    },
    {
        "id": "e34219be7992d9cb",
        "type": "debug",
        "z": "e4d7a9a5f6fa6302",
        "name": "debug 89",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 420,
        "wires": []
    },
    {
        "id": "324097b75a19d743",
        "type": "debug",
        "z": "e4d7a9a5f6fa6302",
        "name": "debug 90",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 460,
        "wires": []
    },
    {
        "id": "16102f2cfaab1976",
        "type": "inject",
        "z": "e4d7a9a5f6fa6302",
        "name": "Task2",
        "props": [],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 320,
        "y": 560,
        "wires": [
            [
                "cbf17d95b6c6e0f9"
            ]
        ]
    },
    {
        "id": "cbf17d95b6c6e0f9",
        "type": "function",
        "z": "e4d7a9a5f6fa6302",
        "name": "",
        "func": "var Randomnumber = global.get(\"sequenceId\");\nmsg.payload = Randomnumber;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 560,
        "wires": [
            [
                "c0fcba2d7cfb8f9a"
            ]
        ]
    },
    {
        "id": "c0fcba2d7cfb8f9a",
        "type": "debug",
        "z": "e4d7a9a5f6fa6302",
        "name": "debug 91",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 560,
        "wires": []
    },
    {
        "id": "b4303d5e9011eff0",
        "type": "function",
        "z": "e4d7a9a5f6fa6302",
        "name": "function 81",
        "func": "var msg1 = { payload: msg.payload.commandType };\nvar msg2 = { payload: msg.payload.binId };\nvar msg3 = { payload: msg.payload.skuId};\nvar msg4 = { payload: msg.payload.pickQty };\nvar msg5 = { payload: msg.payload.pRequestId };\nvar msg6 = { payload: \"Trigger\" };\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6];\n\n",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "var ggSeqName = \"sequenceId\";\nvar seq = global.get(ggSeqName) ||\n    Math.floor(Math.random() * 1000 * 1000 * 1000);\nseq = seq + 1;\nglobal.set(ggSeqName, seq);\n\n",
        "libs": [],
        "x": 210,
        "y": 380,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "6ef0aa51410d283e",
        "type": "debug",
        "z": "e4d7a9a5f6fa6302",
        "name": "Random number",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 500,
        "wires": []
    }
]