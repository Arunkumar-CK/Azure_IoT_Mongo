[
    {
        "id": "7b229efa69ac7866",
        "type": "tab",
        "label": "Azure IoT Mongo",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "168ce6884d330b26",
        "type": "subflow",
        "name": "Azure status and other functions",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1120,
                "y": 160,
                "wires": [
                    {
                        "id": "d1ee9a47f23ddfe9",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "20d2b7582d7ddefa",
        "type": "subflow",
        "name": "Read request from PLC",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1240,
                "y": 480,
                "wires": [
                    {
                        "id": "7693a10b7bf49208",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "a27b931a44c8fb3e",
        "type": "subflow",
        "name": "Read DB and send data to PLC",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "7d0cb4005397cfab"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "abf459b12a58a7d6",
        "type": "subflow",
        "name": "Write Database",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 120,
                "wires": [
                    {
                        "id": "9aa8473e67afb64f"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b21bd85f55499775",
        "type": "subflow",
        "name": "Acknowlegement from PLC",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1260,
                "y": 340,
                "wires": [
                    {
                        "id": "775d09a2837ea5a3",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "3a67336c59077a33",
        "type": "subflow",
        "name": "Write Database (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 120,
                "wires": [
                    {
                        "id": "f629f3b9e66339e9"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "f472d2b1f93ccdc1",
        "type": "subflow",
        "name": "Read DB and send data to PLC (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "62faa4eb44e0632f"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "6f262be543c73d5c",
        "type": "subflow",
        "name": "Acknowlegement from PLC ",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1260,
                "y": 240,
                "wires": [
                    {
                        "id": "e19f64b248d0c9fa",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "127509e402f673b6",
        "type": "subflow",
        "name": "Azure status and other functions (2)",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1120,
                "y": 160,
                "wires": [
                    {
                        "id": "43bcfe7180954dfc",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "f4ebc30243c09416",
        "type": "ui_group",
        "name": "Audio Switch",
        "tab": "a91f179c6c2c2418",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a91f179c6c2c2418",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "773333850a653945",
        "type": "eth-ip endpoint",
        "address": "192.168.1.10",
        "slot": "0",
        "cycletime": "100",
        "name": "AB PLC",
        "vartable": {
            "": {
                "WMS_To_Plc_Msg.CommandType": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.rRequestId": {
                    "type": ""
                },
                "WMS_To_Plc_Msg.ToX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.sRequestId": {
                    "type": ""
                },
                "WMS_To_Plc_Msg.BinId": {
                    "type": ""
                },
                "WMS_To_Plc_Msg.pRequestId": {
                    "type": ""
                },
                "WMS_To_Plc_Msg.SkuId": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.PickQty": {
                    "type": "DINT"
                },
                "Plc_To_WMS_Msg.rRequestId": {
                    "type": ""
                },
                "Plc_To_WMS_Msg.sRequestId": {
                    "type": ""
                },
                "Plc_To_WMS_Msg.pRequestId": {
                    "type": ""
                },
                "Plc_To_Gateway_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_rRequest_Id_Ack": {
                    "type": ""
                },
                "Gateway_To_Plc_sRequest_Id_Ack": {
                    "type": ""
                },
                "Gateway_To_Plc_pRequest_Id_Ack": {
                    "type": ""
                },
                "MoverID[1].idle": {
                    "type": ""
                },
                "MoverID[2].idle": {
                    "type": ""
                },
                "MoverID[3].idle": {
                    "type": ""
                },
                "MoverID[4].idle": {
                    "type": ""
                },
                "Max_No_of_Bot": {
                    "type": ""
                },
                "Enable_Task": {
                    "type": ""
                },
                "Bot1_Storage_Error": {
                    "type": ""
                },
                "Bot2_Storage_Error": {
                    "type": ""
                }
            }
        }
    },
    {
        "id": "ad467d4fd7932147",
        "type": "eth-ip endpoint",
        "address": "192.168.1.10",
        "slot": "0",
        "cycletime": "100",
        "name": "AB PLC",
        "vartable": {
            "": {
                "WMS_To_Plc_Msg.CommandType": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.rRequestId": {
                    "type": null
                },
                "WMS_To_Plc_Msg.ToX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.sRequestId": {
                    "type": null
                },
                "WMS_To_Plc_Msg.BinId": {
                    "type": null
                },
                "WMS_To_Plc_Msg.pRequestId": {
                    "type": null
                },
                "WMS_To_Plc_Msg.SkuId": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.PickQty": {
                    "type": "DINT"
                },
                "Plc_To_WMS_Msg.rRequestId": {
                    "type": null
                },
                "Plc_To_WMS_Msg.sRequestId": {
                    "type": null
                },
                "Plc_To_WMS_Msg.pRequestId": {
                    "type": null
                },
                "Plc_To_Gateway_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_rRequest_Id_Ack": {
                    "type": null
                },
                "Gateway_To_Plc_sRequest_Id_Ack": {
                    "type": null
                },
                "Gateway_To_Plc_pRequest_Id_Ack": {
                    "type": null
                }
            }
        }
    },
    {
        "id": "8bdab089b2660f17",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "database",
        "name": ""
    },
    {
        "id": "dcc6c8e608e71d82",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "3d78b677.5d2c8a",
        "type": "sqlitedb",
        "db": "C:\\Users\\DELL\\Desktop\\PTL-Python\\SQLite.db",
        "mode": "RWC"
    },
    {
        "id": "2e14670c.5d4c98",
        "type": "mongodb",
        "hostname": "localhost",
        "port": "27017",
        "db": "test",
        "name": ""
    },
    {
        "id": "507905e135e26e8d",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "database",
        "name": ""
    },
    {
        "id": "1dc8f3e6fa36769b",
        "type": "eth-ip endpoint",
        "address": "192.168.2.252",
        "slot": "0",
        "cycletime": "100",
        "timeout": "3000000",
        "name": "AB PLC",
        "connectedMess": true,
        "vartable": {
            "": {
                "WMS_To_Plc_Msg.CommandType": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.rRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.ToX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.sRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.BinId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.pRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.SkuId": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.PickQty": {
                    "type": "DINT"
                },
                "Plc_To_WMS_Msg.rRequestId": {
                    "type": "STRING"
                },
                "Plc_To_WMS_Msg.sRequestId": {
                    "type": "STRING"
                },
                "Plc_To_WMS_Msg.pRequestId": {
                    "type": "STRING"
                },
                "Plc_To_Gateway_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_rRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Gateway_To_Plc_sRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Gateway_To_Plc_pRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Bot1_Storage_Error": {
                    "type": "BOOL"
                },
                "Bot2_Storage_Error": {
                    "type": "BOOL"
                },
                "Machine_Reset_ON": {
                    "type": "BOOL"
                },
                "Enable_Task_Handling": {
                    "type": "BOOL"
                },
                "FlushFIFO_Data": {
                    "type": "BOOL"
                },
                "Cmnd_Startup": {
                    "type": "BOOL"
                },
                "StartUp_Sequence_Number": {
                    "type": "INT"
                },
                "Mover_ID[1].Mover_Running_Seq": {
                    "type": "DINT"
                },
                "Mover_ID[2].Mover_Running_Seq": {
                    "type": "DINT"
                },
                "Mover_ID[1].ForkBot.Input.Single_Left_Storage_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[1].ForkBot.Input.Double_Left_Retrieval_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[2].ForkBot.Input.Single_Left_Storage_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[2].ForkBot.Input.Double_Left_Retrieval_Done": {
                    "type": "BOOL"
                },
                "GatewayMessageSequence_Number": {
                    "type": "INT"
                },
                "Enable_Queue": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "63b7f9e1d917f433",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "database",
        "name": ""
    },
    {
        "id": "78f5dbc37f11cb46",
        "type": "eth-ip endpoint",
        "address": "192.168.2.252",
        "slot": "0",
        "cycletime": "100",
        "timeout": "3000000",
        "name": "AB PLC",
        "connectedMess": true,
        "vartable": {
            "": {
                "WMS_To_Plc_Msg.CommandType": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.rRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.ToX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.sRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.BinId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.pRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.SkuId": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.PickQty": {
                    "type": "DINT"
                },
                "Plc_To_WMS_Msg.rRequestId": {
                    "type": "STRING"
                },
                "Plc_To_WMS_Msg.sRequestId": {
                    "type": "STRING"
                },
                "Plc_To_WMS_Msg.pRequestId": {
                    "type": "STRING"
                },
                "Plc_To_Gateway_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_rRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Gateway_To_Plc_sRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Gateway_To_Plc_pRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Bot1_Storage_Error": {
                    "type": "BOOL"
                },
                "Bot2_Storage_Error": {
                    "type": "BOOL"
                },
                "Machine_Reset_ON": {
                    "type": "BOOL"
                },
                "Enable_Task_Handling": {
                    "type": "BOOL"
                },
                "FlushFIFO_Data": {
                    "type": "BOOL"
                },
                "Cmnd_Startup": {
                    "type": "BOOL"
                },
                "StartUp_Sequence_Number": {
                    "type": "INT"
                },
                "Mover_ID[1].Mover_Running_Seq": {
                    "type": "DINT"
                },
                "Mover_ID[2].Mover_Running_Seq": {
                    "type": "DINT"
                },
                "Mover_ID[1].ForkBot.Input.Single_Left_Storage_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[1].ForkBot.Input.Double_Left_Retrieval_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[2].ForkBot.Input.Single_Left_Storage_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[2].ForkBot.Input.Double_Left_Retrieval_Done": {
                    "type": "BOOL"
                },
                "GatewayMessageSequence_Number": {
                    "type": "INT"
                },
                "Enable_Queue": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "c35329e490967af3",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "",
        "func": "var Randomnumber = global.get (\"Gateway_To_Plc_Msg_Id\");\nmsg.payload = Randomnumber;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 400,
        "wires": [
            [
                "c13f89b5a9f77de8"
            ]
        ]
    },
    {
        "id": "1ae4a5de4fe181c8",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "Task2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1700,
        "y": 400,
        "wires": [
            [
                "c35329e490967af3"
            ]
        ]
    },
    {
        "id": "5b0c921e515d49d7",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "send id to plc continously",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1700,
        "y": 520,
        "wires": [
            [
                "3ce75bca1545495d",
                "f26e4b53bf9f2a36",
                "e6ca2d2a1b1a3da7"
            ]
        ]
    },
    {
        "id": "3ce75bca1545495d",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "",
        "func": "msg.payload  = global.get (\"Gateway_To_Plc_rRequest_Id_Ack\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 480,
        "wires": [
            [
                "291330fa96143469"
            ]
        ]
    },
    {
        "id": "f26e4b53bf9f2a36",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "",
        "func": "msg.payload  = global.get (\"Gateway_To_Plc_sRequest_Id_Ack\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 520,
        "wires": [
            [
                "ac33b1cfb1d8f8ab"
            ]
        ]
    },
    {
        "id": "e6ca2d2a1b1a3da7",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "",
        "func": "msg.payload  = global.get (\"Gateway_To_Plc_pRequest_Id_Ack\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 560,
        "wires": [
            [
                "e38f5f7a2d039940"
            ]
        ]
    },
    {
        "id": "03d636e3e0237e20",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 22",
        "func": "global.set(\"countercopied\", 0);\nglobal.set(\"queuecounter\", 0);\nglobal.set(\"reqcountercopied\", 0);\nglobal.set(\"reqqueuecounter\", 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "c26b67d15dfeca1c",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 590,
        "y": 740,
        "wires": [
            [
                "03d636e3e0237e20"
            ]
        ]
    },
    {
        "id": "f570237459f554b9",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "buffer to String",
        "func": "//var b=Buffer.from(msg.payload);\n//var s=b.toString();\nvar type = typeof msg.payload\nif (type == \"object\")\n{\n    msg.payload = JSON.parse(msg.payload)\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1060,
        "wires": [
            [
                "3059d104d8fab924"
            ]
        ]
    },
    {
        "id": "ae700514bdc9f499",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"properties\":{\"propertyList\":[]},\"messageId\":\"\",\"to\":\"\",\"expiryTimeUtc\":null,\"lockToken\":\"\",\"correlationId\":\"\",\"userId\":\"\",\"payload\":{\"type\":\"Buffer\",\"data\":[123,10,32,32,34,98,105,110,73,100,34,58,32,34,66,80,84,67,48,50,45,51,55,45,49,45,50,45,49,34,44,10,32,32,34,99,111,109,109,97,110,100,84,121,112,101,34,58,32,53,44,10,32,32,34,112,82,101,113,117,101,115,116,73,100,34,58,32,34,57,97,54,48,55,102,51,51,45,51,53,55,53,45,52,97,49,102,45,57,51,98,54,45,100,51,55,48,100,101,99,102,101,53,55,51,34,44,10,32,32,34,112,105,99,107,81,116,121,34,58,32,49,44,10,32,32,34,115,107,117,73,100,34,58,32,34,70,67,66,49,48,48,54,48,34,10,125]}}",
        "payloadType": "json",
        "x": 790,
        "y": 1080,
        "wires": [
            [
                "f570237459f554b9"
            ]
        ]
    },
    {
        "id": "3059d104d8fab924",
        "type": "debug",
        "z": "168ce6884d330b26",
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1080,
        "wires": []
    },
    {
        "id": "86f6fa421f27cd15",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "connect first scan",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 750,
        "y": 120,
        "wires": [
            [
                "d1ee9a47f23ddfe9"
            ]
        ]
    },
    {
        "id": "91c2d14297728a8a",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "disconnect manually",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "x": 750,
        "y": 160,
        "wires": [
            [
                "d1ee9a47f23ddfe9"
            ]
        ]
    },
    {
        "id": "5ed43246e522db81",
        "type": "trigger",
        "z": "168ce6884d330b26",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 760,
        "y": 200,
        "wires": [
            [
                "d1ee9a47f23ddfe9"
            ]
        ]
    },
    {
        "id": "464205922a79ea08",
        "type": "switch",
        "z": "168ce6884d330b26",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Disconnected",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Error",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 530,
        "y": 280,
        "wires": [
            [
                "5ed43246e522db81",
                "cfaacd34cc7acd0d"
            ],
            [
                "5ed43246e522db81",
                "cfaacd34cc7acd0d"
            ],
            [
                "0d13f8d48dc2412e"
            ]
        ]
    },
    {
        "id": "0d13f8d48dc2412e",
        "type": "change",
        "z": "168ce6884d330b26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 260,
        "wires": [
            [
                "5ed43246e522db81"
            ]
        ]
    },
    {
        "id": "9abdaafbf381a3e1",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "",
        "func": "global.set(\"Azure1Status\",msg.status.text);\nmsg.payload={\n    \"status\":msg.status.text\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 200,
        "wires": [
            [
                "464205922a79ea08",
                "3fe59fb04c3d59b5"
            ]
        ]
    },
    {
        "id": "cfaacd34cc7acd0d",
        "type": "trigger",
        "z": "168ce6884d330b26",
        "name": "",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 910,
        "y": 520,
        "wires": [
            [
                "5ce0f047f6b393b1"
            ]
        ]
    },
    {
        "id": "84f458adc8b8dfab",
        "type": "status",
        "z": "168ce6884d330b26",
        "name": "",
        "scope": [
            "842966e89dcb8992"
        ],
        "x": 200,
        "y": 200,
        "wires": [
            [
                "9abdaafbf381a3e1"
            ]
        ]
    },
    {
        "id": "3fe59fb04c3d59b5",
        "type": "debug",
        "z": "168ce6884d330b26",
        "name": "connection status Azure",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 80,
        "wires": []
    },
    {
        "id": "5ce0f047f6b393b1",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 21",
        "func": "var input =msg.payload\nvar text1 = \"hello \"\nvar text2 = \"Azure Connectivity Error\"\nif (input == true)\n{\nmsg.payload = text1.concat(text2);\n}\nelse\n{\n   msg.payload= \"Azure Connectivity done\"; \n}\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 520,
        "wires": [
            [
                "cd0a13b3141e0712"
            ]
        ]
    },
    {
        "id": "cd0a13b3141e0712",
        "type": "ui_audio",
        "z": "168ce6884d330b26",
        "name": "",
        "group": "f4ebc30243c09416",
        "voice": "Google UK English Female",
        "always": false,
        "x": 1400,
        "y": 540,
        "wires": []
    },
    {
        "id": "e5c4e1f93d77aedf",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 19",
        "func": "var sw=msg.payload;\nif (sw == true) \n{\nmsg.payload=\"alarm Enabled \";\n}\nelse \n{\nmsg.payload=\"alarm disabled \";\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 480,
        "wires": [
            [
                "cd0a13b3141e0712"
            ]
        ]
    },
    {
        "id": "33396929adf75cc1",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 20",
        "func": "msg.payload = \"Task Request Queue Unload Stopped\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 860,
        "wires": [
            [
                "cd0a13b3141e0712",
                "242b0c63615144ac"
            ]
        ]
    },
    {
        "id": "0d63375035b604f0",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 24",
        "func": "if (msg.payload == true) {\n    msg.payload = \"Bot 1 Emulate3d Error\";\n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 580,
        "wires": [
            [
                "cd0a13b3141e0712"
            ]
        ]
    },
    {
        "id": "e860f97e60f7f5b4",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 25",
        "func": "msg.payload = \"Acknowledgement Request Queue Unload Stopped\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 800,
        "wires": [
            [
                "cd0a13b3141e0712"
            ]
        ]
    },
    {
        "id": "2d667b62586bab62",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 26",
        "func": "if(msg.payload == true){\nmsg.payload = \"Bot 2 Emulate3d Error\";\nreturn msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 620,
        "wires": [
            [
                "cd0a13b3141e0712"
            ]
        ]
    },
    {
        "id": "d123c5dd50c6f2e9",
        "type": "ui_switch",
        "z": "168ce6884d330b26",
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "f4ebc30243c09416",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 930,
        "y": 480,
        "wires": [
            [
                "e5c4e1f93d77aedf"
            ]
        ]
    },
    {
        "id": "772d17640549f38f",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "Task QUeue Stopped",
        "func": "var counter=global.get(\"queuecounter\");\nvar ccopied = global.get(\"countercopied\");\nif (counter==ccopied && counter!=0){\n    msg.payload =\"Queue Failure\";\n    return msg;\n}\nelse{\n   // msg.payload =\"Queue Okay\"\nglobal.set(\"countercopied\", counter);\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 860,
        "wires": [
            [
                "33396929adf75cc1"
            ]
        ]
    },
    {
        "id": "242b0c63615144ac",
        "type": "debug",
        "z": "168ce6884d330b26",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 760,
        "wires": []
    },
    {
        "id": "b9396654d36322d6",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "Task Request QUeue Stopped",
        "func": "var counter=global.get(\"reqqueuecounter\");\nvar ccopied = global.get(\"reqcountercopied\");\nif (counter==ccopied && counter!=0){\n    msg.payload =\"Queue Failure\";\n    return msg;\n}\nelse{\n   // msg.payload =\"Queue Okay\"\nglobal.set(\"reqcountercopied\", counter);\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 800,
        "wires": [
            [
                "e860f97e60f7f5b4"
            ]
        ]
    },
    {
        "id": "29f00e345537275b",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 590,
        "y": 860,
        "wires": [
            [
                "772d17640549f38f"
            ]
        ]
    },
    {
        "id": "19d6d3c011b64e35",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 590,
        "y": 800,
        "wires": [
            [
                "b9396654d36322d6"
            ]
        ]
    },
    {
        "id": "d1ee9a47f23ddfe9",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 29",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "5c4b2afac6e86f44",
        "type": "eth-ip in",
        "z": "168ce6884d330b26",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Bot1_Storage_Error",
        "program": "",
        "name": "",
        "x": 910,
        "y": 580,
        "wires": [
            [
                "0d63375035b604f0"
            ]
        ]
    },
    {
        "id": "2fc8432112c78d28",
        "type": "eth-ip in",
        "z": "168ce6884d330b26",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Bot2_Storage_Error",
        "program": "",
        "name": "",
        "x": 910,
        "y": 620,
        "wires": [
            [
                "2d667b62586bab62"
            ]
        ]
    },
    {
        "id": "c13f89b5a9f77de8",
        "type": "eth-ip out",
        "z": "168ce6884d330b26",
        "d": true,
        "endpoint": "773333850a653945",
        "variable": "Gateway_To_Plc_Msg_Id",
        "program": "",
        "name": "",
        "x": 2190,
        "y": 400,
        "wires": []
    },
    {
        "id": "291330fa96143469",
        "type": "eth-ip out",
        "z": "168ce6884d330b26",
        "d": true,
        "endpoint": "773333850a653945",
        "variable": "Gateway_To_Plc_rRequest_Id_Ack",
        "program": "",
        "name": "",
        "x": 2220,
        "y": 480,
        "wires": []
    },
    {
        "id": "ac33b1cfb1d8f8ab",
        "type": "eth-ip out",
        "z": "168ce6884d330b26",
        "d": true,
        "endpoint": "773333850a653945",
        "variable": "Gateway_To_Plc_sRequest_Id_Ack",
        "program": "",
        "name": "",
        "x": 2220,
        "y": 520,
        "wires": []
    },
    {
        "id": "e38f5f7a2d039940",
        "type": "eth-ip out",
        "z": "168ce6884d330b26",
        "d": true,
        "endpoint": "773333850a653945",
        "variable": "Gateway_To_Plc_pRequest_Id_Ack",
        "program": "",
        "name": "",
        "x": 2220,
        "y": 560,
        "wires": []
    },
    {
        "id": "7693a10b7bf49208",
        "type": "switch",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "property": "msg.payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ckplce3d",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1110,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "161f76d5e535a9bd",
        "type": "function",
        "z": "20d2b7582d7ddefa",
        "name": "Queue Count Capture",
        "func": "var count =msg._queueCount;\nglobal.set(\"reqqueuecounter\", count);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "e95d82b63661ffda",
        "type": "simple-queue",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "firstMessageBypass": true,
        "bypassInterval": "0",
        "x": 930,
        "y": 440,
        "wires": [
            [
                "161f76d5e535a9bd",
                "7693a10b7bf49208"
            ]
        ]
    },
    {
        "id": "a1af0365a39c91c0",
        "type": "change",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "queueCount",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 620,
        "wires": [
            [
                "e95d82b63661ffda"
            ]
        ]
    },
    {
        "id": "e7b970081118bc21",
        "type": "change",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 560,
        "wires": [
            [
                "e95d82b63661ffda"
            ]
        ]
    },
    {
        "id": "bb61a2904fa300c4",
        "type": "switch",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "property": "Azure1Status",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disconnected",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 560,
        "wires": [
            [],
            [],
            [
                "e7b970081118bc21"
            ]
        ]
    },
    {
        "id": "b6c5117fe07636da",
        "type": "function",
        "z": "20d2b7582d7ddefa",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n\n  \"deviceId\": \"ck-edge-test\",// \"ckplcprod\",\n  \"key\": \"4rmR7vjz0pMy85535C6SXbUubfHRjfrmEa996TANMCY=\",\n  \"protocol\": \"amqp\",\n  \"data\": {\n    \"requestId\": msg.payload\n  }\n}\nreturn msg;\n//carteplus-iothub-prod.azure-devices.net",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 480,
        "wires": [
            [
                "e95d82b63661ffda"
            ]
        ]
    },
    {
        "id": "73041e2730d81413",
        "type": "file",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "filename": "C:\\Datalog\\pRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 660,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "8a70adbc60eba39d",
        "type": "function",
        "z": "20d2b7582d7ddefa",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n\n    \"deviceId\": \"ck-edge-test\",// \"ckplcprod\",\n    \"key\": \"4rmR7vjz0pMy85535C6SXbUubfHRjfrmEa996TANMCY=\",\n    \"protocol\": \"amqp\",\n    \"data\": {\n        \"requestId\": msg.payload\n    }\n}\nreturn msg;\n//carteplus-iothub-prod.azure-devices.net",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 380,
        "wires": [
            [
                "e95d82b63661ffda"
            ]
        ]
    },
    {
        "id": "4d19052849a81e28",
        "type": "file",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "filename": "C:\\Datalog\\rRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 680,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "5f7db48c3ca62d95",
        "type": "function",
        "z": "20d2b7582d7ddefa",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n\n  \"deviceId\": \"ck-edge-test\",// \"ckplcprod\",\n  \"key\": \"4rmR7vjz0pMy85535C6SXbUubfHRjfrmEa996TANMCY=\",\n  \"protocol\": \"amqp\",\n  \"data\": {\n    \"requestId\": msg.payload\n  }\n}\nreturn msg;\n//carteplus-iothub-prod.azure-devices.net",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 280,
        "wires": [
            [
                "e95d82b63661ffda"
            ]
        ]
    },
    {
        "id": "77785c5479a32594",
        "type": "file",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "filename": "C:\\Datalog\\sRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 660,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "2fa22258378f78b4",
        "type": "function",
        "z": "20d2b7582d7ddefa",
        "name": "sRequsetId",
        "func": "global.set(\"Gateway_To_Plc_sRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 320,
        "wires": [
            [
                "77785c5479a32594"
            ]
        ]
    },
    {
        "id": "3ae7a229cbfde3ca",
        "type": "function",
        "z": "20d2b7582d7ddefa",
        "name": "rRequsetId",
        "func": "global.set(\"Gateway_To_Plc_rRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 220,
        "wires": [
            [
                "4d19052849a81e28"
            ]
        ]
    },
    {
        "id": "8a866b332eb44192",
        "type": "function",
        "z": "20d2b7582d7ddefa",
        "name": "pRequsetId",
        "func": "global.set(\"Gateway_To_Plc_pRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 420,
        "wires": [
            [
                "73041e2730d81413"
            ]
        ]
    },
    {
        "id": "7393c355ad20985c",
        "type": "inject",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "bb61a2904fa300c4"
            ]
        ]
    },
    {
        "id": "3d5bc94910c2b281",
        "type": "inject",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 640,
        "wires": [
            [
                "a1af0365a39c91c0"
            ]
        ]
    },
    {
        "id": "3d9557233b69f97c",
        "type": "eth-ip in",
        "z": "20d2b7582d7ddefa",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.rRequestId",
        "program": "",
        "name": "",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "3ae7a229cbfde3ca",
                "5f7db48c3ca62d95"
            ]
        ]
    },
    {
        "id": "083ebdb87977063c",
        "type": "eth-ip in",
        "z": "20d2b7582d7ddefa",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.sRequestId",
        "program": "",
        "name": "",
        "x": 190,
        "y": 320,
        "wires": [
            [
                "2fa22258378f78b4",
                "8a70adbc60eba39d"
            ]
        ]
    },
    {
        "id": "693fe02024e72646",
        "type": "eth-ip in",
        "z": "20d2b7582d7ddefa",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.pRequestId",
        "program": "",
        "name": "",
        "x": 190,
        "y": 420,
        "wires": [
            [
                "8a866b332eb44192",
                "b6c5117fe07636da"
            ]
        ]
    },
    {
        "id": "04db87075c2dc32a",
        "type": "mongodb out",
        "z": "a27b931a44c8fb3e",
        "mongodb": "8bdab089b2660f17",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 840,
        "y": 60,
        "wires": []
    },
    {
        "id": "a4f36c4de9f991e5",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "function 31",
        "func": "msg.query = { \"_id\": msg.payload[0]._id}\nmsg.payload = msg.payload[0]\n\nmsg.payload.status = \"Sent to PLC\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 60,
        "wires": [
            [
                "04db87075c2dc32a",
                "4eceaefe693f31c7"
            ]
        ]
    },
    {
        "id": "4b230ef305221d80",
        "type": "mongodb in",
        "z": "a27b931a44c8fb3e",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 350,
        "y": 60,
        "wires": [
            [
                "e426270bc9c054d7"
            ]
        ]
    },
    {
        "id": "7d0cb4005397cfab",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "function 32",
        "func": "msg.payload = { \"status\": \"Recieved from cloud\" }\nmsg.limit = 1\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 60,
        "wires": [
            [
                "4b230ef305221d80"
            ]
        ]
    },
    {
        "id": "4eceaefe693f31c7",
        "type": "link out",
        "z": "a27b931a44c8fb3e",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "2ddfbeabf9c20d7c"
        ],
        "x": 795,
        "y": 100,
        "wires": []
    },
    {
        "id": "d0f30ea23840756b",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.FromY",
        "program": "",
        "name": "",
        "x": 840,
        "y": 360,
        "wires": []
    },
    {
        "id": "bdcd9d01e79f56ad",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data fromY",
        "func": "msg.payload = msg.payload.fromY\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 360,
        "wires": [
            [
                "d0f30ea23840756b"
            ]
        ]
    },
    {
        "id": "05615c6ffb8c76ca",
        "type": "switch",
        "z": "a27b931a44c8fb3e",
        "name": "",
        "property": "msg.payload.commandType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 130,
        "y": 440,
        "wires": [
            [
                "e57d164c46eba292",
                "b9a25fe1f727f7c5",
                "f20e2c0d052a2ef7",
                "bdcd9d01e79f56ad",
                "2f6bc208ae7e8771",
                "f12a4c37bbf81c04",
                "cc5b087158440bc7",
                "8a91fc859efbcf44",
                "7d116d59875298dd",
                "351091b8b66a4d78",
                "9e8c32e4c953f752"
            ],
            [
                "0dc9d5836e29e327",
                "d086390531b92a19",
                "4c71685ca697e9c3",
                "9e872ebec5c231ea",
                "da26367ea45c0dd0",
                "9e8c32e4c953f752"
            ],
            [
                "e57d164c46eba292",
                "b9a25fe1f727f7c5",
                "f20e2c0d052a2ef7",
                "bdcd9d01e79f56ad",
                "2f6bc208ae7e8771",
                "f12a4c37bbf81c04",
                "cc5b087158440bc7",
                "8a91fc859efbcf44",
                "7d116d59875298dd",
                "351091b8b66a4d78",
                "9e8c32e4c953f752"
            ]
        ]
    },
    {
        "id": "2ddfbeabf9c20d7c",
        "type": "link in",
        "z": "a27b931a44c8fb3e",
        "name": "link in 1",
        "links": [
            "4eceaefe693f31c7"
        ],
        "x": 35,
        "y": 440,
        "wires": [
            [
                "05615c6ffb8c76ca"
            ]
        ]
    },
    {
        "id": "e57d164c46eba292",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read commandType",
        "func": "msg.payload = msg.payload.commandType\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 240,
        "wires": [
            [
                "5d49c8b9a40cb62e"
            ]
        ]
    },
    {
        "id": "b9a25fe1f727f7c5",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data binId",
        "func": "msg.payload = msg.payload.binId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 280,
        "wires": [
            [
                "700950aa7917fe62"
            ]
        ]
    },
    {
        "id": "f20e2c0d052a2ef7",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data fromX",
        "func": "msg.payload = msg.payload.fromX\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 320,
        "wires": [
            [
                "60f9d0af5119bf7f"
            ]
        ]
    },
    {
        "id": "2f6bc208ae7e8771",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data fromZ",
        "func": "msg.payload = msg.payload.fromZ\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 400,
        "wires": [
            [
                "1702b6742423ba80"
            ]
        ]
    },
    {
        "id": "f12a4c37bbf81c04",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data rRequestId",
        "func": "msg.payload = msg.payload.rRequestId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 440,
        "wires": [
            [
                "d511083cb31c8256"
            ]
        ]
    },
    {
        "id": "cc5b087158440bc7",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data toX",
        "func": "msg.payload = msg.payload.toX\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 480,
        "wires": [
            [
                "a740b5b7c6eed77e"
            ]
        ]
    },
    {
        "id": "8a91fc859efbcf44",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data toY",
        "func": "msg.payload = msg.payload.toY\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 520,
        "wires": [
            [
                "ae6b4705327fd6ac"
            ]
        ]
    },
    {
        "id": "7d116d59875298dd",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data toZ",
        "func": "msg.payload = msg.payload.toZ\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 560,
        "wires": [
            [
                "4332c8c3f18a3ba9"
            ]
        ]
    },
    {
        "id": "351091b8b66a4d78",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data Column sRequestId",
        "func": "msg.payload = msg.payload.sRequestId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 600,
        "wires": [
            [
                "f0c9608b9435acc7"
            ]
        ]
    },
    {
        "id": "9e8c32e4c953f752",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "generate random number for msg id to plc",
        "func": "var Randomnumber = Math.floor(Math.random() * 1000+1);\nglobal.set (\"Gateway_To_Plc_Msg_Id\",Randomnumber);\nmsg.payload = Randomnumber;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 900,
        "wires": [
            [
                "179f50c860b90853"
            ]
        ]
    },
    {
        "id": "0dc9d5836e29e327",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data skuId",
        "func": "msg.payload = msg.payload.skuId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 740,
        "wires": [
            [
                "a29c58d18ee8e1f6"
            ]
        ]
    },
    {
        "id": "d086390531b92a19",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data pickQty",
        "func": "msg.payload = msg.payload.pickQty\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 780,
        "wires": [
            [
                "c33aad591171d6db"
            ]
        ]
    },
    {
        "id": "4c71685ca697e9c3",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data Column pRequestId",
        "func": "msg.payload = msg.payload.pRequestId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 820,
        "wires": [
            [
                "cd00977dfc86db92"
            ]
        ]
    },
    {
        "id": "9e872ebec5c231ea",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read commandType",
        "func": "msg.payload = msg.payload.commandType\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 660,
        "wires": [
            [
                "4cdacc2041215b66"
            ]
        ]
    },
    {
        "id": "da26367ea45c0dd0",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data binId",
        "func": "msg.payload = msg.payload.binId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 700,
        "wires": [
            [
                "c37844af36f37abd"
            ]
        ]
    },
    {
        "id": "5d49c8b9a40cb62e",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.CommandType",
        "program": "",
        "name": "",
        "x": 860,
        "y": 220,
        "wires": []
    },
    {
        "id": "700950aa7917fe62",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.BinId",
        "program": "",
        "name": "",
        "x": 830,
        "y": 280,
        "wires": []
    },
    {
        "id": "60f9d0af5119bf7f",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.FromX",
        "program": "",
        "name": "",
        "x": 840,
        "y": 320,
        "wires": []
    },
    {
        "id": "1702b6742423ba80",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.FromZ",
        "program": "",
        "name": "",
        "x": 830,
        "y": 400,
        "wires": []
    },
    {
        "id": "d511083cb31c8256",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.rRequestId",
        "program": "",
        "name": "",
        "x": 850,
        "y": 440,
        "wires": []
    },
    {
        "id": "a740b5b7c6eed77e",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.ToX",
        "program": "",
        "name": "",
        "x": 830,
        "y": 480,
        "wires": []
    },
    {
        "id": "ae6b4705327fd6ac",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.ToY",
        "program": "",
        "name": "",
        "x": 830,
        "y": 520,
        "wires": []
    },
    {
        "id": "4332c8c3f18a3ba9",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.ToZ",
        "program": "",
        "name": "",
        "x": 830,
        "y": 560,
        "wires": []
    },
    {
        "id": "f0c9608b9435acc7",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.sRequestId",
        "program": "",
        "name": "",
        "x": 850,
        "y": 600,
        "wires": []
    },
    {
        "id": "179f50c860b90853",
        "type": "debug",
        "z": "a27b931a44c8fb3e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 900,
        "wires": []
    },
    {
        "id": "a29c58d18ee8e1f6",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.SkuId",
        "program": "",
        "name": "",
        "x": 830,
        "y": 740,
        "wires": []
    },
    {
        "id": "c33aad591171d6db",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.PickQty",
        "program": "",
        "name": "",
        "x": 840,
        "y": 780,
        "wires": []
    },
    {
        "id": "cd00977dfc86db92",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.pRequestId",
        "program": "",
        "name": "",
        "x": 850,
        "y": 820,
        "wires": []
    },
    {
        "id": "4cdacc2041215b66",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.CommandType",
        "program": "",
        "name": "",
        "x": 860,
        "y": 660,
        "wires": []
    },
    {
        "id": "c37844af36f37abd",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.BinId",
        "program": "",
        "name": "",
        "x": 830,
        "y": 700,
        "wires": []
    },
    {
        "id": "e426270bc9c054d7",
        "type": "switch",
        "z": "a27b931a44c8fb3e",
        "name": "",
        "property": "msg.payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 60,
        "wires": [
            [
                "a4f36c4de9f991e5"
            ]
        ]
    },
    {
        "id": "9aa8473e67afb64f",
        "type": "function",
        "z": "abf459b12a58a7d6",
        "name": "Convert BSON to JSON",
        "func": "const bufferData = msg.payload;\nconst jsonString = bufferData.toString('utf-8');\nconst dataObject = JSON.parse(jsonString);\nmsg.payload = dataObject;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 120,
        "wires": [
            [
                "a5c0beb60a335eb4",
                "4650798c501a1606"
            ]
        ]
    },
    {
        "id": "89f9675ed297ef66",
        "type": "mongodb out",
        "z": "abf459b12a58a7d6",
        "mongodb": "8bdab089b2660f17",
        "name": "Insert",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 770,
        "y": 120,
        "wires": []
    },
    {
        "id": "a5c0beb60a335eb4",
        "type": "function",
        "z": "abf459b12a58a7d6",
        "name": "function 30",
        "func": "msg.payload.status = \"Recieved from cloud\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 120,
        "wires": [
            [
                "89f9675ed297ef66"
            ]
        ]
    },
    {
        "id": "818ea5d21bec3bb3",
        "type": "function",
        "z": "abf459b12a58a7d6",
        "name": "Prepare random data",
        "func": "if (!flow.get('counter')) {\n    flow.set('counter', 0);\n}\n\nvar counter = flow.get('counter') + 1;\nflow.set('counter', counter);\n\nvar characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789012345678901234567890123456789012345678901234567890123456789';\nvar str5 = '', str1 = '', str2 = '', str3 = '', str4 = '', rrequest = '', srequest = '';\nvar binid ='BPTC02-37-0-1-3'\nfor (var i = 0; i < 8; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str1 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str2 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str3 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str4 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 12; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str5 += characters.charAt(randomIndex);\n}\nrrequest = str1 + '-' + str2 + '-' + str3 + '-' + str4 + '-' + str5;\n\nstr1 = str2 = str3 = str4 = str5=''\n\nfor (var i = 0; i < 8; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str1 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str2 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str3 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str4 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 12; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str5 += characters.charAt(randomIndex);\n}\nsrequest = str1 + '-' + str2 + '-' + str3 + '-' + str4 + '-' + str5;\nmsg.payload={ \n    \"binId\": \"TOTE0101010\" + counter, \n    \"commandType\": 1, \n    \"rRequestId\": rrequest, \n    \"sRequestId\": srequest, \n    \"toX\": 1, \"toY\": 1, \"toZ\": 1, \n    \"fromX\": 12, \"fromY\": 4, \"fromZ\": 1 \n    }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "d09ccbad2c64cbaf",
        "type": "inject",
        "z": "abf459b12a58a7d6",
        "name": "Generate and Inject Data",
        "props": [],
        "repeat": "7",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 40,
        "wires": [
            [
                "818ea5d21bec3bb3"
            ]
        ]
    },
    {
        "id": "4650798c501a1606",
        "type": "switch",
        "z": "abf459b12a58a7d6",
        "name": "",
        "property": "msg.payload.commandType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 220,
        "wires": [
            [
                "adf115c0cf6bb49f"
            ]
        ]
    },
    {
        "id": "adf115c0cf6bb49f",
        "type": "function",
        "z": "abf459b12a58a7d6",
        "name": "",
        "func": "var time = new Date();\nmsg.payload = {\n    \"message\":msg.payload,\n    \"timestamp\":time\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 220,
        "wires": [
            [
                "ddc7edb10406e859"
            ]
        ]
    },
    {
        "id": "ddc7edb10406e859",
        "type": "file",
        "z": "abf459b12a58a7d6",
        "name": "",
        "filename": "C:\\Datalog\\cloudmessage.csv",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 840,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "bc7e839c7307e51c",
        "type": "eth-ip in",
        "z": "b21bd85f55499775",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.sRequestId",
        "program": "",
        "name": "",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "eed806a91dd01b8c",
                "d00dc15cf41ed2af",
                "926072810e121b35"
            ]
        ]
    },
    {
        "id": "eed806a91dd01b8c",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "sRequsetId",
        "func": "global.set(\"Gateway_To_Plc_sRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 180,
        "wires": [
            [
                "e94bc83a49cb729c"
            ]
        ]
    },
    {
        "id": "d00dc15cf41ed2af",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n    \"requestId\": msg.payload\n}\n\nmsg.payload = JSON.stringify(msg.payload)\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 240,
        "wires": [
            [
                "587d4878410cd170"
            ]
        ]
    },
    {
        "id": "926072810e121b35",
        "type": "link out",
        "z": "b21bd85f55499775",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "95a946ace8a5fdca"
        ],
        "x": 385,
        "y": 220,
        "wires": []
    },
    {
        "id": "e94bc83a49cb729c",
        "type": "file",
        "z": "b21bd85f55499775",
        "name": "",
        "filename": "C:\\Datalog\\sRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 680,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "587d4878410cd170",
        "type": "simple-queue",
        "z": "b21bd85f55499775",
        "name": "",
        "firstMessageBypass": true,
        "bypassInterval": "0",
        "x": 950,
        "y": 300,
        "wires": [
            [
                "6563915a9e175031",
                "775d09a2837ea5a3"
            ]
        ]
    },
    {
        "id": "9b58794d1f21e9cf",
        "type": "change",
        "z": "b21bd85f55499775",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "queueCount",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 480,
        "wires": [
            [
                "587d4878410cd170"
            ]
        ]
    },
    {
        "id": "db43e39ce6b1ef3c",
        "type": "change",
        "z": "b21bd85f55499775",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 420,
        "wires": [
            [
                "587d4878410cd170"
            ]
        ]
    },
    {
        "id": "fd0aab21a3f963f0",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n  \"requestId\": msg.payload\n}\n\nmsg.payload = JSON.stringify(msg.payload)\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 340,
        "wires": [
            [
                "587d4878410cd170"
            ]
        ]
    },
    {
        "id": "7dfe1b0d862f6960",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n  \"requestId\": msg.payload\n}\n\nmsg.payload = JSON.stringify(msg.payload)\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 140,
        "wires": [
            [
                "587d4878410cd170"
            ]
        ]
    },
    {
        "id": "6563915a9e175031",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "Queue Count Capture",
        "func": "var count =msg._queueCount;\nglobal.set(\"reqqueuecounter\", count);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "775d09a2837ea5a3",
        "type": "switch",
        "z": "b21bd85f55499775",
        "name": "",
        "property": "msg.payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1130,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "206b330784552903",
        "type": "inject",
        "z": "b21bd85f55499775",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 370,
        "y": 500,
        "wires": [
            [
                "9b58794d1f21e9cf"
            ]
        ]
    },
    {
        "id": "57362a726bfb32a0",
        "type": "switch",
        "z": "b21bd85f55499775",
        "name": "",
        "property": "Azure1Status",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disconnected",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 470,
        "y": 420,
        "wires": [
            [],
            [],
            [
                "db43e39ce6b1ef3c"
            ]
        ]
    },
    {
        "id": "c457d1ed87fa5308",
        "type": "eth-ip in",
        "z": "b21bd85f55499775",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.pRequestId",
        "program": "",
        "name": "",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "e5da2a3c75866743",
                "fd0aab21a3f963f0",
                "24ea2502f7362e25"
            ]
        ]
    },
    {
        "id": "d196634cf360d7ad",
        "type": "eth-ip in",
        "z": "b21bd85f55499775",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.rRequestId",
        "program": "",
        "name": "",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "c593c96a94a695b5",
                "7dfe1b0d862f6960",
                "1db70c93e855a135"
            ]
        ]
    },
    {
        "id": "60d5d5d3e28f39f3",
        "type": "inject",
        "z": "b21bd85f55499775",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1.5",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 420,
        "wires": [
            [
                "57362a726bfb32a0"
            ]
        ]
    },
    {
        "id": "e5da2a3c75866743",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "pRequsetId",
        "func": "global.set(\"Gateway_To_Plc_pRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 280,
        "wires": [
            [
                "6b683397dd449fc5"
            ]
        ]
    },
    {
        "id": "24ea2502f7362e25",
        "type": "link out",
        "z": "b21bd85f55499775",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "f6415885ca6b290a"
        ],
        "x": 385,
        "y": 320,
        "wires": []
    },
    {
        "id": "c593c96a94a695b5",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "rRequsetId",
        "func": "global.set(\"Gateway_To_Plc_rRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 80,
        "wires": [
            [
                "9cd409e327f8a1b4"
            ]
        ]
    },
    {
        "id": "1db70c93e855a135",
        "type": "link out",
        "z": "b21bd85f55499775",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "1b6e432bd20c4993"
        ],
        "x": 375,
        "y": 120,
        "wires": []
    },
    {
        "id": "6b683397dd449fc5",
        "type": "file",
        "z": "b21bd85f55499775",
        "name": "",
        "filename": "C:\\Datalog\\pRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 680,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "9cd409e327f8a1b4",
        "type": "file",
        "z": "b21bd85f55499775",
        "name": "",
        "filename": "C:\\Datalog\\rRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 700,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "12a58724ddade1e8",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 33",
        "func": "msg.payload = { \"sRequestId\": msg.payload}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 620,
        "wires": [
            [
                "52ebbb88cf12c53c"
            ]
        ]
    },
    {
        "id": "d60c399fc8adb2c7",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 34",
        "func": "msg.payload = { \"PRequestId\": msg.payload}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 700,
        "wires": [
            [
                "4726f78b4cd6ea9a"
            ]
        ]
    },
    {
        "id": "95a946ace8a5fdca",
        "type": "link in",
        "z": "b21bd85f55499775",
        "name": "link in 3",
        "links": [
            "926072810e121b35"
        ],
        "x": 305,
        "y": 620,
        "wires": [
            [
                "12a58724ddade1e8"
            ]
        ]
    },
    {
        "id": "f6415885ca6b290a",
        "type": "link in",
        "z": "b21bd85f55499775",
        "name": "link in 4",
        "links": [
            "24ea2502f7362e25"
        ],
        "x": 305,
        "y": 700,
        "wires": [
            [
                "d60c399fc8adb2c7"
            ]
        ]
    },
    {
        "id": "1b6e432bd20c4993",
        "type": "link in",
        "z": "b21bd85f55499775",
        "name": "link in 5",
        "links": [
            "1db70c93e855a135"
        ],
        "x": 305,
        "y": 760,
        "wires": [
            [
                "ca16a37db5227346"
            ]
        ]
    },
    {
        "id": "ca16a37db5227346",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 35",
        "func": "msg.payload = { \"rRequestId\": msg.payload }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 760,
        "wires": [
            [
                "9c71686891dc73db"
            ]
        ]
    },
    {
        "id": "9c71686891dc73db",
        "type": "mongodb in",
        "z": "b21bd85f55499775",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 610,
        "y": 760,
        "wires": [
            [
                "7c95d675bc9d596e"
            ]
        ]
    },
    {
        "id": "7c95d675bc9d596e",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 36",
        "func": "msg.query = { \"_id\": msg.payload[0]._id }\nmsg.payload = msg.payload[0]\n\nmsg.payload.status = \"rRequest recieved from PLC\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 760,
        "wires": [
            [
                "a755d98a29858474"
            ]
        ]
    },
    {
        "id": "a755d98a29858474",
        "type": "mongodb out",
        "z": "b21bd85f55499775",
        "mongodb": "8bdab089b2660f17",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 940,
        "y": 760,
        "wires": []
    },
    {
        "id": "52ebbb88cf12c53c",
        "type": "mongodb in",
        "z": "b21bd85f55499775",
        "mongodb": "63b7f9e1d917f433",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 610,
        "y": 620,
        "wires": [
            [
                "94be1ed149e32997"
            ]
        ]
    },
    {
        "id": "94be1ed149e32997",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 40",
        "func": "msg.query = { \"_id\": msg.payload[0]._id}\nmsg.payload = msg.payload[0]\nif (msg.payload.status == \"rRequest recieved from PLC\") \n{\n    msg.payload.status = \"rRequest and sRequest recieved from PLC\"\n}\nelse\n{ \n    msg.payload.status = \"Error: sRequest recieved and rRequest missing from PLC\" \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 620,
        "wires": [
            [
                "afe90f0d4829a716"
            ]
        ]
    },
    {
        "id": "afe90f0d4829a716",
        "type": "mongodb out",
        "z": "b21bd85f55499775",
        "mongodb": "63b7f9e1d917f433",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 940,
        "y": 620,
        "wires": []
    },
    {
        "id": "6742fbf1e7160334",
        "type": "mongodb out",
        "z": "b21bd85f55499775",
        "mongodb": "63b7f9e1d917f433",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 940,
        "y": 700,
        "wires": []
    },
    {
        "id": "496d7474ddb8b782",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 41",
        "func": "msg.query = { \"_id\": msg.payload[0]._id}\nmsg.payload = msg.payload[0]\n\nmsg.payload.status = \"pRequest recieved from PLC\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 700,
        "wires": [
            [
                "6742fbf1e7160334"
            ]
        ]
    },
    {
        "id": "4726f78b4cd6ea9a",
        "type": "mongodb in",
        "z": "b21bd85f55499775",
        "mongodb": "63b7f9e1d917f433",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 610,
        "y": 700,
        "wires": [
            [
                "496d7474ddb8b782"
            ]
        ]
    },
    {
        "id": "1baaec9cc2480c32",
        "type": "mongodb out",
        "z": "3a67336c59077a33",
        "mongodb": "63b7f9e1d917f433",
        "name": "Insert",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 670,
        "y": 120,
        "wires": []
    },
    {
        "id": "1c9be19555746afc",
        "type": "function",
        "z": "3a67336c59077a33",
        "name": "function 30",
        "func": "msg.payload.status =\"Recieved from cloud\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 120,
        "wires": [
            [
                "1baaec9cc2480c32"
            ]
        ]
    },
    {
        "id": "4d997eaf3658f40a",
        "type": "function",
        "z": "3a67336c59077a33",
        "name": "Prepare random data",
        "func": "if (!flow.get('counter')) {\n    flow.set('counter', 0);\n}\n\nvar counter = flow.get('counter') + 1;\nflow.set('counter', counter);\n\nvar characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789012345678901234567890123456789012345678901234567890123456789';\nvar str5 = '', str1 = '', str2 = '', str3 = '', str4 = '', rrequest = '', srequest = '';\nvar binid ='BPTC02-37-0-1-3'\nfor (var i = 0; i < 8; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str1 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str2 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str3 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str4 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 12; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str5 += characters.charAt(randomIndex);\n}\nrrequest = str1 + '-' + str2 + '-' + str3 + '-' + str4 + '-' + str5;\n\nstr1 = str2 = str3 = str4 = str5=''\n\nfor (var i = 0; i < 8; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str1 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str2 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str3 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str4 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 12; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str5 += characters.charAt(randomIndex);\n}\nsrequest = str1 + '-' + str2 + '-' + str3 + '-' + str4 + '-' + str5;\nmsg.payload={ \n    \"binId\": \"TOTE0101010\" + counter, \n    \"commandType\": 1, \n    \"rRequestId\": rrequest, \n    \"sRequestId\": srequest, \n    \"toX\": 1, \"toY\": 1, \"toZ\": 1, \n    \"fromX\": 12, \"fromY\": 4, \"fromZ\": 1 \n    }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "d1c5db4907c75346",
        "type": "inject",
        "z": "3a67336c59077a33",
        "name": "Generate and Inject Data",
        "props": [],
        "repeat": "7",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 40,
        "wires": [
            [
                "4d997eaf3658f40a"
            ]
        ]
    },
    {
        "id": "f629f3b9e66339e9",
        "type": "function",
        "z": "3a67336c59077a33",
        "name": "Convert BSON to JSON",
        "func": "const bufferData = msg.payload;\nconst jsonString = bufferData.toString('utf-8');\nconst dataObject = JSON.parse(jsonString);\nmsg.payload = dataObject;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 120,
        "wires": [
            [
                "1c9be19555746afc",
                "a4df4b72a7edf3df"
            ]
        ]
    },
    {
        "id": "2e407e412543e368",
        "type": "file",
        "z": "3a67336c59077a33",
        "name": "",
        "filename": "C:\\Datalog\\cloudmessage.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 870,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "25b37d00922b6f12",
        "type": "function",
        "z": "3a67336c59077a33",
        "name": "",
        "func": "var time = new Date();\nmsg.payload = {\n    \"message\":msg.payload,\n    \"timestamp\":time\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 160,
        "wires": [
            [
                "2e407e412543e368"
            ]
        ]
    },
    {
        "id": "a4df4b72a7edf3df",
        "type": "switch",
        "z": "3a67336c59077a33",
        "name": "",
        "property": "msg.payload.commandType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 160,
        "wires": [
            [
                "25b37d00922b6f12"
            ]
        ]
    },
    {
        "id": "1e9d846d8cb0ad6f",
        "type": "mongodb out",
        "z": "f472d2b1f93ccdc1",
        "mongodb": "63b7f9e1d917f433",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 860,
        "y": 60,
        "wires": []
    },
    {
        "id": "4d3e8e7d538a81aa",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "function 31",
        "func": "msg.query = { \"_id\": msg.payload[0]._id}\nmsg.payload = msg.payload[0]\n\nmsg.payload.status = \"Sent to PLC\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 60,
        "wires": [
            [
                "1e9d846d8cb0ad6f",
                "514f4bd8537b0bf7"
            ]
        ]
    },
    {
        "id": "8892d234699003ca",
        "type": "mongodb in",
        "z": "f472d2b1f93ccdc1",
        "mongodb": "63b7f9e1d917f433",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 350,
        "y": 60,
        "wires": [
            [
                "4e015b3a8b880529"
            ]
        ]
    },
    {
        "id": "62faa4eb44e0632f",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "function 32",
        "func": "msg.payload = { \"status\": \"Recieved from cloud\" }\nmsg.limit = 1\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 60,
        "wires": [
            [
                "8892d234699003ca"
            ]
        ]
    },
    {
        "id": "514f4bd8537b0bf7",
        "type": "link out",
        "z": "f472d2b1f93ccdc1",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "50966d622d3c5b3f"
        ],
        "x": 815,
        "y": 100,
        "wires": []
    },
    {
        "id": "452386de3783a4fa",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "Read Data fromY",
        "func": "msg.payload = msg.payload.fromY\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 360,
        "wires": [
            [
                "eb7ab894813bcbc8",
                "fef52fd18352670f"
            ]
        ]
    },
    {
        "id": "03c61005c99869a7",
        "type": "switch",
        "z": "f472d2b1f93ccdc1",
        "name": "",
        "property": "msg.payload.commandType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 130,
        "y": 440,
        "wires": [
            [
                "44e11f862e7feae6",
                "8179e9ba3613111b",
                "9e82736976429046",
                "452386de3783a4fa",
                "335e8bba878544e1",
                "572c80a96e27bab1",
                "88abd7f1967070a8",
                "e790aa9132bec8fb",
                "db5323684e32bf66",
                "3b3404490859dd08",
                "30e367485ff157e7"
            ],
            [
                "aa62bc646c5258aa",
                "17c77c2b0a186091",
                "936f544c6a765351",
                "4c3ee43b7793d11a",
                "67543ea6f45a360a",
                "30e367485ff157e7"
            ],
            [
                "44e11f862e7feae6",
                "8179e9ba3613111b",
                "9e82736976429046",
                "452386de3783a4fa",
                "335e8bba878544e1",
                "572c80a96e27bab1",
                "88abd7f1967070a8",
                "e790aa9132bec8fb",
                "db5323684e32bf66",
                "3b3404490859dd08",
                "30e367485ff157e7"
            ]
        ]
    },
    {
        "id": "50966d622d3c5b3f",
        "type": "link in",
        "z": "f472d2b1f93ccdc1",
        "name": "link in 1",
        "links": [
            "514f4bd8537b0bf7"
        ],
        "x": 35,
        "y": 440,
        "wires": [
            [
                "03c61005c99869a7"
            ]
        ]
    },
    {
        "id": "44e11f862e7feae6",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "Read commandType",
        "func": "msg.payload = msg.payload.commandType\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 240,
        "wires": [
            [
                "6e328530c5a9a721",
                "9bf83bdd552ef10a"
            ]
        ]
    },
    {
        "id": "8179e9ba3613111b",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "Read Data binId",
        "func": "msg.payload = msg.payload.binId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 280,
        "wires": [
            [
                "4512b2f1317cd40f",
                "d7c266a310ef2e83"
            ]
        ]
    },
    {
        "id": "9e82736976429046",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "Read Data fromX",
        "func": "msg.payload = msg.payload.fromX\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 320,
        "wires": [
            [
                "716b690e0d9a5879",
                "f108dffe2394203f"
            ]
        ]
    },
    {
        "id": "335e8bba878544e1",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "Read Data fromZ",
        "func": "msg.payload = msg.payload.fromZ\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 400,
        "wires": [
            [
                "e89d88a80ab9b0a2",
                "3051bcd53f4c4ed6"
            ]
        ]
    },
    {
        "id": "572c80a96e27bab1",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "Read Data rRequestId",
        "func": "msg.payload = msg.payload.rRequestId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 440,
        "wires": [
            [
                "9991c7ec912f95c4",
                "954f21fe0ff0a9c9"
            ]
        ]
    },
    {
        "id": "88abd7f1967070a8",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "Read Data toX",
        "func": "msg.payload = msg.payload.toX\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 480,
        "wires": [
            [
                "1bdda70c0cc2c34b",
                "fdf462350152b825"
            ]
        ]
    },
    {
        "id": "e790aa9132bec8fb",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "Read Data toY",
        "func": "msg.payload = msg.payload.toY\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 520,
        "wires": [
            [
                "90a9f651fd5e0aad",
                "2d4a0420158055ea"
            ]
        ]
    },
    {
        "id": "db5323684e32bf66",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "Read Data toZ",
        "func": "msg.payload = msg.payload.toZ\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 560,
        "wires": [
            [
                "780e64df5dbb1aa9",
                "4b8f781a9e794af2"
            ]
        ]
    },
    {
        "id": "3b3404490859dd08",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "Read Data Column sRequestId",
        "func": "msg.payload = msg.payload.sRequestId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 600,
        "wires": [
            [
                "a6c8f755c50d7137",
                "685b676d3bda845d"
            ]
        ]
    },
    {
        "id": "30e367485ff157e7",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "generate random number for msg id to plc",
        "func": "var seq = global.get('Gateway_to_Plc_Msg_Id') ||\n    Math.floor(Math.random() * 1000 * 1000 * 1000);\nseq = seq + 1;\nglobal.set(\"Gateway_To_Plc_Msg_Id\", seq);\nmsg.payload = seq;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 900,
        "wires": [
            [
                "17225b21030a5ef0"
            ]
        ]
    },
    {
        "id": "aa62bc646c5258aa",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "Read Data skuId",
        "func": "msg.payload = msg.payload.skuId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 740,
        "wires": [
            [
                "97233408b479a28b",
                "5c2d9786ed695b78"
            ]
        ]
    },
    {
        "id": "17c77c2b0a186091",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "Read Data pickQty",
        "func": "msg.payload = msg.payload.pickQty\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 780,
        "wires": [
            [
                "bd19169d2b99b66a",
                "ccb47a70984dd89a"
            ]
        ]
    },
    {
        "id": "936f544c6a765351",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "Read Data Column pRequestId",
        "func": "msg.payload = msg.payload.pRequestId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 820,
        "wires": [
            [
                "fe9094cc6790c84e",
                "d1f10941e51a3e83"
            ]
        ]
    },
    {
        "id": "4c3ee43b7793d11a",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "Read commandType",
        "func": "msg.payload = msg.payload.commandType\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 660,
        "wires": [
            [
                "98db2666215d772d",
                "57949c3f19aabebd"
            ]
        ]
    },
    {
        "id": "67543ea6f45a360a",
        "type": "function",
        "z": "f472d2b1f93ccdc1",
        "name": "Read Data binId",
        "func": "msg.payload = msg.payload.binId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 700,
        "wires": [
            [
                "fc807b886af2c4bb",
                "c83deb861e321b1f"
            ]
        ]
    },
    {
        "id": "17225b21030a5ef0",
        "type": "debug",
        "z": "f472d2b1f93ccdc1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 900,
        "wires": []
    },
    {
        "id": "4e015b3a8b880529",
        "type": "switch",
        "z": "f472d2b1f93ccdc1",
        "name": "",
        "property": "msg.payload[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "4d3e8e7d538a81aa"
            ]
        ]
    },
    {
        "id": "6e328530c5a9a721",
        "type": "debug",
        "z": "f472d2b1f93ccdc1",
        "name": "debug 43",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 240,
        "wires": []
    },
    {
        "id": "4512b2f1317cd40f",
        "type": "debug",
        "z": "f472d2b1f93ccdc1",
        "name": "debug 44",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 280,
        "wires": []
    },
    {
        "id": "716b690e0d9a5879",
        "type": "debug",
        "z": "f472d2b1f93ccdc1",
        "name": "debug 45",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 320,
        "wires": []
    },
    {
        "id": "eb7ab894813bcbc8",
        "type": "debug",
        "z": "f472d2b1f93ccdc1",
        "name": "debug 46",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 360,
        "wires": []
    },
    {
        "id": "e89d88a80ab9b0a2",
        "type": "debug",
        "z": "f472d2b1f93ccdc1",
        "name": "debug 47",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 400,
        "wires": []
    },
    {
        "id": "9991c7ec912f95c4",
        "type": "debug",
        "z": "f472d2b1f93ccdc1",
        "name": "debug 48",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 440,
        "wires": []
    },
    {
        "id": "1bdda70c0cc2c34b",
        "type": "debug",
        "z": "f472d2b1f93ccdc1",
        "name": "debug 49",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 480,
        "wires": []
    },
    {
        "id": "90a9f651fd5e0aad",
        "type": "debug",
        "z": "f472d2b1f93ccdc1",
        "name": "debug 50",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 520,
        "wires": []
    },
    {
        "id": "780e64df5dbb1aa9",
        "type": "debug",
        "z": "f472d2b1f93ccdc1",
        "name": "debug 51",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 560,
        "wires": []
    },
    {
        "id": "a6c8f755c50d7137",
        "type": "debug",
        "z": "f472d2b1f93ccdc1",
        "name": "debug 52",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 600,
        "wires": []
    },
    {
        "id": "98db2666215d772d",
        "type": "debug",
        "z": "f472d2b1f93ccdc1",
        "name": "debug 53",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 660,
        "wires": []
    },
    {
        "id": "fc807b886af2c4bb",
        "type": "debug",
        "z": "f472d2b1f93ccdc1",
        "name": "debug 54",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 700,
        "wires": []
    },
    {
        "id": "97233408b479a28b",
        "type": "debug",
        "z": "f472d2b1f93ccdc1",
        "name": "debug 55",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 740,
        "wires": []
    },
    {
        "id": "bd19169d2b99b66a",
        "type": "debug",
        "z": "f472d2b1f93ccdc1",
        "name": "debug 56",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 780,
        "wires": []
    },
    {
        "id": "fe9094cc6790c84e",
        "type": "debug",
        "z": "f472d2b1f93ccdc1",
        "name": "debug 57",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 820,
        "wires": []
    },
    {
        "id": "9bf83bdd552ef10a",
        "type": "eth-ip out",
        "z": "f472d2b1f93ccdc1",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "WMS_To_Plc_Msg.CommandType",
        "program": "",
        "name": "",
        "x": 860,
        "y": 240,
        "wires": []
    },
    {
        "id": "d7c266a310ef2e83",
        "type": "eth-ip out",
        "z": "f472d2b1f93ccdc1",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "WMS_To_Plc_Msg.BinId",
        "program": "",
        "name": "",
        "x": 850,
        "y": 280,
        "wires": []
    },
    {
        "id": "f108dffe2394203f",
        "type": "eth-ip out",
        "z": "f472d2b1f93ccdc1",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "WMS_To_Plc_Msg.FromX",
        "program": "",
        "name": "",
        "x": 860,
        "y": 320,
        "wires": []
    },
    {
        "id": "fef52fd18352670f",
        "type": "eth-ip out",
        "z": "f472d2b1f93ccdc1",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "WMS_To_Plc_Msg.FromY",
        "program": "",
        "name": "",
        "x": 860,
        "y": 360,
        "wires": []
    },
    {
        "id": "3051bcd53f4c4ed6",
        "type": "eth-ip out",
        "z": "f472d2b1f93ccdc1",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "WMS_To_Plc_Msg.FromZ",
        "program": "",
        "name": "",
        "x": 850,
        "y": 400,
        "wires": []
    },
    {
        "id": "954f21fe0ff0a9c9",
        "type": "eth-ip out",
        "z": "f472d2b1f93ccdc1",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "WMS_To_Plc_Msg.rRequestId",
        "program": "",
        "name": "",
        "x": 870,
        "y": 440,
        "wires": []
    },
    {
        "id": "fdf462350152b825",
        "type": "eth-ip out",
        "z": "f472d2b1f93ccdc1",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "WMS_To_Plc_Msg.ToX",
        "program": "",
        "name": "",
        "x": 850,
        "y": 480,
        "wires": []
    },
    {
        "id": "2d4a0420158055ea",
        "type": "eth-ip out",
        "z": "f472d2b1f93ccdc1",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "WMS_To_Plc_Msg.ToY",
        "program": "",
        "name": "",
        "x": 850,
        "y": 520,
        "wires": []
    },
    {
        "id": "4b8f781a9e794af2",
        "type": "eth-ip out",
        "z": "f472d2b1f93ccdc1",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "WMS_To_Plc_Msg.ToZ",
        "program": "",
        "name": "",
        "x": 850,
        "y": 560,
        "wires": []
    },
    {
        "id": "685b676d3bda845d",
        "type": "eth-ip out",
        "z": "f472d2b1f93ccdc1",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "WMS_To_Plc_Msg.sRequestId",
        "program": "",
        "name": "",
        "x": 870,
        "y": 600,
        "wires": []
    },
    {
        "id": "57949c3f19aabebd",
        "type": "eth-ip out",
        "z": "f472d2b1f93ccdc1",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "WMS_To_Plc_Msg.CommandType",
        "program": "",
        "name": "",
        "x": 880,
        "y": 660,
        "wires": []
    },
    {
        "id": "c83deb861e321b1f",
        "type": "eth-ip out",
        "z": "f472d2b1f93ccdc1",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "WMS_To_Plc_Msg.BinId",
        "program": "",
        "name": "",
        "x": 850,
        "y": 700,
        "wires": []
    },
    {
        "id": "5c2d9786ed695b78",
        "type": "eth-ip out",
        "z": "f472d2b1f93ccdc1",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "WMS_To_Plc_Msg.SkuId",
        "program": "",
        "name": "",
        "x": 850,
        "y": 740,
        "wires": []
    },
    {
        "id": "ccb47a70984dd89a",
        "type": "eth-ip out",
        "z": "f472d2b1f93ccdc1",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "WMS_To_Plc_Msg.PickQty",
        "program": "",
        "name": "",
        "x": 860,
        "y": 780,
        "wires": []
    },
    {
        "id": "d1f10941e51a3e83",
        "type": "eth-ip out",
        "z": "f472d2b1f93ccdc1",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "WMS_To_Plc_Msg.pRequestId",
        "program": "",
        "name": "",
        "x": 870,
        "y": 820,
        "wires": []
    },
    {
        "id": "6fce4c92921e0e0f",
        "type": "function",
        "z": "6f262be543c73d5c",
        "name": "sRequsetId",
        "func": "global.set(\"Gateway_To_Plc_sRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 180,
        "wires": [
            [
                "cbe6c3a97bb8b692"
            ]
        ]
    },
    {
        "id": "093f9b01b508d73f",
        "type": "function",
        "z": "6f262be543c73d5c",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n  \n    \"requestId\": msg.payload\n  \n}\n\nmsg.payload = JSON.stringify(msg.payload)\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 240,
        "wires": [
            [
                "458a6f6473c7dc4d"
            ]
        ]
    },
    {
        "id": "fcd178b88a645282",
        "type": "link out",
        "z": "6f262be543c73d5c",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "aa120b2b6f19770f"
        ],
        "x": 385,
        "y": 220,
        "wires": []
    },
    {
        "id": "cbe6c3a97bb8b692",
        "type": "file",
        "z": "6f262be543c73d5c",
        "name": "",
        "filename": "C:\\Datalog\\sRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 680,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ca0af5d959cac1d4",
        "type": "function",
        "z": "6f262be543c73d5c",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n  \"requestId\": msg.payload\n}\n\nmsg.payload = JSON.stringify(msg.payload)\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 340,
        "wires": [
            [
                "458a6f6473c7dc4d"
            ]
        ]
    },
    {
        "id": "f74175d20591e7bb",
        "type": "function",
        "z": "6f262be543c73d5c",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n    \"requestId\": msg.payload\n}\n\nmsg.payload = JSON.stringify(msg.payload)\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 140,
        "wires": [
            [
                "458a6f6473c7dc4d"
            ]
        ]
    },
    {
        "id": "1be00ba488b7a0ed",
        "type": "function",
        "z": "6f262be543c73d5c",
        "name": "pRequsetId",
        "func": "global.set(\"Gateway_To_Plc_pRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 280,
        "wires": [
            [
                "5364bfd679ed7f4d"
            ]
        ]
    },
    {
        "id": "c2179567a44b3533",
        "type": "link out",
        "z": "6f262be543c73d5c",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "e9da36c368b3c712"
        ],
        "x": 385,
        "y": 320,
        "wires": []
    },
    {
        "id": "e8bc8884e62c0c97",
        "type": "function",
        "z": "6f262be543c73d5c",
        "name": "rRequsetId",
        "func": "global.set(\"Gateway_To_Plc_rRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 80,
        "wires": [
            [
                "8bb3cc754508e327"
            ]
        ]
    },
    {
        "id": "51e733652ca11f72",
        "type": "link out",
        "z": "6f262be543c73d5c",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "1383f46fcd4ceaac"
        ],
        "x": 375,
        "y": 120,
        "wires": []
    },
    {
        "id": "5364bfd679ed7f4d",
        "type": "file",
        "z": "6f262be543c73d5c",
        "name": "",
        "filename": "C:\\Datalog\\pRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 680,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "8bb3cc754508e327",
        "type": "file",
        "z": "6f262be543c73d5c",
        "name": "",
        "filename": "C:\\Datalog\\rRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 700,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "eb5c9515da5c7ebd",
        "type": "function",
        "z": "6f262be543c73d5c",
        "name": "function 33",
        "func": "msg.payload = { \"sRequestId\": msg.payload}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 620,
        "wires": [
            [
                "bb50e4b9c40329ec"
            ]
        ]
    },
    {
        "id": "ab7da0ce7d876ec4",
        "type": "function",
        "z": "6f262be543c73d5c",
        "name": "function 34",
        "func": "msg.payload = { \"pRequestId\": msg.payload}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 700,
        "wires": [
            [
                "152cc81045fe264c"
            ]
        ]
    },
    {
        "id": "aa120b2b6f19770f",
        "type": "link in",
        "z": "6f262be543c73d5c",
        "name": "link in 3",
        "links": [
            "fcd178b88a645282"
        ],
        "x": 305,
        "y": 620,
        "wires": [
            [
                "eb5c9515da5c7ebd"
            ]
        ]
    },
    {
        "id": "e9da36c368b3c712",
        "type": "link in",
        "z": "6f262be543c73d5c",
        "name": "link in 4",
        "links": [
            "c2179567a44b3533"
        ],
        "x": 305,
        "y": 700,
        "wires": [
            [
                "ab7da0ce7d876ec4"
            ]
        ]
    },
    {
        "id": "1383f46fcd4ceaac",
        "type": "link in",
        "z": "6f262be543c73d5c",
        "name": "link in 5",
        "links": [
            "51e733652ca11f72"
        ],
        "x": 305,
        "y": 760,
        "wires": [
            [
                "9d47b208abb1f458"
            ]
        ]
    },
    {
        "id": "9d47b208abb1f458",
        "type": "function",
        "z": "6f262be543c73d5c",
        "name": "function 35",
        "func": "msg.payload = { \"rRequestId\": msg.payload }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 760,
        "wires": [
            [
                "0cc9f76412dde31d"
            ]
        ]
    },
    {
        "id": "0cc9f76412dde31d",
        "type": "mongodb in",
        "z": "6f262be543c73d5c",
        "mongodb": "63b7f9e1d917f433",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 610,
        "y": 760,
        "wires": [
            [
                "cf93e38c33b196f1"
            ]
        ]
    },
    {
        "id": "cf93e38c33b196f1",
        "type": "function",
        "z": "6f262be543c73d5c",
        "name": "function 36",
        "func": "msg.query = { \"_id\": msg.payload[0]._id}\nmsg.payload = msg.payload[0]\n\nmsg.payload.status = \"rRequest recieved from PLC\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 760,
        "wires": [
            [
                "4f2b567a5dbb5648"
            ]
        ]
    },
    {
        "id": "4f2b567a5dbb5648",
        "type": "mongodb out",
        "z": "6f262be543c73d5c",
        "mongodb": "63b7f9e1d917f433",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 940,
        "y": 760,
        "wires": []
    },
    {
        "id": "d249115731a50a60",
        "type": "eth-ip in",
        "z": "6f262be543c73d5c",
        "endpoint": "78f5dbc37f11cb46",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.rRequestId",
        "program": "",
        "name": "",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "e8bc8884e62c0c97",
                "51e733652ca11f72",
                "f74175d20591e7bb"
            ]
        ]
    },
    {
        "id": "a6f3647c287e5ec5",
        "type": "eth-ip in",
        "z": "6f262be543c73d5c",
        "endpoint": "78f5dbc37f11cb46",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.sRequestId",
        "program": "",
        "name": "",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "6fce4c92921e0e0f",
                "fcd178b88a645282",
                "093f9b01b508d73f"
            ]
        ]
    },
    {
        "id": "7046078b473d0a36",
        "type": "eth-ip in",
        "z": "6f262be543c73d5c",
        "endpoint": "78f5dbc37f11cb46",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.pRequestId",
        "program": "",
        "name": "",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "1be00ba488b7a0ed",
                "c2179567a44b3533",
                "ca0af5d959cac1d4"
            ]
        ]
    },
    {
        "id": "152cc81045fe264c",
        "type": "mongodb in",
        "z": "6f262be543c73d5c",
        "mongodb": "63b7f9e1d917f433",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 610,
        "y": 700,
        "wires": [
            [
                "384879a9ac584a95"
            ]
        ]
    },
    {
        "id": "384879a9ac584a95",
        "type": "function",
        "z": "6f262be543c73d5c",
        "name": "function 38",
        "func": "msg.query = { \"_id\": msg.payload[0]._id}\nmsg.payload = msg.payload[0]\n\nmsg.payload.status = \"pRequest recieved from PLC\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 700,
        "wires": [
            [
                "b68b04181420da7e"
            ]
        ]
    },
    {
        "id": "b68b04181420da7e",
        "type": "mongodb out",
        "z": "6f262be543c73d5c",
        "mongodb": "63b7f9e1d917f433",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 940,
        "y": 700,
        "wires": []
    },
    {
        "id": "bb50e4b9c40329ec",
        "type": "mongodb in",
        "z": "6f262be543c73d5c",
        "mongodb": "63b7f9e1d917f433",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 610,
        "y": 620,
        "wires": [
            [
                "9aeed04849ad0c3c"
            ]
        ]
    },
    {
        "id": "9aeed04849ad0c3c",
        "type": "function",
        "z": "6f262be543c73d5c",
        "name": "function 39",
        "func": "msg.query = { \"_id\": msg.payload[0]._id}\nmsg.payload = msg.payload[0]\nif (msg.payload.status == \"rRequest recieved from PLC\") \n{\n    msg.payload.status = \"rRequest and sRequest recieved from PLC\"\n}\nelse\n{ \n    msg.payload.status = \"Error: sRequest recieved and rRequest missing from PLC\" \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 620,
        "wires": [
            [
                "fd50d1b8f07953d2"
            ]
        ]
    },
    {
        "id": "fd50d1b8f07953d2",
        "type": "mongodb out",
        "z": "6f262be543c73d5c",
        "mongodb": "63b7f9e1d917f433",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 940,
        "y": 620,
        "wires": []
    },
    {
        "id": "093e8605ee47c52a",
        "type": "change",
        "z": "6f262be543c73d5c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "queueCount",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 480,
        "wires": [
            [
                "458a6f6473c7dc4d"
            ]
        ]
    },
    {
        "id": "318ccb69d45192a0",
        "type": "change",
        "z": "6f262be543c73d5c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 420,
        "wires": [
            [
                "458a6f6473c7dc4d"
            ]
        ]
    },
    {
        "id": "27f4b5257b5cc65e",
        "type": "inject",
        "z": "6f262be543c73d5c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 370,
        "y": 500,
        "wires": [
            [
                "093e8605ee47c52a"
            ]
        ]
    },
    {
        "id": "a9143d61932ef2ba",
        "type": "switch",
        "z": "6f262be543c73d5c",
        "name": "",
        "property": "Azure1Status",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disconnected",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 470,
        "y": 420,
        "wires": [
            [],
            [],
            [
                "318ccb69d45192a0"
            ]
        ]
    },
    {
        "id": "50d5623188c1244d",
        "type": "inject",
        "z": "6f262be543c73d5c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1.5",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 420,
        "wires": [
            [
                "a9143d61932ef2ba"
            ]
        ]
    },
    {
        "id": "458a6f6473c7dc4d",
        "type": "simple-queue",
        "z": "6f262be543c73d5c",
        "name": "",
        "firstMessageBypass": true,
        "bypassInterval": "0",
        "x": 970,
        "y": 260,
        "wires": [
            [
                "0742eed3a44535e4",
                "e19f64b248d0c9fa"
            ]
        ]
    },
    {
        "id": "0742eed3a44535e4",
        "type": "function",
        "z": "6f262be543c73d5c",
        "name": "Queue Count Capture",
        "func": "var count =msg._queueCount;\nglobal.set(\"reqqueuecounter\", count);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "e19f64b248d0c9fa",
        "type": "switch",
        "z": "6f262be543c73d5c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1170,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "40e6523bcd4818d2",
        "type": "function",
        "z": "127509e402f673b6",
        "name": "",
        "func": "var Randomnumber = global.get (\"Gateway_To_Plc_Msg_Id\");\nmsg.payload = Randomnumber;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 400,
        "wires": [
            [
                "240f23549e1cef3b"
            ]
        ]
    },
    {
        "id": "5c62e8e564a95dfb",
        "type": "inject",
        "z": "127509e402f673b6",
        "name": "Task2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1700,
        "y": 400,
        "wires": [
            [
                "40e6523bcd4818d2"
            ]
        ]
    },
    {
        "id": "92d05a907d556bbd",
        "type": "inject",
        "z": "127509e402f673b6",
        "name": "send id to plc continously",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1700,
        "y": 520,
        "wires": [
            [
                "fb7313aabfb98a84",
                "a3a3bda316150b3c",
                "9dbc7044004f0775"
            ]
        ]
    },
    {
        "id": "fb7313aabfb98a84",
        "type": "function",
        "z": "127509e402f673b6",
        "name": "",
        "func": "msg.payload  = global.get (\"Gateway_To_Plc_rRequest_Id_Ack\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 480,
        "wires": [
            [
                "8f10b2ec63e2bb3b"
            ]
        ]
    },
    {
        "id": "a3a3bda316150b3c",
        "type": "function",
        "z": "127509e402f673b6",
        "name": "",
        "func": "msg.payload  = global.get (\"Gateway_To_Plc_sRequest_Id_Ack\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 520,
        "wires": [
            [
                "7446c0b2c0c34d36"
            ]
        ]
    },
    {
        "id": "9dbc7044004f0775",
        "type": "function",
        "z": "127509e402f673b6",
        "name": "",
        "func": "msg.payload  = global.get (\"Gateway_To_Plc_pRequest_Id_Ack\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 560,
        "wires": [
            [
                "a11499f333cd8f3a"
            ]
        ]
    },
    {
        "id": "5381c57a77a767ba",
        "type": "function",
        "z": "127509e402f673b6",
        "name": "function 22",
        "func": "global.set(\"countercopied\", 0);\nglobal.set(\"queuecounter\", 0);\nglobal.set(\"reqcountercopied\", 0);\nglobal.set(\"reqqueuecounter\", 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "4f6de13057da24a2",
        "type": "inject",
        "z": "127509e402f673b6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 590,
        "y": 740,
        "wires": [
            [
                "5381c57a77a767ba"
            ]
        ]
    },
    {
        "id": "0367ed7bedbb911b",
        "type": "function",
        "z": "127509e402f673b6",
        "name": "buffer to String",
        "func": "//var b=Buffer.from(msg.payload);\n//var s=b.toString();\nvar type = typeof msg.payload\nif (type == \"object\")\n{\n    msg.payload = JSON.parse(msg.payload)\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1060,
        "wires": [
            [
                "c51df54a509fa73b"
            ]
        ]
    },
    {
        "id": "1828ab4c3b135042",
        "type": "inject",
        "z": "127509e402f673b6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"properties\":{\"propertyList\":[]},\"messageId\":\"\",\"to\":\"\",\"expiryTimeUtc\":null,\"lockToken\":\"\",\"correlationId\":\"\",\"userId\":\"\",\"payload\":{\"type\":\"Buffer\",\"data\":[123,10,32,32,34,98,105,110,73,100,34,58,32,34,66,80,84,67,48,50,45,51,55,45,49,45,50,45,49,34,44,10,32,32,34,99,111,109,109,97,110,100,84,121,112,101,34,58,32,53,44,10,32,32,34,112,82,101,113,117,101,115,116,73,100,34,58,32,34,57,97,54,48,55,102,51,51,45,51,53,55,53,45,52,97,49,102,45,57,51,98,54,45,100,51,55,48,100,101,99,102,101,53,55,51,34,44,10,32,32,34,112,105,99,107,81,116,121,34,58,32,49,44,10,32,32,34,115,107,117,73,100,34,58,32,34,70,67,66,49,48,48,54,48,34,10,125]}}",
        "payloadType": "json",
        "x": 790,
        "y": 1080,
        "wires": [
            [
                "0367ed7bedbb911b"
            ]
        ]
    },
    {
        "id": "c51df54a509fa73b",
        "type": "debug",
        "z": "127509e402f673b6",
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1080,
        "wires": []
    },
    {
        "id": "8d8a645a25ebf044",
        "type": "inject",
        "z": "127509e402f673b6",
        "name": "connect first scan",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 750,
        "y": 120,
        "wires": [
            [
                "43bcfe7180954dfc"
            ]
        ]
    },
    {
        "id": "6fbff035f750b142",
        "type": "inject",
        "z": "127509e402f673b6",
        "name": "disconnect manually",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "x": 750,
        "y": 160,
        "wires": [
            [
                "43bcfe7180954dfc"
            ]
        ]
    },
    {
        "id": "23d5dcb4323cd08e",
        "type": "trigger",
        "z": "127509e402f673b6",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 760,
        "y": 200,
        "wires": [
            [
                "43bcfe7180954dfc"
            ]
        ]
    },
    {
        "id": "27b9fe186ff9f2ec",
        "type": "switch",
        "z": "127509e402f673b6",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Disconnected",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Error",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 530,
        "y": 280,
        "wires": [
            [
                "23d5dcb4323cd08e",
                "9a00505684afff80"
            ],
            [
                "23d5dcb4323cd08e",
                "9a00505684afff80"
            ],
            [
                "5f0351ef8364bfd5"
            ]
        ]
    },
    {
        "id": "5f0351ef8364bfd5",
        "type": "change",
        "z": "127509e402f673b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 260,
        "wires": [
            [
                "23d5dcb4323cd08e"
            ]
        ]
    },
    {
        "id": "cdbb83d3e4a934a5",
        "type": "function",
        "z": "127509e402f673b6",
        "name": "",
        "func": "global.set(\"Azure1Status\",msg.status.text);\nmsg.payload={\n    \"status\":msg.status.text\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 200,
        "wires": [
            [
                "27b9fe186ff9f2ec",
                "1d1f48cb6b182dca"
            ]
        ]
    },
    {
        "id": "9a00505684afff80",
        "type": "trigger",
        "z": "127509e402f673b6",
        "name": "",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 910,
        "y": 520,
        "wires": [
            [
                "62c8434959da2620"
            ]
        ]
    },
    {
        "id": "5bf90d8ff11257b4",
        "type": "status",
        "z": "127509e402f673b6",
        "name": "",
        "scope": [
            "842966e89dcb8992"
        ],
        "x": 200,
        "y": 200,
        "wires": [
            [
                "cdbb83d3e4a934a5"
            ]
        ]
    },
    {
        "id": "1d1f48cb6b182dca",
        "type": "debug",
        "z": "127509e402f673b6",
        "name": "connection status Azure",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 80,
        "wires": []
    },
    {
        "id": "62c8434959da2620",
        "type": "function",
        "z": "127509e402f673b6",
        "name": "function 21",
        "func": "var input =msg.payload\nvar text1 = \"hello \"\nvar text2 = \"Azure Connectivity Error\"\nif (input == true)\n{\nmsg.payload = text1.concat(text2);\n}\nelse\n{\n   msg.payload= \"Azure Connectivity done\"; \n}\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 520,
        "wires": [
            [
                "142d6b13f5b6bbd9"
            ]
        ]
    },
    {
        "id": "142d6b13f5b6bbd9",
        "type": "ui_audio",
        "z": "127509e402f673b6",
        "name": "",
        "group": "f4ebc30243c09416",
        "voice": "Google UK English Female",
        "always": false,
        "x": 1400,
        "y": 540,
        "wires": []
    },
    {
        "id": "41290c0e24318a1b",
        "type": "function",
        "z": "127509e402f673b6",
        "name": "function 19",
        "func": "var sw=msg.payload;\nif (sw == true) \n{\nmsg.payload=\"alarm Enabled \";\n}\nelse \n{\nmsg.payload=\"alarm disabled \";\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 480,
        "wires": [
            [
                "142d6b13f5b6bbd9"
            ]
        ]
    },
    {
        "id": "37b3a970aa3f1aab",
        "type": "function",
        "z": "127509e402f673b6",
        "name": "function 20",
        "func": "msg.payload = \"Task Request Queue Unload Stopped\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 860,
        "wires": [
            [
                "142d6b13f5b6bbd9",
                "3cea4e849799b549"
            ]
        ]
    },
    {
        "id": "e891cf3957ef2f43",
        "type": "function",
        "z": "127509e402f673b6",
        "name": "function 24",
        "func": "if (msg.payload == true) {\n    msg.payload = \"Bot 1 Emulate3d Error\";\n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 580,
        "wires": [
            [
                "142d6b13f5b6bbd9"
            ]
        ]
    },
    {
        "id": "94f5d5b034612a11",
        "type": "function",
        "z": "127509e402f673b6",
        "name": "function 25",
        "func": "msg.payload = \"Acknowledgement Request Queue Unload Stopped\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 800,
        "wires": [
            [
                "142d6b13f5b6bbd9"
            ]
        ]
    },
    {
        "id": "9cd15fa2026ec1e2",
        "type": "function",
        "z": "127509e402f673b6",
        "name": "function 26",
        "func": "if(msg.payload == true){\nmsg.payload = \"Bot 2 Emulate3d Error\";\nreturn msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 620,
        "wires": [
            [
                "142d6b13f5b6bbd9"
            ]
        ]
    },
    {
        "id": "83c6e6097b81fb8e",
        "type": "ui_switch",
        "z": "127509e402f673b6",
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "f4ebc30243c09416",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 930,
        "y": 480,
        "wires": [
            [
                "41290c0e24318a1b"
            ]
        ]
    },
    {
        "id": "d4b9d7c7b0a72f66",
        "type": "function",
        "z": "127509e402f673b6",
        "name": "Task QUeue Stopped",
        "func": "var counter=global.get(\"queuecounter\");\nvar ccopied = global.get(\"countercopied\");\nif (counter==ccopied && counter!=0){\n    msg.payload =\"Queue Failure\";\n    return msg;\n}\nelse{\n   // msg.payload =\"Queue Okay\"\nglobal.set(\"countercopied\", counter);\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 860,
        "wires": [
            [
                "37b3a970aa3f1aab"
            ]
        ]
    },
    {
        "id": "3cea4e849799b549",
        "type": "debug",
        "z": "127509e402f673b6",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 760,
        "wires": []
    },
    {
        "id": "11e424e0b74a2158",
        "type": "function",
        "z": "127509e402f673b6",
        "name": "Task Request QUeue Stopped",
        "func": "var counter=global.get(\"reqqueuecounter\");\nvar ccopied = global.get(\"reqcountercopied\");\nif (counter==ccopied && counter!=0){\n    msg.payload =\"Queue Failure\";\n    return msg;\n}\nelse{\n   // msg.payload =\"Queue Okay\"\nglobal.set(\"reqcountercopied\", counter);\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 800,
        "wires": [
            [
                "94f5d5b034612a11"
            ]
        ]
    },
    {
        "id": "104ab78524f01778",
        "type": "inject",
        "z": "127509e402f673b6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 590,
        "y": 860,
        "wires": [
            [
                "d4b9d7c7b0a72f66"
            ]
        ]
    },
    {
        "id": "0726ca427ad64bf2",
        "type": "inject",
        "z": "127509e402f673b6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 590,
        "y": 800,
        "wires": [
            [
                "11e424e0b74a2158"
            ]
        ]
    },
    {
        "id": "43bcfe7180954dfc",
        "type": "function",
        "z": "127509e402f673b6",
        "name": "function 29",
        "func": "msg.payload=\"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "5280e8a67412c95d",
        "type": "eth-ip in",
        "z": "127509e402f673b6",
        "endpoint": "78f5dbc37f11cb46",
        "mode": "single",
        "variable": "Bot2_Storage_Error",
        "program": "",
        "name": "",
        "x": 690,
        "y": 620,
        "wires": [
            [
                "9cd15fa2026ec1e2"
            ]
        ]
    },
    {
        "id": "f8502acabd954219",
        "type": "eth-ip in",
        "z": "127509e402f673b6",
        "endpoint": "78f5dbc37f11cb46",
        "mode": "single",
        "variable": "Bot1_Storage_Error",
        "program": "",
        "name": "",
        "x": 690,
        "y": 560,
        "wires": [
            [
                "e891cf3957ef2f43"
            ]
        ]
    },
    {
        "id": "240f23549e1cef3b",
        "type": "eth-ip out",
        "z": "127509e402f673b6",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "Gateway_To_Plc_Msg_Id",
        "program": "",
        "name": "",
        "x": 2210,
        "y": 400,
        "wires": []
    },
    {
        "id": "8f10b2ec63e2bb3b",
        "type": "eth-ip out",
        "z": "127509e402f673b6",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "Gateway_To_Plc_rRequest_Id_Ack",
        "program": "",
        "name": "",
        "x": 2240,
        "y": 480,
        "wires": []
    },
    {
        "id": "7446c0b2c0c34d36",
        "type": "eth-ip out",
        "z": "127509e402f673b6",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "Gateway_To_Plc_sRequest_Id_Ack",
        "program": "",
        "name": "",
        "x": 2240,
        "y": 520,
        "wires": []
    },
    {
        "id": "a11499f333cd8f3a",
        "type": "eth-ip out",
        "z": "127509e402f673b6",
        "endpoint": "78f5dbc37f11cb46",
        "variable": "Gateway_To_Plc_pRequest_Id_Ack",
        "program": "",
        "name": "",
        "x": 2240,
        "y": 560,
        "wires": []
    },
    {
        "id": "5ad4195533fa1608",
        "type": "subflow:abf459b12a58a7d6",
        "z": "7b229efa69ac7866",
        "name": "Write Database",
        "x": 720,
        "y": 100,
        "wires": []
    },
    {
        "id": "174abfca7c1eff91",
        "type": "subflow:168ce6884d330b26",
        "z": "7b229efa69ac7866",
        "name": "Azure status and other functions ",
        "x": 250,
        "y": 120,
        "wires": [
            [
                "dcf4aba0b4f3e532"
            ]
        ]
    },
    {
        "id": "af70719ce96f10fb",
        "type": "subflow:b21bd85f55499775",
        "z": "7b229efa69ac7866",
        "name": "Acknowlegement from PLC",
        "x": 270,
        "y": 80,
        "wires": [
            [
                "dcf4aba0b4f3e532",
                "5df80c723a9fca27"
            ]
        ]
    },
    {
        "id": "c18c342f7541c4bb",
        "type": "subflow:a27b931a44c8fb3e",
        "z": "7b229efa69ac7866",
        "name": "Read DB and send data to PLC",
        "x": 570,
        "y": 240,
        "wires": []
    },
    {
        "id": "dcf4aba0b4f3e532",
        "type": "azureiothub",
        "z": "7b229efa69ac7866",
        "name": "Azure IoT Hub",
        "protocol": "amqp",
        "x": 520,
        "y": 100,
        "wires": [
            [
                "5ad4195533fa1608"
            ]
        ]
    },
    {
        "id": "5df80c723a9fca27",
        "type": "file",
        "z": "7b229efa69ac7866",
        "name": "Write allreq CSV",
        "filename": "C:\\Datalog\\allreq.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 520,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "b0310dadd6ba326b",
        "type": "inject",
        "z": "7b229efa69ac7866",
        "name": "Manual trigger ",
        "props": [],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 320,
        "y": 240,
        "wires": [
            [
                "c18c342f7541c4bb"
            ]
        ]
    },
    {
        "id": "a5eff9b386b1b84d",
        "type": "mongodb out",
        "z": "7b229efa69ac7866",
        "mongodb": "8bdab089b2660f17",
        "name": "Delete ",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 490,
        "y": 320,
        "wires": []
    },
    {
        "id": "e376f4ed3c9fd3ce",
        "type": "inject",
        "z": "7b229efa69ac7866",
        "name": "Delete all data in DB",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 310,
        "y": 320,
        "wires": [
            [
                "a5eff9b386b1b84d"
            ]
        ]
    }
]