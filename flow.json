[
    {
        "id": "7b229efa69ac7866",
        "type": "tab",
        "label": "Azure IoT Mongo",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "168ce6884d330b26",
        "type": "subflow",
        "name": "Azure status and other functions",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1120,
                "y": 160,
                "wires": [
                    {
                        "id": "d1ee9a47f23ddfe9",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "20d2b7582d7ddefa",
        "type": "subflow",
        "name": "Read request from PLC",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1240,
                "y": 480,
                "wires": [
                    {
                        "id": "7693a10b7bf49208",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "a27b931a44c8fb3e",
        "type": "subflow",
        "name": "Read DB and send data to PLC",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "7d0cb4005397cfab"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "abf459b12a58a7d6",
        "type": "subflow",
        "name": "Write Database",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 120,
                "wires": [
                    {
                        "id": "9aa8473e67afb64f"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b21bd85f55499775",
        "type": "subflow",
        "name": "Acknowlegement from PLC",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1260,
                "y": 340,
                "wires": [
                    {
                        "id": "775d09a2837ea5a3",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "1a2adb57ddeb7e11",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "197be159bc54b2ae",
        "type": "subflow",
        "name": "Checks DB and update Dashboard ",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 440,
                "wires": [
                    {
                        "id": "03e3e42a2ada45e3"
                    },
                    {
                        "id": "1b87f4bc09144e6d"
                    },
                    {
                        "id": "942798d2e1eb5fb7"
                    },
                    {
                        "id": "4d144d3eb1c52ca5"
                    },
                    {
                        "id": "c71740018924808f"
                    },
                    {
                        "id": "cfaf7ae9ca9d69fd"
                    },
                    {
                        "id": "f67869a3d5750e15"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "f4ebc30243c09416",
        "type": "ui_group",
        "name": "Task completed",
        "tab": "a91f179c6c2c2418",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a91f179c6c2c2418",
        "type": "ui_tab",
        "name": "Carte+ Edge status ",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "773333850a653945",
        "type": "eth-ip endpoint",
        "address": "192.168.1.10",
        "slot": "0",
        "cycletime": "100",
        "name": "AB PLC",
        "vartable": {
            "": {
                "WMS_To_Plc_Msg.CommandType": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.rRequestId": {
                    "type": ""
                },
                "WMS_To_Plc_Msg.ToX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.sRequestId": {
                    "type": ""
                },
                "WMS_To_Plc_Msg.BinId": {
                    "type": ""
                },
                "WMS_To_Plc_Msg.pRequestId": {
                    "type": ""
                },
                "WMS_To_Plc_Msg.SkuId": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.PickQty": {
                    "type": "DINT"
                },
                "Plc_To_WMS_Msg.rRequestId": {
                    "type": ""
                },
                "Plc_To_WMS_Msg.sRequestId": {
                    "type": ""
                },
                "Plc_To_WMS_Msg.pRequestId": {
                    "type": ""
                },
                "Plc_To_Gateway_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_rRequest_Id_Ack": {
                    "type": ""
                },
                "Gateway_To_Plc_sRequest_Id_Ack": {
                    "type": ""
                },
                "Gateway_To_Plc_pRequest_Id_Ack": {
                    "type": ""
                },
                "MoverID[1].idle": {
                    "type": ""
                },
                "MoverID[2].idle": {
                    "type": ""
                },
                "MoverID[3].idle": {
                    "type": ""
                },
                "MoverID[4].idle": {
                    "type": ""
                },
                "Max_No_of_Bot": {
                    "type": ""
                },
                "Enable_Task": {
                    "type": ""
                },
                "Bot1_Storage_Error": {
                    "type": ""
                },
                "Bot2_Storage_Error": {
                    "type": ""
                }
            }
        }
    },
    {
        "id": "ad467d4fd7932147",
        "type": "eth-ip endpoint",
        "address": "192.168.1.10",
        "slot": "0",
        "cycletime": "100",
        "name": "AB PLC",
        "vartable": {
            "": {
                "WMS_To_Plc_Msg.CommandType": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.rRequestId": {
                    "type": null
                },
                "WMS_To_Plc_Msg.ToX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.sRequestId": {
                    "type": null
                },
                "WMS_To_Plc_Msg.BinId": {
                    "type": null
                },
                "WMS_To_Plc_Msg.pRequestId": {
                    "type": null
                },
                "WMS_To_Plc_Msg.SkuId": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.PickQty": {
                    "type": "DINT"
                },
                "Plc_To_WMS_Msg.rRequestId": {
                    "type": null
                },
                "Plc_To_WMS_Msg.sRequestId": {
                    "type": null
                },
                "Plc_To_WMS_Msg.pRequestId": {
                    "type": null
                },
                "Plc_To_Gateway_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_rRequest_Id_Ack": {
                    "type": null
                },
                "Gateway_To_Plc_sRequest_Id_Ack": {
                    "type": null
                },
                "Gateway_To_Plc_pRequest_Id_Ack": {
                    "type": null
                }
            }
        }
    },
    {
        "id": "8bdab089b2660f17",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "database",
        "name": ""
    },
    {
        "id": "dcc6c8e608e71d82",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "3d78b677.5d2c8a",
        "type": "sqlitedb",
        "db": "C:\\Users\\DELL\\Desktop\\PTL-Python\\SQLite.db",
        "mode": "RWC"
    },
    {
        "id": "2e14670c.5d4c98",
        "type": "mongodb",
        "hostname": "localhost",
        "port": "27017",
        "db": "test",
        "name": ""
    },
    {
        "id": "507905e135e26e8d",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "database",
        "name": ""
    },
    {
        "id": "1dc8f3e6fa36769b",
        "type": "eth-ip endpoint",
        "address": "192.168.2.252",
        "slot": "0",
        "cycletime": "100",
        "timeout": "3000000",
        "name": "AB PLC",
        "connectedMess": true,
        "vartable": {
            "": {
                "WMS_To_Plc_Msg.CommandType": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.rRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.ToX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.sRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.BinId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.pRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.SkuId": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.PickQty": {
                    "type": "DINT"
                },
                "Plc_To_WMS_Msg.rRequestId": {
                    "type": "STRING"
                },
                "Plc_To_WMS_Msg.sRequestId": {
                    "type": "STRING"
                },
                "Plc_To_WMS_Msg.pRequestId": {
                    "type": "STRING"
                },
                "Plc_To_Gateway_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_rRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Gateway_To_Plc_sRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Gateway_To_Plc_pRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Bot1_Storage_Error": {
                    "type": "BOOL"
                },
                "Bot2_Storage_Error": {
                    "type": "BOOL"
                },
                "Machine_Reset_ON": {
                    "type": "BOOL"
                },
                "Enable_Task_Handling": {
                    "type": "BOOL"
                },
                "FlushFIFO_Data": {
                    "type": "BOOL"
                },
                "Cmnd_Startup": {
                    "type": "BOOL"
                },
                "StartUp_Sequence_Number": {
                    "type": "INT"
                },
                "Mover_ID[1].Mover_Running_Seq": {
                    "type": "DINT"
                },
                "Mover_ID[2].Mover_Running_Seq": {
                    "type": "DINT"
                },
                "Mover_ID[1].ForkBot.Input.Single_Left_Storage_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[1].ForkBot.Input.Double_Left_Retrieval_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[2].ForkBot.Input.Single_Left_Storage_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[2].ForkBot.Input.Double_Left_Retrieval_Done": {
                    "type": "BOOL"
                },
                "GatewayMessageSequence_Number": {
                    "type": "INT"
                },
                "Enable_Queue": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "63b7f9e1d917f433",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "database",
        "name": ""
    },
    {
        "id": "78f5dbc37f11cb46",
        "type": "eth-ip endpoint",
        "address": "192.168.2.252",
        "slot": "0",
        "cycletime": "100",
        "timeout": "3000000",
        "name": "AB PLC",
        "connectedMess": true,
        "vartable": {
            "": {
                "WMS_To_Plc_Msg.CommandType": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.rRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.ToX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.sRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.BinId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.pRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.SkuId": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.PickQty": {
                    "type": "DINT"
                },
                "Plc_To_WMS_Msg.rRequestId": {
                    "type": "STRING"
                },
                "Plc_To_WMS_Msg.sRequestId": {
                    "type": "STRING"
                },
                "Plc_To_WMS_Msg.pRequestId": {
                    "type": "STRING"
                },
                "Plc_To_Gateway_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_rRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Gateway_To_Plc_sRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Gateway_To_Plc_pRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Bot1_Storage_Error": {
                    "type": "BOOL"
                },
                "Bot2_Storage_Error": {
                    "type": "BOOL"
                },
                "Machine_Reset_ON": {
                    "type": "BOOL"
                },
                "Enable_Task_Handling": {
                    "type": "BOOL"
                },
                "FlushFIFO_Data": {
                    "type": "BOOL"
                },
                "Cmnd_Startup": {
                    "type": "BOOL"
                },
                "StartUp_Sequence_Number": {
                    "type": "INT"
                },
                "Mover_ID[1].Mover_Running_Seq": {
                    "type": "DINT"
                },
                "Mover_ID[2].Mover_Running_Seq": {
                    "type": "DINT"
                },
                "Mover_ID[1].ForkBot.Input.Single_Left_Storage_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[1].ForkBot.Input.Double_Left_Retrieval_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[2].ForkBot.Input.Single_Left_Storage_Done": {
                    "type": "BOOL"
                },
                "Mover_ID[2].ForkBot.Input.Double_Left_Retrieval_Done": {
                    "type": "BOOL"
                },
                "GatewayMessageSequence_Number": {
                    "type": "INT"
                },
                "Enable_Queue": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "f4cf08050e338d7b",
        "type": "eth-ip endpoint",
        "address": "192.168.1.10",
        "slot": "0",
        "cycletime": "100",
        "timeout": "3000000",
        "name": "AB PLC",
        "connectedMess": true,
        "vartable": {
            "": {
                "WMS_To_Plc_Msg.CommandType": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.FromZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.rRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.ToX": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToY": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.ToZ": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.sRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.BinId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.pRequestId": {
                    "type": "STRING"
                },
                "WMS_To_Plc_Msg.SkuId": {
                    "type": "DINT"
                },
                "WMS_To_Plc_Msg.PickQty": {
                    "type": "DINT"
                },
                "Plc_To_WMS_Msg.rRequestId": {
                    "type": "STRING"
                },
                "Plc_To_WMS_Msg.sRequestId": {
                    "type": "STRING"
                },
                "Plc_To_WMS_Msg.pRequestId": {
                    "type": "STRING"
                },
                "Plc_To_Gateway_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_Msg_Id": {
                    "type": "DINT"
                },
                "Gateway_To_Plc_rRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Gateway_To_Plc_sRequest_Id_Ack": {
                    "type": "STRING"
                },
                "Gateway_To_Plc_pRequest_Id_Ack": {
                    "type": "STRING"
                }
            }
        }
    },
    {
        "id": "c73c6e8830fe35d9",
        "type": "ui_group",
        "name": "Audio Switch",
        "tab": "b99d0e74b9dec824",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b99d0e74b9dec824",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d588eb81b40b80e4",
        "type": "ui_group",
        "name": "Errors",
        "tab": "a91f179c6c2c2418",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "de98f73122196c31",
        "type": "ui_group",
        "name": "Cloud message",
        "tab": "a91f179c6c2c2418",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2b285486d89a8590",
        "type": "ui_group",
        "name": "Task running ",
        "tab": "a91f179c6c2c2418",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7ad2fde08d3c125b",
        "type": "ui_group",
        "name": "Queue",
        "tab": "a91f179c6c2c2418",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c35329e490967af3",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "",
        "func": "var Randomnumber = global.get(\"sequenceId\");\nmsg.payload = Randomnumber;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 400,
        "wires": [
            [
                "c13f89b5a9f77de8"
            ]
        ]
    },
    {
        "id": "1ae4a5de4fe181c8",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "Task2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1700,
        "y": 400,
        "wires": [
            [
                "c35329e490967af3"
            ]
        ]
    },
    {
        "id": "5b0c921e515d49d7",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "send id to plc continously",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1700,
        "y": 520,
        "wires": [
            [
                "3ce75bca1545495d",
                "f26e4b53bf9f2a36",
                "e6ca2d2a1b1a3da7"
            ]
        ]
    },
    {
        "id": "3ce75bca1545495d",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "",
        "func": "msg.payload  = global.get (\"Gateway_To_Plc_rRequest_Id_Ack\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 480,
        "wires": [
            [
                "291330fa96143469"
            ]
        ]
    },
    {
        "id": "f26e4b53bf9f2a36",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "",
        "func": "msg.payload  = global.get (\"Gateway_To_Plc_sRequest_Id_Ack\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 520,
        "wires": [
            [
                "ac33b1cfb1d8f8ab"
            ]
        ]
    },
    {
        "id": "e6ca2d2a1b1a3da7",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "",
        "func": "msg.payload  = global.get (\"Gateway_To_Plc_pRequest_Id_Ack\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 560,
        "wires": [
            [
                "e38f5f7a2d039940"
            ]
        ]
    },
    {
        "id": "03d636e3e0237e20",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 22",
        "func": "global.set(\"countercopied\", 0);\nglobal.set(\"queuecounter\", 0);\nglobal.set(\"reqcountercopied\", 0);\nglobal.set(\"reqqueuecounter\", 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "c26b67d15dfeca1c",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 590,
        "y": 740,
        "wires": [
            [
                "03d636e3e0237e20"
            ]
        ]
    },
    {
        "id": "f570237459f554b9",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "buffer to String",
        "func": "//var b=Buffer.from(msg.payload);\n//var s=b.toString();\nvar type = typeof msg.payload\nif (type == \"object\")\n{\n    msg.payload = JSON.parse(msg.payload)\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1060,
        "wires": [
            [
                "3059d104d8fab924"
            ]
        ]
    },
    {
        "id": "ae700514bdc9f499",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"properties\":{\"propertyList\":[]},\"messageId\":\"\",\"to\":\"\",\"expiryTimeUtc\":null,\"lockToken\":\"\",\"correlationId\":\"\",\"userId\":\"\",\"payload\":{\"type\":\"Buffer\",\"data\":[123,10,32,32,34,98,105,110,73,100,34,58,32,34,66,80,84,67,48,50,45,51,55,45,49,45,50,45,49,34,44,10,32,32,34,99,111,109,109,97,110,100,84,121,112,101,34,58,32,53,44,10,32,32,34,112,82,101,113,117,101,115,116,73,100,34,58,32,34,57,97,54,48,55,102,51,51,45,51,53,55,53,45,52,97,49,102,45,57,51,98,54,45,100,51,55,48,100,101,99,102,101,53,55,51,34,44,10,32,32,34,112,105,99,107,81,116,121,34,58,32,49,44,10,32,32,34,115,107,117,73,100,34,58,32,34,70,67,66,49,48,48,54,48,34,10,125]}}",
        "payloadType": "json",
        "x": 790,
        "y": 1080,
        "wires": [
            [
                "f570237459f554b9"
            ]
        ]
    },
    {
        "id": "3059d104d8fab924",
        "type": "debug",
        "z": "168ce6884d330b26",
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1080,
        "wires": []
    },
    {
        "id": "86f6fa421f27cd15",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "connect first scan",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 750,
        "y": 120,
        "wires": [
            [
                "d1ee9a47f23ddfe9"
            ]
        ]
    },
    {
        "id": "91c2d14297728a8a",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "disconnect manually",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "x": 750,
        "y": 160,
        "wires": [
            [
                "d1ee9a47f23ddfe9"
            ]
        ]
    },
    {
        "id": "5ed43246e522db81",
        "type": "trigger",
        "z": "168ce6884d330b26",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 760,
        "y": 200,
        "wires": [
            [
                "d1ee9a47f23ddfe9"
            ]
        ]
    },
    {
        "id": "464205922a79ea08",
        "type": "switch",
        "z": "168ce6884d330b26",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Disconnected",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Error",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 530,
        "y": 280,
        "wires": [
            [
                "5ed43246e522db81",
                "cfaacd34cc7acd0d"
            ],
            [
                "5ed43246e522db81",
                "cfaacd34cc7acd0d"
            ],
            [
                "0d13f8d48dc2412e"
            ]
        ]
    },
    {
        "id": "0d13f8d48dc2412e",
        "type": "change",
        "z": "168ce6884d330b26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 260,
        "wires": [
            [
                "5ed43246e522db81"
            ]
        ]
    },
    {
        "id": "9abdaafbf381a3e1",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "",
        "func": "global.set(\"Azure1Status\",msg.status.text);\nmsg.payload={\n    \"status\":msg.status.text\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 200,
        "wires": [
            [
                "464205922a79ea08",
                "3fe59fb04c3d59b5"
            ]
        ]
    },
    {
        "id": "cfaacd34cc7acd0d",
        "type": "trigger",
        "z": "168ce6884d330b26",
        "name": "",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 910,
        "y": 520,
        "wires": [
            [
                "5ce0f047f6b393b1"
            ]
        ]
    },
    {
        "id": "84f458adc8b8dfab",
        "type": "status",
        "z": "168ce6884d330b26",
        "name": "",
        "scope": [
            "842966e89dcb8992"
        ],
        "x": 200,
        "y": 200,
        "wires": [
            [
                "9abdaafbf381a3e1"
            ]
        ]
    },
    {
        "id": "3fe59fb04c3d59b5",
        "type": "debug",
        "z": "168ce6884d330b26",
        "name": "connection status Azure",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 80,
        "wires": []
    },
    {
        "id": "5ce0f047f6b393b1",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 21",
        "func": "var input =msg.payload\nvar text1 = \"hello \"\nvar text2 = \"Azure Connectivity Error\"\nif (input == true)\n{\nmsg.payload = text1.concat(text2);\n}\nelse\n{\n   msg.payload= \"Azure Connectivity done\"; \n}\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 520,
        "wires": [
            [
                "cd0a13b3141e0712"
            ]
        ]
    },
    {
        "id": "cd0a13b3141e0712",
        "type": "ui_audio",
        "z": "168ce6884d330b26",
        "name": "",
        "group": "f4ebc30243c09416",
        "voice": "Google UK English Female",
        "always": false,
        "x": 1400,
        "y": 540,
        "wires": []
    },
    {
        "id": "e5c4e1f93d77aedf",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 19",
        "func": "var sw=msg.payload;\nif (sw == true) \n{\nmsg.payload=\"alarm Enabled \";\n}\nelse \n{\nmsg.payload=\"alarm disabled \";\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 480,
        "wires": [
            [
                "cd0a13b3141e0712"
            ]
        ]
    },
    {
        "id": "33396929adf75cc1",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 20",
        "func": "msg.payload = \"Task Request Queue Unload Stopped\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 860,
        "wires": [
            [
                "cd0a13b3141e0712",
                "242b0c63615144ac"
            ]
        ]
    },
    {
        "id": "0d63375035b604f0",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 24",
        "func": "if (msg.payload == true) {\n    msg.payload = \"Bot 1 Emulate3d Error\";\n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 580,
        "wires": [
            [
                "cd0a13b3141e0712"
            ]
        ]
    },
    {
        "id": "e860f97e60f7f5b4",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 25",
        "func": "msg.payload = \"Acknowledgement Request Queue Unload Stopped\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 800,
        "wires": [
            [
                "cd0a13b3141e0712"
            ]
        ]
    },
    {
        "id": "2d667b62586bab62",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 26",
        "func": "if(msg.payload == true){\nmsg.payload = \"Bot 2 Emulate3d Error\";\nreturn msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 620,
        "wires": [
            [
                "cd0a13b3141e0712"
            ]
        ]
    },
    {
        "id": "d123c5dd50c6f2e9",
        "type": "ui_switch",
        "z": "168ce6884d330b26",
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "f4ebc30243c09416",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 930,
        "y": 480,
        "wires": [
            [
                "e5c4e1f93d77aedf"
            ]
        ]
    },
    {
        "id": "772d17640549f38f",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "Task QUeue Stopped",
        "func": "var counter=global.get(\"queuecounter\");\nvar ccopied = global.get(\"countercopied\");\nif (counter==ccopied && counter!=0){\n    msg.payload =\"Queue Failure\";\n    return msg;\n}\nelse{\n   // msg.payload =\"Queue Okay\"\nglobal.set(\"countercopied\", counter);\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 860,
        "wires": [
            [
                "33396929adf75cc1"
            ]
        ]
    },
    {
        "id": "242b0c63615144ac",
        "type": "debug",
        "z": "168ce6884d330b26",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 760,
        "wires": []
    },
    {
        "id": "b9396654d36322d6",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "Task Request QUeue Stopped",
        "func": "var counter=global.get(\"reqqueuecounter\");\nvar ccopied = global.get(\"reqcountercopied\");\nif (counter==ccopied && counter!=0){\n    msg.payload =\"Queue Failure\";\n    return msg;\n}\nelse{\n   // msg.payload =\"Queue Okay\"\nglobal.set(\"reqcountercopied\", counter);\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 800,
        "wires": [
            [
                "e860f97e60f7f5b4"
            ]
        ]
    },
    {
        "id": "29f00e345537275b",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 590,
        "y": 860,
        "wires": [
            [
                "772d17640549f38f"
            ]
        ]
    },
    {
        "id": "19d6d3c011b64e35",
        "type": "inject",
        "z": "168ce6884d330b26",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 590,
        "y": 800,
        "wires": [
            [
                "b9396654d36322d6"
            ]
        ]
    },
    {
        "id": "d1ee9a47f23ddfe9",
        "type": "function",
        "z": "168ce6884d330b26",
        "name": "function 29",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "5c4b2afac6e86f44",
        "type": "eth-ip in",
        "z": "168ce6884d330b26",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Bot1_Storage_Error",
        "program": "",
        "name": "",
        "x": 910,
        "y": 580,
        "wires": [
            [
                "0d63375035b604f0"
            ]
        ]
    },
    {
        "id": "2fc8432112c78d28",
        "type": "eth-ip in",
        "z": "168ce6884d330b26",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Bot2_Storage_Error",
        "program": "",
        "name": "",
        "x": 910,
        "y": 620,
        "wires": [
            [
                "2d667b62586bab62"
            ]
        ]
    },
    {
        "id": "c13f89b5a9f77de8",
        "type": "eth-ip out",
        "z": "168ce6884d330b26",
        "endpoint": "773333850a653945",
        "variable": "Gateway_To_Plc_Msg_Id",
        "program": "",
        "name": "",
        "x": 2190,
        "y": 400,
        "wires": []
    },
    {
        "id": "291330fa96143469",
        "type": "eth-ip out",
        "z": "168ce6884d330b26",
        "endpoint": "773333850a653945",
        "variable": "Gateway_To_Plc_rRequest_Id_Ack",
        "program": "",
        "name": "",
        "x": 2220,
        "y": 480,
        "wires": []
    },
    {
        "id": "ac33b1cfb1d8f8ab",
        "type": "eth-ip out",
        "z": "168ce6884d330b26",
        "endpoint": "773333850a653945",
        "variable": "Gateway_To_Plc_sRequest_Id_Ack",
        "program": "",
        "name": "",
        "x": 2220,
        "y": 520,
        "wires": []
    },
    {
        "id": "e38f5f7a2d039940",
        "type": "eth-ip out",
        "z": "168ce6884d330b26",
        "endpoint": "773333850a653945",
        "variable": "Gateway_To_Plc_pRequest_Id_Ack",
        "program": "",
        "name": "",
        "x": 2220,
        "y": 560,
        "wires": []
    },
    {
        "id": "7693a10b7bf49208",
        "type": "switch",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "property": "msg.payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ckplce3d",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1110,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "161f76d5e535a9bd",
        "type": "function",
        "z": "20d2b7582d7ddefa",
        "name": "Queue Count Capture",
        "func": "var count =msg._queueCount;\nglobal.set(\"reqqueuecounter\", count);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "e95d82b63661ffda",
        "type": "simple-queue",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "firstMessageBypass": true,
        "bypassInterval": "0",
        "x": 930,
        "y": 440,
        "wires": [
            [
                "161f76d5e535a9bd",
                "7693a10b7bf49208"
            ]
        ]
    },
    {
        "id": "a1af0365a39c91c0",
        "type": "change",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "queueCount",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 620,
        "wires": [
            [
                "e95d82b63661ffda"
            ]
        ]
    },
    {
        "id": "e7b970081118bc21",
        "type": "change",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 560,
        "wires": [
            [
                "e95d82b63661ffda"
            ]
        ]
    },
    {
        "id": "bb61a2904fa300c4",
        "type": "switch",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "property": "Azure1Status",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disconnected",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 560,
        "wires": [
            [],
            [],
            [
                "e7b970081118bc21"
            ]
        ]
    },
    {
        "id": "b6c5117fe07636da",
        "type": "function",
        "z": "20d2b7582d7ddefa",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n\n  \"deviceId\": \"ck-edge-test\",// \"ckplcprod\",\n  \"key\": \"4rmR7vjz0pMy85535C6SXbUubfHRjfrmEa996TANMCY=\",\n  \"protocol\": \"amqp\",\n  \"data\": {\n    \"requestId\": msg.payload\n  }\n}\nreturn msg;\n//carteplus-iothub-prod.azure-devices.net",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 480,
        "wires": [
            [
                "e95d82b63661ffda"
            ]
        ]
    },
    {
        "id": "73041e2730d81413",
        "type": "file",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "filename": "C:\\Datalog\\pRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 660,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "8a70adbc60eba39d",
        "type": "function",
        "z": "20d2b7582d7ddefa",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n\n    \"deviceId\": \"ck-edge-test\",// \"ckplcprod\",\n    \"key\": \"4rmR7vjz0pMy85535C6SXbUubfHRjfrmEa996TANMCY=\",\n    \"protocol\": \"amqp\",\n    \"data\": {\n        \"requestId\": msg.payload\n    }\n}\nreturn msg;\n//carteplus-iothub-prod.azure-devices.net",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 380,
        "wires": [
            [
                "e95d82b63661ffda"
            ]
        ]
    },
    {
        "id": "4d19052849a81e28",
        "type": "file",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "filename": "C:\\Datalog\\rRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 680,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "5f7db48c3ca62d95",
        "type": "function",
        "z": "20d2b7582d7ddefa",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n\n  \"deviceId\": \"ck-edge-test\",// \"ckplcprod\",\n  \"key\": \"4rmR7vjz0pMy85535C6SXbUubfHRjfrmEa996TANMCY=\",\n  \"protocol\": \"amqp\",\n  \"data\": {\n    \"requestId\": msg.payload\n  }\n}\nreturn msg;\n//carteplus-iothub-prod.azure-devices.net",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 280,
        "wires": [
            [
                "e95d82b63661ffda"
            ]
        ]
    },
    {
        "id": "77785c5479a32594",
        "type": "file",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "filename": "C:\\Datalog\\sRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 660,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "2fa22258378f78b4",
        "type": "function",
        "z": "20d2b7582d7ddefa",
        "name": "sRequsetId",
        "func": "global.set(\"Gateway_To_Plc_sRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 320,
        "wires": [
            [
                "77785c5479a32594"
            ]
        ]
    },
    {
        "id": "3ae7a229cbfde3ca",
        "type": "function",
        "z": "20d2b7582d7ddefa",
        "name": "rRequsetId",
        "func": "global.set(\"Gateway_To_Plc_rRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 220,
        "wires": [
            [
                "4d19052849a81e28"
            ]
        ]
    },
    {
        "id": "8a866b332eb44192",
        "type": "function",
        "z": "20d2b7582d7ddefa",
        "name": "pRequsetId",
        "func": "global.set(\"Gateway_To_Plc_pRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 420,
        "wires": [
            [
                "73041e2730d81413"
            ]
        ]
    },
    {
        "id": "7393c355ad20985c",
        "type": "inject",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "bb61a2904fa300c4"
            ]
        ]
    },
    {
        "id": "3d5bc94910c2b281",
        "type": "inject",
        "z": "20d2b7582d7ddefa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 640,
        "wires": [
            [
                "a1af0365a39c91c0"
            ]
        ]
    },
    {
        "id": "3d9557233b69f97c",
        "type": "eth-ip in",
        "z": "20d2b7582d7ddefa",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.rRequestId",
        "program": "",
        "name": "",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "3ae7a229cbfde3ca",
                "5f7db48c3ca62d95"
            ]
        ]
    },
    {
        "id": "083ebdb87977063c",
        "type": "eth-ip in",
        "z": "20d2b7582d7ddefa",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.sRequestId",
        "program": "",
        "name": "",
        "x": 190,
        "y": 320,
        "wires": [
            [
                "2fa22258378f78b4",
                "8a70adbc60eba39d"
            ]
        ]
    },
    {
        "id": "693fe02024e72646",
        "type": "eth-ip in",
        "z": "20d2b7582d7ddefa",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.pRequestId",
        "program": "",
        "name": "",
        "x": 190,
        "y": 420,
        "wires": [
            [
                "8a866b332eb44192",
                "b6c5117fe07636da"
            ]
        ]
    },
    {
        "id": "04db87075c2dc32a",
        "type": "mongodb out",
        "z": "a27b931a44c8fb3e",
        "mongodb": "8bdab089b2660f17",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 840,
        "y": 60,
        "wires": []
    },
    {
        "id": "a4f36c4de9f991e5",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "function 31",
        "func": "msg.query = { \"_id\": msg.payload[0]._id}\nmsg.payload = msg.payload[0]\nmsg.payload.ran_num = global.get(\"plctrigger\");\nmsg.payload.status = \"Sent to PLC\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 60,
        "wires": [
            [
                "04db87075c2dc32a",
                "4eceaefe693f31c7"
            ]
        ]
    },
    {
        "id": "4b230ef305221d80",
        "type": "mongodb in",
        "z": "a27b931a44c8fb3e",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 350,
        "y": 60,
        "wires": [
            [
                "e426270bc9c054d7"
            ]
        ]
    },
    {
        "id": "7d0cb4005397cfab",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "function 32",
        "func": "msg.payload = { \"status\": \"Recieved from cloud\" }\nmsg.limit = 1\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 60,
        "wires": [
            [
                "4b230ef305221d80"
            ]
        ]
    },
    {
        "id": "4eceaefe693f31c7",
        "type": "link out",
        "z": "a27b931a44c8fb3e",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "2ddfbeabf9c20d7c"
        ],
        "x": 795,
        "y": 100,
        "wires": []
    },
    {
        "id": "d0f30ea23840756b",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.FromY",
        "program": "",
        "name": "",
        "x": 840,
        "y": 360,
        "wires": []
    },
    {
        "id": "bdcd9d01e79f56ad",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data fromY",
        "func": "msg.payload = msg.payload.fromY\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 360,
        "wires": [
            [
                "d0f30ea23840756b"
            ]
        ]
    },
    {
        "id": "05615c6ffb8c76ca",
        "type": "switch",
        "z": "a27b931a44c8fb3e",
        "name": "",
        "property": "msg.payload.commandType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 130,
        "y": 440,
        "wires": [
            [
                "e57d164c46eba292",
                "b9a25fe1f727f7c5",
                "f20e2c0d052a2ef7",
                "bdcd9d01e79f56ad",
                "2f6bc208ae7e8771",
                "f12a4c37bbf81c04",
                "cc5b087158440bc7",
                "8a91fc859efbcf44",
                "7d116d59875298dd",
                "351091b8b66a4d78",
                "8cd7c7ef3aaaf16b"
            ],
            [
                "0dc9d5836e29e327",
                "d086390531b92a19",
                "4c71685ca697e9c3",
                "9e872ebec5c231ea",
                "da26367ea45c0dd0",
                "8cd7c7ef3aaaf16b"
            ],
            [
                "e57d164c46eba292",
                "b9a25fe1f727f7c5",
                "f20e2c0d052a2ef7",
                "bdcd9d01e79f56ad",
                "2f6bc208ae7e8771",
                "f12a4c37bbf81c04",
                "cc5b087158440bc7",
                "8a91fc859efbcf44",
                "7d116d59875298dd",
                "351091b8b66a4d78",
                "8cd7c7ef3aaaf16b"
            ]
        ]
    },
    {
        "id": "2ddfbeabf9c20d7c",
        "type": "link in",
        "z": "a27b931a44c8fb3e",
        "name": "link in 1",
        "links": [
            "4eceaefe693f31c7"
        ],
        "x": 35,
        "y": 440,
        "wires": [
            [
                "05615c6ffb8c76ca"
            ]
        ]
    },
    {
        "id": "e57d164c46eba292",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read commandType",
        "func": "msg.payload = msg.payload.commandType\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 240,
        "wires": [
            [
                "5d49c8b9a40cb62e"
            ]
        ]
    },
    {
        "id": "b9a25fe1f727f7c5",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data binId",
        "func": "msg.payload = msg.payload.binId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 280,
        "wires": [
            [
                "700950aa7917fe62"
            ]
        ]
    },
    {
        "id": "f20e2c0d052a2ef7",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data fromX",
        "func": "msg.payload = msg.payload.fromX\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 320,
        "wires": [
            [
                "60f9d0af5119bf7f"
            ]
        ]
    },
    {
        "id": "2f6bc208ae7e8771",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data fromZ",
        "func": "msg.payload = msg.payload.fromZ\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 400,
        "wires": [
            [
                "1702b6742423ba80"
            ]
        ]
    },
    {
        "id": "f12a4c37bbf81c04",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data rRequestId",
        "func": "msg.payload = msg.payload.rRequestId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 440,
        "wires": [
            [
                "d511083cb31c8256"
            ]
        ]
    },
    {
        "id": "cc5b087158440bc7",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data toX",
        "func": "msg.payload = msg.payload.toX\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 480,
        "wires": [
            [
                "a740b5b7c6eed77e"
            ]
        ]
    },
    {
        "id": "8a91fc859efbcf44",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data toY",
        "func": "msg.payload = msg.payload.toY\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 520,
        "wires": [
            [
                "ae6b4705327fd6ac"
            ]
        ]
    },
    {
        "id": "7d116d59875298dd",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data toZ",
        "func": "msg.payload = msg.payload.toZ\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 560,
        "wires": [
            [
                "4332c8c3f18a3ba9"
            ]
        ]
    },
    {
        "id": "351091b8b66a4d78",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data Column sRequestId",
        "func": "msg.payload = msg.payload.sRequestId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 600,
        "wires": [
            [
                "f0c9608b9435acc7"
            ]
        ]
    },
    {
        "id": "0dc9d5836e29e327",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data skuId",
        "func": "msg.payload = msg.payload.skuId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 740,
        "wires": [
            [
                "a29c58d18ee8e1f6"
            ]
        ]
    },
    {
        "id": "d086390531b92a19",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data pickQty",
        "func": "msg.payload = msg.payload.pickQty\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 780,
        "wires": [
            [
                "c33aad591171d6db"
            ]
        ]
    },
    {
        "id": "4c71685ca697e9c3",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data Column pRequestId",
        "func": "msg.payload = msg.payload.pRequestId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 820,
        "wires": [
            [
                "cd00977dfc86db92"
            ]
        ]
    },
    {
        "id": "9e872ebec5c231ea",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read commandType",
        "func": "msg.payload = msg.payload.commandType\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 660,
        "wires": [
            [
                "4cdacc2041215b66"
            ]
        ]
    },
    {
        "id": "da26367ea45c0dd0",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "Read Data binId",
        "func": "msg.payload = msg.payload.binId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 700,
        "wires": [
            [
                "c37844af36f37abd"
            ]
        ]
    },
    {
        "id": "5d49c8b9a40cb62e",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.CommandType",
        "program": "",
        "name": "",
        "x": 860,
        "y": 240,
        "wires": []
    },
    {
        "id": "700950aa7917fe62",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.BinId",
        "program": "",
        "name": "",
        "x": 830,
        "y": 280,
        "wires": []
    },
    {
        "id": "60f9d0af5119bf7f",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.FromX",
        "program": "",
        "name": "",
        "x": 840,
        "y": 320,
        "wires": []
    },
    {
        "id": "1702b6742423ba80",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.FromZ",
        "program": "",
        "name": "",
        "x": 830,
        "y": 400,
        "wires": []
    },
    {
        "id": "d511083cb31c8256",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.rRequestId",
        "program": "",
        "name": "",
        "x": 850,
        "y": 440,
        "wires": []
    },
    {
        "id": "a740b5b7c6eed77e",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.ToX",
        "program": "",
        "name": "",
        "x": 830,
        "y": 480,
        "wires": []
    },
    {
        "id": "ae6b4705327fd6ac",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.ToY",
        "program": "",
        "name": "",
        "x": 830,
        "y": 520,
        "wires": []
    },
    {
        "id": "4332c8c3f18a3ba9",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.ToZ",
        "program": "",
        "name": "",
        "x": 830,
        "y": 560,
        "wires": []
    },
    {
        "id": "f0c9608b9435acc7",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.sRequestId",
        "program": "",
        "name": "",
        "x": 850,
        "y": 600,
        "wires": []
    },
    {
        "id": "179f50c860b90853",
        "type": "debug",
        "z": "a27b931a44c8fb3e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 860,
        "wires": []
    },
    {
        "id": "a29c58d18ee8e1f6",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.SkuId",
        "program": "",
        "name": "",
        "x": 830,
        "y": 740,
        "wires": []
    },
    {
        "id": "c33aad591171d6db",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.PickQty",
        "program": "",
        "name": "",
        "x": 840,
        "y": 780,
        "wires": []
    },
    {
        "id": "cd00977dfc86db92",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.pRequestId",
        "program": "",
        "name": "",
        "x": 850,
        "y": 820,
        "wires": []
    },
    {
        "id": "4cdacc2041215b66",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.CommandType",
        "program": "",
        "name": "",
        "x": 860,
        "y": 660,
        "wires": []
    },
    {
        "id": "c37844af36f37abd",
        "type": "eth-ip out",
        "z": "a27b931a44c8fb3e",
        "endpoint": "ad467d4fd7932147",
        "variable": "WMS_To_Plc_Msg.BinId",
        "program": "",
        "name": "",
        "x": 830,
        "y": 700,
        "wires": []
    },
    {
        "id": "e426270bc9c054d7",
        "type": "switch",
        "z": "a27b931a44c8fb3e",
        "name": "",
        "property": "msg.payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 60,
        "wires": [
            [
                "a4f36c4de9f991e5"
            ]
        ]
    },
    {
        "id": "9e8c32e4c953f752",
        "type": "function",
        "z": "a27b931a44c8fb3e",
        "name": "generate random number for msg id to plc",
        "func": "var ggSeqName = \"sequenceId\";\nvar seq = global.get(ggSeqName) ||\n    Math.floor(Math.random() * 1000 * 1000 * 1000);\nseq = seq + 1;\nglobal.set(ggSeqName, seq);\nmsg.payload = {\n    \"timestamp\": msg.payload,\n    \"seq\": seq\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 860,
        "wires": [
            [
                "179f50c860b90853"
            ]
        ]
    },
    {
        "id": "8cd7c7ef3aaaf16b",
        "type": "delay",
        "z": "a27b931a44c8fb3e",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 490,
        "y": 860,
        "wires": [
            [
                "9e8c32e4c953f752"
            ]
        ]
    },
    {
        "id": "9aa8473e67afb64f",
        "type": "function",
        "z": "abf459b12a58a7d6",
        "name": "Convert BSON to JSON",
        "func": "const bufferData = msg.payload;\nconst jsonString = bufferData.toString('utf-8');\nconst dataObject = JSON.parse(jsonString);\nmsg.payload = dataObject;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 120,
        "wires": [
            [
                "a5c0beb60a335eb4",
                "4650798c501a1606"
            ]
        ]
    },
    {
        "id": "89f9675ed297ef66",
        "type": "mongodb out",
        "z": "abf459b12a58a7d6",
        "mongodb": "8bdab089b2660f17",
        "name": "Insert",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 770,
        "y": 120,
        "wires": []
    },
    {
        "id": "a5c0beb60a335eb4",
        "type": "function",
        "z": "abf459b12a58a7d6",
        "name": "function 30",
        "func": "msg.payload.status = \"Recieved from cloud\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 120,
        "wires": [
            [
                "89f9675ed297ef66"
            ]
        ]
    },
    {
        "id": "818ea5d21bec3bb3",
        "type": "function",
        "z": "abf459b12a58a7d6",
        "name": "Prepare random data",
        "func": "if (!flow.get('counter')) {\n    flow.set('counter', 0);\n}\n\nvar counter = flow.get('counter') + 1;\nflow.set('counter', counter);\n\nvar characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789012345678901234567890123456789012345678901234567890123456789';\nvar str5 = '', str1 = '', str2 = '', str3 = '', str4 = '', rrequest = '', srequest = '';\nvar binid ='BPTC02-37-0-1-3'\nfor (var i = 0; i < 8; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str1 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str2 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str3 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str4 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 12; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str5 += characters.charAt(randomIndex);\n}\nrrequest = str1 + '-' + str2 + '-' + str3 + '-' + str4 + '-' + str5;\n\nstr1 = str2 = str3 = str4 = str5=''\n\nfor (var i = 0; i < 8; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str1 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str2 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str3 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 4; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str4 += characters.charAt(randomIndex);\n}\n\nfor (var i = 0; i < 12; i++) {\n    var randomIndex = Math.floor(Math.random() * characters.length);\n    str5 += characters.charAt(randomIndex);\n}\nsrequest = str1 + '-' + str2 + '-' + str3 + '-' + str4 + '-' + str5;\nmsg.payload={ \n    \"binId\": \"TOTE0101010\" + counter, \n    \"commandType\": 1, \n    \"rRequestId\": rrequest, \n    \"sRequestId\": srequest, \n    \"toX\": 1, \"toY\": 1, \"toZ\": 1, \n    \"fromX\": 12, \"fromY\": 4, \"fromZ\": 1 \n    }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "d09ccbad2c64cbaf",
        "type": "inject",
        "z": "abf459b12a58a7d6",
        "name": "Generate and Inject Data",
        "props": [],
        "repeat": "7",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 40,
        "wires": [
            [
                "818ea5d21bec3bb3"
            ]
        ]
    },
    {
        "id": "4650798c501a1606",
        "type": "switch",
        "z": "abf459b12a58a7d6",
        "name": "",
        "property": "msg.payload.commandType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 220,
        "wires": [
            [
                "adf115c0cf6bb49f"
            ]
        ]
    },
    {
        "id": "adf115c0cf6bb49f",
        "type": "function",
        "z": "abf459b12a58a7d6",
        "name": "",
        "func": "var time = new Date();\nmsg.payload = {\n    \"message\":msg.payload,\n    \"timestamp\":time\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 220,
        "wires": [
            [
                "ddc7edb10406e859"
            ]
        ]
    },
    {
        "id": "ddc7edb10406e859",
        "type": "file",
        "z": "abf459b12a58a7d6",
        "name": "",
        "filename": "C:\\Datalog\\cloudmessage.csv",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 840,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "bc7e839c7307e51c",
        "type": "eth-ip in",
        "z": "b21bd85f55499775",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.sRequestId",
        "program": "",
        "name": "",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "eed806a91dd01b8c",
                "d00dc15cf41ed2af",
                "926072810e121b35"
            ]
        ]
    },
    {
        "id": "eed806a91dd01b8c",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "sRequsetId",
        "func": "global.set(\"Gateway_To_Plc_sRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 180,
        "wires": [
            [
                "e94bc83a49cb729c"
            ]
        ]
    },
    {
        "id": "d00dc15cf41ed2af",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n    \"requestId\": msg.payload\n}\n\nmsg.payload = JSON.stringify(msg.payload)\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 240,
        "wires": [
            [
                "587d4878410cd170"
            ]
        ]
    },
    {
        "id": "926072810e121b35",
        "type": "link out",
        "z": "b21bd85f55499775",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "95a946ace8a5fdca"
        ],
        "x": 385,
        "y": 220,
        "wires": []
    },
    {
        "id": "e94bc83a49cb729c",
        "type": "file",
        "z": "b21bd85f55499775",
        "name": "",
        "filename": "C:\\Datalog\\sRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 680,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "587d4878410cd170",
        "type": "simple-queue",
        "z": "b21bd85f55499775",
        "name": "",
        "firstMessageBypass": true,
        "bypassInterval": "0",
        "x": 950,
        "y": 300,
        "wires": [
            [
                "6563915a9e175031",
                "775d09a2837ea5a3"
            ]
        ]
    },
    {
        "id": "9b58794d1f21e9cf",
        "type": "change",
        "z": "b21bd85f55499775",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "queueCount",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 480,
        "wires": [
            [
                "587d4878410cd170"
            ]
        ]
    },
    {
        "id": "db43e39ce6b1ef3c",
        "type": "change",
        "z": "b21bd85f55499775",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 420,
        "wires": [
            [
                "587d4878410cd170"
            ]
        ]
    },
    {
        "id": "fd0aab21a3f963f0",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n  \"requestId\": msg.payload\n}\n\nmsg.payload = JSON.stringify(msg.payload)\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 340,
        "wires": [
            [
                "587d4878410cd170"
            ]
        ]
    },
    {
        "id": "7dfe1b0d862f6960",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "Writedatatoazure",
        "func": "msg.payload = {\n  \"requestId\": msg.payload\n}\n\nmsg.payload = JSON.stringify(msg.payload)\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 140,
        "wires": [
            [
                "587d4878410cd170"
            ]
        ]
    },
    {
        "id": "6563915a9e175031",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "Queue Count Capture",
        "func": "var count =msg._queueCount;\nglobal.set(\"reqqueuecounter\", count);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "775d09a2837ea5a3",
        "type": "switch",
        "z": "b21bd85f55499775",
        "name": "",
        "property": "msg.payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1130,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "206b330784552903",
        "type": "inject",
        "z": "b21bd85f55499775",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 370,
        "y": 500,
        "wires": [
            [
                "9b58794d1f21e9cf"
            ]
        ]
    },
    {
        "id": "57362a726bfb32a0",
        "type": "switch",
        "z": "b21bd85f55499775",
        "name": "",
        "property": "Azure1Status",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disconnected",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 470,
        "y": 420,
        "wires": [
            [],
            [],
            [
                "db43e39ce6b1ef3c"
            ]
        ]
    },
    {
        "id": "c457d1ed87fa5308",
        "type": "eth-ip in",
        "z": "b21bd85f55499775",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.pRequestId",
        "program": "",
        "name": "",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "e5da2a3c75866743",
                "fd0aab21a3f963f0",
                "24ea2502f7362e25"
            ]
        ]
    },
    {
        "id": "d196634cf360d7ad",
        "type": "eth-ip in",
        "z": "b21bd85f55499775",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Plc_To_WMS_Msg.rRequestId",
        "program": "",
        "name": "",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "c593c96a94a695b5",
                "7dfe1b0d862f6960",
                "1db70c93e855a135"
            ]
        ]
    },
    {
        "id": "60d5d5d3e28f39f3",
        "type": "inject",
        "z": "b21bd85f55499775",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1.5",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 420,
        "wires": [
            [
                "57362a726bfb32a0"
            ]
        ]
    },
    {
        "id": "e5da2a3c75866743",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "pRequsetId",
        "func": "global.set(\"Gateway_To_Plc_pRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 280,
        "wires": [
            [
                "6b683397dd449fc5"
            ]
        ]
    },
    {
        "id": "24ea2502f7362e25",
        "type": "link out",
        "z": "b21bd85f55499775",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "f6415885ca6b290a"
        ],
        "x": 385,
        "y": 320,
        "wires": []
    },
    {
        "id": "c593c96a94a695b5",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "rRequsetId",
        "func": "global.set(\"Gateway_To_Plc_rRequest_Id_Ack\",msg.payload);\nvar time = new Date();\nmsg.payload ={\n\"RequestId\" :msg.payload,\n\"timestamp\" :time\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 80,
        "wires": [
            [
                "9cd409e327f8a1b4"
            ]
        ]
    },
    {
        "id": "1db70c93e855a135",
        "type": "link out",
        "z": "b21bd85f55499775",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "1b6e432bd20c4993"
        ],
        "x": 375,
        "y": 120,
        "wires": []
    },
    {
        "id": "6b683397dd449fc5",
        "type": "file",
        "z": "b21bd85f55499775",
        "name": "",
        "filename": "C:\\Datalog\\pRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 680,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "9cd409e327f8a1b4",
        "type": "file",
        "z": "b21bd85f55499775",
        "name": "",
        "filename": "C:\\Datalog\\rRequestIds.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 700,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "12a58724ddade1e8",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 33",
        "func": "msg.payload = { \"sRequestId\": msg.payload}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 620,
        "wires": [
            [
                "52ebbb88cf12c53c"
            ]
        ]
    },
    {
        "id": "d60c399fc8adb2c7",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 34",
        "func": "msg.payload = { \"PRequestId\": msg.payload}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 700,
        "wires": [
            [
                "4726f78b4cd6ea9a"
            ]
        ]
    },
    {
        "id": "95a946ace8a5fdca",
        "type": "link in",
        "z": "b21bd85f55499775",
        "name": "link in 3",
        "links": [
            "926072810e121b35"
        ],
        "x": 305,
        "y": 620,
        "wires": [
            [
                "12a58724ddade1e8"
            ]
        ]
    },
    {
        "id": "f6415885ca6b290a",
        "type": "link in",
        "z": "b21bd85f55499775",
        "name": "link in 4",
        "links": [
            "24ea2502f7362e25"
        ],
        "x": 305,
        "y": 700,
        "wires": [
            [
                "d60c399fc8adb2c7"
            ]
        ]
    },
    {
        "id": "1b6e432bd20c4993",
        "type": "link in",
        "z": "b21bd85f55499775",
        "name": "link in 5",
        "links": [
            "1db70c93e855a135"
        ],
        "x": 305,
        "y": 760,
        "wires": [
            [
                "ca16a37db5227346"
            ]
        ]
    },
    {
        "id": "ca16a37db5227346",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 35",
        "func": "msg.payload = { \"rRequestId\": msg.payload }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 760,
        "wires": [
            [
                "9c71686891dc73db"
            ]
        ]
    },
    {
        "id": "9c71686891dc73db",
        "type": "mongodb in",
        "z": "b21bd85f55499775",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 610,
        "y": 760,
        "wires": [
            [
                "7c95d675bc9d596e"
            ]
        ]
    },
    {
        "id": "7c95d675bc9d596e",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 36",
        "func": "msg.query = { \"_id\": msg.payload[0]._id }\nmsg.payload = msg.payload[0]\n\nmsg.payload.status = \"rRequest recieved from PLC\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 760,
        "wires": [
            [
                "a755d98a29858474"
            ]
        ]
    },
    {
        "id": "a755d98a29858474",
        "type": "mongodb out",
        "z": "b21bd85f55499775",
        "mongodb": "8bdab089b2660f17",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 940,
        "y": 760,
        "wires": []
    },
    {
        "id": "52ebbb88cf12c53c",
        "type": "mongodb in",
        "z": "b21bd85f55499775",
        "mongodb": "63b7f9e1d917f433",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 610,
        "y": 620,
        "wires": [
            [
                "94be1ed149e32997"
            ]
        ]
    },
    {
        "id": "94be1ed149e32997",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 40",
        "func": "msg.query = { \"_id\": msg.payload[0]._id}\nmsg.payload = msg.payload[0]\nif (msg.payload.status == \"rRequest recieved from PLC\") \n{\n    msg.payload.status = \"rRequest and sRequest recieved from PLC\"\n}\nelse\n{ \n    msg.payload.status = \"Error: sRequest recieved and rRequest missing from PLC\" \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 620,
        "wires": [
            [
                "afe90f0d4829a716"
            ]
        ]
    },
    {
        "id": "afe90f0d4829a716",
        "type": "mongodb out",
        "z": "b21bd85f55499775",
        "mongodb": "63b7f9e1d917f433",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 940,
        "y": 620,
        "wires": []
    },
    {
        "id": "6742fbf1e7160334",
        "type": "mongodb out",
        "z": "b21bd85f55499775",
        "mongodb": "63b7f9e1d917f433",
        "name": "Update",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 940,
        "y": 700,
        "wires": []
    },
    {
        "id": "496d7474ddb8b782",
        "type": "function",
        "z": "b21bd85f55499775",
        "name": "function 41",
        "func": "msg.query = { \"_id\": msg.payload[0]._id}\nmsg.payload = msg.payload[0]\n\nmsg.payload.status = \"pRequest recieved from PLC\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 700,
        "wires": [
            [
                "6742fbf1e7160334"
            ]
        ]
    },
    {
        "id": "4726f78b4cd6ea9a",
        "type": "mongodb in",
        "z": "b21bd85f55499775",
        "mongodb": "63b7f9e1d917f433",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 610,
        "y": 700,
        "wires": [
            [
                "496d7474ddb8b782"
            ]
        ]
    },
    {
        "id": "03e3e42a2ada45e3",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 56",
        "func": "msg.payload = { \"status\": \"Error: sRequest recieved and rRequest missing from PLC\" }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 260,
        "wires": [
            [
                "5ada1ae64fe73909"
            ]
        ]
    },
    {
        "id": "5ada1ae64fe73909",
        "type": "mongodb in",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 350,
        "y": 260,
        "wires": [
            [
                "f1f9c48b0c914625",
                "efb7f21f3155c075"
            ]
        ]
    },
    {
        "id": "f1f9c48b0c914625",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 57",
        "func": "const payload = msg.payload;\n\nif (Array.isArray(payload)) \n{\n    const numberOfObjects = payload.length;\n    msg.payload = numberOfObjects;\n    return msg;\n} else \n{  \n    msg.payload = 0; \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 260,
        "wires": [
            [
                "84c4974d4d393e75"
            ]
        ]
    },
    {
        "id": "84c4974d4d393e75",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "d588eb81b40b80e4",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "sRequest received and PLC failed to send rRequest",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#f20707",
        "x": 770,
        "y": 260,
        "wires": []
    },
    {
        "id": "1b87f4bc09144e6d",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 58",
        "func": "msg.payload = { \"status\": \"Sent to PLC\" }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 320,
        "wires": [
            [
                "aa81741e1f8356bc"
            ]
        ]
    },
    {
        "id": "aa81741e1f8356bc",
        "type": "mongodb in",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 350,
        "y": 320,
        "wires": [
            [
                "91a82664cc1a69a8"
            ]
        ]
    },
    {
        "id": "91a82664cc1a69a8",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 59",
        "func": "const payload = msg.payload;\n\nif (Array.isArray(payload)) \n{\n    const numberOfObjects = payload.length;\n    msg.payload = numberOfObjects;\n    return msg;\n} else \n{  \n    msg.payload = 0; \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 320,
        "wires": [
            [
                "afc42e95e5173537"
            ]
        ]
    },
    {
        "id": "afc42e95e5173537",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "2b285486d89a8590",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Both rRequest and sRequest not recieved ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": 16,
        "color": "#ff7300",
        "x": 740,
        "y": 320,
        "wires": []
    },
    {
        "id": "942798d2e1eb5fb7",
        "type": "mongodb in",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 350,
        "y": 380,
        "wires": [
            [
                "5696c98c05aaa09f"
            ]
        ]
    },
    {
        "id": "5696c98c05aaa09f",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 60",
        "func": "const payload = msg.payload;\n\nif (Array.isArray(payload)) \n{\n    const numberOfObjects = payload.length;\n    msg.payload = numberOfObjects;\n    return msg;\n} else \n{  \n    msg.payload = 0; \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 380,
        "wires": [
            [
                "955b74843ad2b109"
            ]
        ]
    },
    {
        "id": "955b74843ad2b109",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "de98f73122196c31",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Total messages received from cloud",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 720,
        "y": 380,
        "wires": []
    },
    {
        "id": "4d144d3eb1c52ca5",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 61",
        "func": "msg.payload = { \"status\": \"Recieved from cloud\" }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 440,
        "wires": [
            [
                "447bb018602b924a"
            ]
        ]
    },
    {
        "id": "447bb018602b924a",
        "type": "mongodb in",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 350,
        "y": 440,
        "wires": [
            [
                "6a8c10f8c99c039e"
            ]
        ]
    },
    {
        "id": "6a8c10f8c99c039e",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 62",
        "func": "const payload = msg.payload;\n\nif (Array.isArray(payload)) \n{\n    const numberOfObjects = payload.length;\n    msg.payload = numberOfObjects;\n    return msg;\n} else \n{  \n    msg.payload = 0; \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 440,
        "wires": [
            [
                "32506cf446f5bf10"
            ]
        ]
    },
    {
        "id": "32506cf446f5bf10",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "7ad2fde08d3c125b",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Queue count in MongoDB",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 690,
        "y": 440,
        "wires": []
    },
    {
        "id": "c71740018924808f",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 63",
        "func": "msg.payload = { \"status\": \"rRequest recieved from PLC\" }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 500,
        "wires": [
            [
                "dbf041e9613a2204"
            ]
        ]
    },
    {
        "id": "dbf041e9613a2204",
        "type": "mongodb in",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 350,
        "y": 500,
        "wires": [
            [
                "66c10fd9a8dc2443"
            ]
        ]
    },
    {
        "id": "66c10fd9a8dc2443",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 64",
        "func": "const payload = msg.payload;\n\nif (Array.isArray(payload)) \n{\n    const numberOfObjects = payload.length;\n    msg.payload = numberOfObjects;\n    return msg;\n} else \n{  \n    msg.payload = 0; \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 500,
        "wires": [
            [
                "b607653674ceb54c"
            ]
        ]
    },
    {
        "id": "b607653674ceb54c",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "2b285486d89a8590",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "rRequest received from PLC",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": 16,
        "color": "#ff7300",
        "x": 700,
        "y": 500,
        "wires": []
    },
    {
        "id": "cfaf7ae9ca9d69fd",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 65",
        "func": "msg.payload = { \"status\": \"rRequest and sRequest recieved from PLC\" }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 560,
        "wires": [
            [
                "fff788730565c094"
            ]
        ]
    },
    {
        "id": "fff788730565c094",
        "type": "mongodb in",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 350,
        "y": 560,
        "wires": [
            [
                "df26f28e3461e92a"
            ]
        ]
    },
    {
        "id": "df26f28e3461e92a",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 66",
        "func": "const payload = msg.payload;\n\nif (Array.isArray(payload)) \n{\n    const numberOfObjects = payload.length;\n    msg.payload = numberOfObjects;\n    return msg;\n} else \n{  \n    msg.payload = 0; \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 560,
        "wires": [
            [
                "7ba0968f5c6f6303"
            ]
        ]
    },
    {
        "id": "7ba0968f5c6f6303",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "f4ebc30243c09416",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "rRequest and sRequest received from PLC",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": 16,
        "color": "#16ca2b",
        "x": 750,
        "y": 560,
        "wires": []
    },
    {
        "id": "f67869a3d5750e15",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 67",
        "func": "msg.payload = { \"status\": \"pRequest recieved from PLC\" }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 620,
        "wires": [
            [
                "2a8234a0ca223f56"
            ]
        ]
    },
    {
        "id": "2a8234a0ca223f56",
        "type": "mongodb in",
        "z": "197be159bc54b2ae",
        "mongodb": "8bdab089b2660f17",
        "name": "read",
        "collection": "table",
        "operation": "find",
        "x": 350,
        "y": 620,
        "wires": [
            [
                "06d8a2980a32b16c"
            ]
        ]
    },
    {
        "id": "06d8a2980a32b16c",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 68",
        "func": "const payload = msg.payload;\n\nif (Array.isArray(payload)) \n{\n    const numberOfObjects = payload.length;\n    msg.payload = numberOfObjects;\n    return msg;\n} else \n{  \n    msg.payload = 0; \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 620,
        "wires": [
            [
                "17247a672d3d9ef5"
            ]
        ]
    },
    {
        "id": "17247a672d3d9ef5",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "f4ebc30243c09416",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "pRequest received from PLC",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": 16,
        "color": "#16ca2b",
        "x": 700,
        "y": 620,
        "wires": []
    },
    {
        "id": "efb7f21f3155c075",
        "type": "function",
        "z": "197be159bc54b2ae",
        "name": "function 69",
        "func": "const payload = msg.payload;\nvar numberOfObjects;\nvar text=\" \";\nif (Array.isArray(payload)) \n{\n numberOfObjects = payload.length;\n} \nelse \n{\n    numberOfObjects = 0;\n}\n\nfor (var i = 0; i < numberOfObjects;i++)\n{\n    text = text + \"-------{Sreq:\" + msg.payload[i].sRequestId + \"To X,y,Z: \" + msg.payload[i].toX + \",\" + msg.payload[i].toY + \",\" + msg.payload[i].toZ + \",  From X,y,Z: \" + msg.payload[i].fromX + \",\" + msg.payload[i].fromY + \",\" + msg.payload[i].fromZ + \"}\"\n}\n\nmsg.payload=text;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 220,
        "wires": [
            [
                "fb25ffcadccef949"
            ]
        ]
    },
    {
        "id": "fb25ffcadccef949",
        "type": "ui_text",
        "z": "197be159bc54b2ae",
        "group": "d588eb81b40b80e4",
        "order": 2,
        "width": "6",
        "height": "6",
        "name": "",
        "label": "Error orders",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#f20707",
        "x": 650,
        "y": 220,
        "wires": []
    },
    {
        "id": "5ad4195533fa1608",
        "type": "subflow:abf459b12a58a7d6",
        "z": "7b229efa69ac7866",
        "name": "Write Database",
        "x": 720,
        "y": 100,
        "wires": []
    },
    {
        "id": "174abfca7c1eff91",
        "type": "subflow:168ce6884d330b26",
        "z": "7b229efa69ac7866",
        "name": "Azure status and other functions ",
        "x": 250,
        "y": 120,
        "wires": [
            [
                "dcf4aba0b4f3e532"
            ]
        ]
    },
    {
        "id": "af70719ce96f10fb",
        "type": "subflow:b21bd85f55499775",
        "z": "7b229efa69ac7866",
        "name": "Acknowlegement from PLC",
        "x": 270,
        "y": 80,
        "wires": [
            [
                "dcf4aba0b4f3e532",
                "5df80c723a9fca27"
            ]
        ]
    },
    {
        "id": "c18c342f7541c4bb",
        "type": "subflow:a27b931a44c8fb3e",
        "z": "7b229efa69ac7866",
        "name": "Read DB and send data to PLC",
        "x": 570,
        "y": 200,
        "wires": []
    },
    {
        "id": "dcf4aba0b4f3e532",
        "type": "azureiothub",
        "z": "7b229efa69ac7866",
        "name": "Azure IoT Hub",
        "protocol": "amqp",
        "x": 520,
        "y": 100,
        "wires": [
            [
                "5ad4195533fa1608"
            ]
        ]
    },
    {
        "id": "5df80c723a9fca27",
        "type": "file",
        "z": "7b229efa69ac7866",
        "name": "Write allreq CSV",
        "filename": "C:\\Datalog\\allreq.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 520,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "b0310dadd6ba326b",
        "type": "inject",
        "z": "7b229efa69ac7866",
        "name": "Manual trigger ",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 310,
        "y": 180,
        "wires": [
            [
                "c18c342f7541c4bb"
            ]
        ]
    },
    {
        "id": "a5eff9b386b1b84d",
        "type": "mongodb out",
        "z": "7b229efa69ac7866",
        "mongodb": "8bdab089b2660f17",
        "name": "Delete ",
        "collection": "table",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 490,
        "y": 400,
        "wires": []
    },
    {
        "id": "e376f4ed3c9fd3ce",
        "type": "inject",
        "z": "7b229efa69ac7866",
        "name": "Delete all data in DB",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 310,
        "y": 400,
        "wires": [
            [
                "a5eff9b386b1b84d"
            ]
        ]
    },
    {
        "id": "38d76d82a36dcc1d",
        "type": "eth-ip in",
        "z": "7b229efa69ac7866",
        "endpoint": "773333850a653945",
        "mode": "single",
        "variable": "Plc_To_Gateway_Msg_Id",
        "program": "",
        "name": "",
        "x": 270,
        "y": 220,
        "wires": [
            [
                "c18c342f7541c4bb"
            ]
        ]
    },
    {
        "id": "3547d063221849c1",
        "type": "status",
        "z": "7b229efa69ac7866",
        "name": "",
        "scope": [
            "38d76d82a36dcc1d"
        ],
        "x": 340,
        "y": 280,
        "wires": [
            [
                "7bd9b25eb8c0b5bd"
            ]
        ]
    },
    {
        "id": "7bd9b25eb8c0b5bd",
        "type": "function",
        "z": "7b229efa69ac7866",
        "name": "",
        "func": "global.set(\"plctrigger\",msg.status.text);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "42104bad2c9a08b3",
        "type": "inject",
        "z": "7b229efa69ac7866",
        "name": "Update UI every 0.5 sec",
        "props": [],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 270,
        "y": 340,
        "wires": [
            [
                "72765ba38fc4a002"
            ]
        ]
    },
    {
        "id": "72765ba38fc4a002",
        "type": "subflow:197be159bc54b2ae",
        "z": "7b229efa69ac7866",
        "name": "",
        "x": 540,
        "y": 340,
        "wires": []
    }
]